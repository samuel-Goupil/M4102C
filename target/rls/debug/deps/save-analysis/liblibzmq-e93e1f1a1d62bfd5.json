{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5","program":"/home/iut/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","libzmq","--edition=2018","/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e93e1f1a1d62bfd5","-C","extra-filename=-e93e1f1a1d62bfd5","--out-dir","/home/iut/M4102C/target/rls/debug/deps","-L","dependency=/home/iut/M4102C/target/rls/debug/deps","--extern","bincode=/home/iut/M4102C/target/rls/debug/deps/libbincode-f8a326f1a88d7e4a.rmeta","--extern","bitflags=/home/iut/M4102C/target/rls/debug/deps/libbitflags-8012c52f40cad26f.rmeta","--extern","byteorder=/home/iut/M4102C/target/rls/debug/deps/libbyteorder-ea036c48c400cf6b.rmeta","--extern","humantime_serde=/home/iut/M4102C/target/rls/debug/deps/libhumantime_serde-f176e96226a6b510.rmeta","--extern","lazy_static=/home/iut/M4102C/target/rls/debug/deps/liblazy_static-1afbd4bd273784b5.rmeta","--extern","libc=/home/iut/M4102C/target/rls/debug/deps/liblibc-60dece1bbc846a3f.rmeta","--extern","libzmq_sys=/home/iut/M4102C/target/rls/debug/deps/liblibzmq_sys-dc4a40a2f6e56b03.rmeta","--extern","log=/home/iut/M4102C/target/rls/debug/deps/liblog-b01dcfac3315b23f.rmeta","--extern","serde=/home/iut/M4102C/target/rls/debug/deps/libserde-e865578d97ca0ef3.rmeta","--extern","serde_with=/home/iut/M4102C/target/rls/debug/deps/libserde_with-24fd56ea9a82042f.rmeta","--extern","thiserror=/home/iut/M4102C/target/rls/debug/deps/libthiserror-dc2a8b804a591dd0.rmeta","--extern","uuid=/home/iut/M4102C/target/rls/debug/deps/libuuid-d6e67a76004a3cd5.rmeta","--cap-lints","allow","-L","native=/home/iut/M4102C/target/rls/debug/build/libzmq-sys-a82104b5cff9cc43/out/lib","--error-format=json","--sysroot","/home/iut/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iut/M4102C/target/rls/debug/deps/liblibzmq-e93e1f1a1d62bfd5.rmeta"},"prelude":{"crate_id":{"name":"libzmq","disambiguator":[5401164573704445754,10909363949501541721]},"crate_root":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src","external_crates":[{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12673765241971086519,1979875191208036248]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16221439354469382097,15565837348772828253]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15613252303691562375,4556165055238676072]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12269617896898487533,65142111397584226]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15862783141653200230,4773813417861420487]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[501305773035659233,3889300012469539238]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9126002216567348836,15610270334556716503]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9479301707518706798,13352731276321566042]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[15203654865662241151,17897348793673631766]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10290502124864695413,7672610073830174493]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14838544226648722576,13006716085524361330]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9246889555580827340,16878203682218964580]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8284748314555817558,4769950866534510046]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14671874173783541769,17969261176539820175]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","num":15,"id":{"name":"serde","disambiguator":[4878989833009055722,6789917710919305992]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","num":16,"id":{"name":"serde_derive","disambiguator":[12823798121206892568,12854773159673431200]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","num":17,"id":{"name":"libzmq_sys","disambiguator":[16939835249806521193,14248793048837147743]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/sockopt.rs","num":18,"id":{"name":"libc","disambiguator":[13262631658409107445,17041285765749698595]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","num":19,"id":{"name":"log","disambiguator":[2121990030805676196,15359464705929844027]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","num":20,"id":{"name":"cfg_if","disambiguator":[15827525173548159870,8372847108566091306]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","num":21,"id":{"name":"humantime_serde","disambiguator":[14642996998263118255,3764276546300262314]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","num":22,"id":{"name":"humantime","disambiguator":[8164746672112110692,9215664584484040265]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","num":23,"id":{"name":"thiserror","disambiguator":[15697843225760120685,2380165944293619410]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","num":24,"id":{"name":"thiserror_impl","disambiguator":[11503016647318448983,17388465050012380472]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","num":25,"id":{"name":"byteorder","disambiguator":[11768117471109877957,7676367325997016419]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","num":26,"id":{"name":"lazy_static","disambiguator":[8531607769344049769,5565090804460170418]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","num":27,"id":{"name":"uuid","disambiguator":[11488608975517196488,10022480118833324332]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","num":28,"id":{"name":"getrandom","disambiguator":[9788274375626059352,10910825568595412416]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","num":29,"id":{"name":"cfg_if","disambiguator":[10610299277227032767,6368259633480504452]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","num":30,"id":{"name":"bitflags","disambiguator":[8265728201036081832,5958351863204443504]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","num":31,"id":{"name":"bincode","disambiguator":[11898968201171609064,7151018085928088596]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","num":32,"id":{"name":"serde_with","disambiguator":[7931425059763562116,12437456163914192962]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","num":33,"id":{"name":"serde_with_macros","disambiguator":[2362856606423674936,6636692655047913762]}}],"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":0,"byte_end":2155,"line_start":1,"line_end":81,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2685},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71237,"byte_end":71248,"line_start":17,"line_end":17,"column_start":18,"column_end":29},"alias_span":null,"name":"AuthBuilder","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71250,"byte_end":71260,"line_start":17,"line_end":17,"column_start":31,"column_end":41},"alias_span":null,"name":"AuthClient","value":"","parent":{"krate":0,"index":399}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71278,"byte_end":71279,"line_start":18,"line_end":18,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"BinCurveKey, CurveCert, CurveClientCreds, CurvePublicKey, CurveServerCreds","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":0,"index":3084},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71298,"byte_end":71308,"line_start":19,"line_end":19,"column_start":18,"column_end":28},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":0,"index":3108},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71310,"byte_end":71330,"line_start":19,"line_end":19,"column_start":30,"column_end":50},"alias_span":null,"name":"StatusCodeParseError","value":"","parent":{"krate":0,"index":399}},{"kind":"Use","ref_id":{"krate":0,"index":2075},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":278,"byte_end":287,"line_start":18,"line_end":18,"column_start":23,"column_end":32},"alias_span":null,"name":"Heartbeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2380},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":289,"byte_end":295,"line_start":18,"line_end":18,"column_start":34,"column_end":40},"alias_span":null,"name":"Period","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3495},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":312,"byte_end":315,"line_start":19,"line_end":19,"column_start":15,"column_end":18},"alias_span":null,"name":"Ctx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3418},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":317,"byte_end":327,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"alias_span":null,"name":"CtxBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3481},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":329,"byte_end":338,"line_start":19,"line_end":19,"column_start":32,"column_end":41},"alias_span":null,"name":"CtxHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3793},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":365,"byte_end":373,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"alias_span":null,"name":"EpgmAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3828},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":375,"byte_end":385,"line_start":21,"line_end":21,"column_start":15,"column_end":25},"alias_span":null,"name":"InprocAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3758},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":387,"byte_end":394,"line_start":21,"line_end":21,"column_start":27,"column_end":34},"alias_span":null,"name":"PgmAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3688},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":396,"byte_end":403,"line_start":21,"line_end":21,"column_start":36,"column_end":43},"alias_span":null,"name":"TcpAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3723},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":405,"byte_end":412,"line_start":21,"line_end":21,"column_start":45,"column_end":52},"alias_span":null,"name":"UdpAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":887},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":414,"byte_end":429,"line_start":21,"line_end":21,"column_start":54,"column_end":69},"alias_span":null,"name":"INPROC_MAX_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":450,"byte_end":455,"line_start":23,"line_end":23,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3932},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":457,"byte_end":466,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":484,"byte_end":485,"line_start":24,"line_end":24,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"GroupSlice, Group","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":484,"byte_end":485,"line_start":24,"line_end":24,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"RoutingId, Msg","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4491},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":525,"byte_end":531,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4610},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":533,"byte_end":546,"line_start":27,"line_end":27,"column_start":13,"column_end":26},"alias_span":null,"name":"ClientBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4675},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":548,"byte_end":552,"line_start":27,"line_end":27,"column_start":28,"column_end":32},"alias_span":null,"name":"Dish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4781},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":554,"byte_end":565,"line_start":27,"line_end":27,"column_start":34,"column_end":45},"alias_span":null,"name":"DishBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4846},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":567,"byte_end":573,"line_start":27,"line_end":27,"column_start":47,"column_end":53},"alias_span":null,"name":"Gather","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4951},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":575,"byte_end":588,"line_start":27,"line_end":27,"column_start":55,"column_end":68},"alias_span":null,"name":"GatherBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5016},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":590,"byte_end":595,"line_start":27,"line_end":27,"column_start":70,"column_end":75},"alias_span":null,"name":"Radio","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5126},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":601,"byte_end":613,"line_start":28,"line_end":28,"column_start":5,"column_end":17},"alias_span":null,"name":"RadioBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5144},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":615,"byte_end":622,"line_start":28,"line_end":28,"column_start":19,"column_end":26},"alias_span":null,"name":"Scatter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5249},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":624,"byte_end":638,"line_start":28,"line_end":28,"column_start":28,"column_end":42},"alias_span":null,"name":"ScatterBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5314},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":640,"byte_end":646,"line_start":28,"line_end":28,"column_start":44,"column_end":50},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5433},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":648,"byte_end":661,"line_start":28,"line_end":28,"column_start":52,"column_end":65},"alias_span":null,"name":"ServerBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5451},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":663,"byte_end":673,"line_start":28,"line_end":28,"column_start":67,"column_end":77},"alias_span":null,"name":"SocketType","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":484,"byte_end":485,"line_start":24,"line_end":24,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2608},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":785,"byte_end":795,"line_start":33,"line_end":33,"column_start":34,"column_end":44},"alias_span":null,"name":"AuthConfig","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":3352},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":821,"byte_end":830,"line_start":34,"line_end":34,"column_start":25,"column_end":34},"alias_span":null,"name":"CtxConfig","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":4504},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":869,"byte_end":881,"line_start":36,"line_end":36,"column_start":9,"column_end":21},"alias_span":null,"name":"ClientConfig","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":5481},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":883,"byte_end":893,"line_start":36,"line_end":36,"column_start":23,"column_end":33},"alias_span":null,"name":"ConfigType","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":4682},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":895,"byte_end":905,"line_start":36,"line_end":36,"column_start":35,"column_end":45},"alias_span":null,"name":"DishConfig","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":4852},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":907,"byte_end":919,"line_start":36,"line_end":36,"column_start":47,"column_end":59},"alias_span":null,"name":"GatherConfig","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":5029},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":921,"byte_end":932,"line_start":36,"line_end":36,"column_start":61,"column_end":72},"alias_span":null,"name":"RadioConfig","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":5150},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":942,"byte_end":955,"line_start":37,"line_end":37,"column_start":9,"column_end":22},"alias_span":null,"name":"ScatterConfig","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":5327},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":957,"byte_end":969,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"alias_span":null,"name":"ServerConfig","value":"","parent":{"krate":0,"index":2037}},{"kind":"Use","ref_id":{"krate":0,"index":3506},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1062,"byte_end":1076,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":2048}},{"kind":"Use","ref_id":{"krate":0,"index":3851},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1078,"byte_end":1086,"line_start":44,"line_end":44,"column_start":25,"column_end":33},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":2048}},{"kind":"Use","ref_id":{"krate":0,"index":3513},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1088,"byte_end":1096,"line_start":44,"line_end":44,"column_start":35,"column_end":43},"alias_span":null,"name":"Hostname","value":"","parent":{"krate":0,"index":2048}},{"kind":"Use","ref_id":{"krate":0,"index":3575},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1098,"byte_end":1107,"line_start":44,"line_end":44,"column_start":45,"column_end":54},"alias_span":null,"name":"Interface","value":"","parent":{"krate":0,"index":2048}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1109,"byte_end":1120,"line_start":44,"line_end":44,"column_start":56,"column_end":67},"alias_span":null,"name":"IntoIpAddrs","value":"","parent":{"krate":0,"index":2048}},{"kind":"Use","ref_id":{"krate":0,"index":3536},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1122,"byte_end":1126,"line_start":44,"line_end":44,"column_start":69,"column_end":73},"alias_span":null,"name":"Port","value":"","parent":{"krate":0,"index":2048}},{"kind":"Use","ref_id":{"krate":0,"index":3614},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1136,"byte_end":1146,"line_start":45,"line_end":45,"column_start":9,"column_end":19},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":2048}},{"kind":"Use","ref_id":{"krate":0,"index":3649},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1148,"byte_end":1155,"line_start":45,"line_end":45,"column_start":21,"column_end":28},"alias_span":null,"name":"SrcAddr","value":"","parent":{"krate":0,"index":2048}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1608,"byte_end":1625,"line_start":62,"line_end":62,"column_start":9,"column_end":26},"alias_span":null,"name":"BuildHeartbeating","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1627,"byte_end":1636,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"alias_span":null,"name":"BuildRecv","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1638,"byte_end":1647,"line_start":62,"line_end":62,"column_start":39,"column_end":48},"alias_span":null,"name":"BuildSend","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1649,"byte_end":1660,"line_start":62,"line_end":62,"column_start":50,"column_end":61},"alias_span":null,"name":"BuildSocket","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1670,"byte_end":1691,"line_start":63,"line_end":63,"column_start":9,"column_end":30},"alias_span":null,"name":"ConfigureHeartbeating","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1693,"byte_end":1706,"line_start":63,"line_end":63,"column_start":32,"column_end":45},"alias_span":null,"name":"ConfigureRecv","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1708,"byte_end":1721,"line_start":63,"line_end":63,"column_start":47,"column_end":60},"alias_span":null,"name":"ConfigureSend","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":376},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1723,"byte_end":1738,"line_start":63,"line_end":63,"column_start":62,"column_end":77},"alias_span":null,"name":"ConfigureSocket","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1748,"byte_end":1760,"line_start":64,"line_end":64,"column_start":9,"column_end":21},"alias_span":null,"name":"Heartbeating","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1762,"byte_end":1769,"line_start":64,"line_end":64,"column_start":23,"column_end":30},"alias_span":null,"name":"RecvMsg","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1771,"byte_end":1778,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"alias_span":null,"name":"SendMsg","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1780,"byte_end":1786,"line_start":64,"line_end":64,"column_start":41,"column_end":47},"alias_span":null,"name":"Socket","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":2,"index":1832},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1877,"byte_end":1884,"line_start":67,"line_end":67,"column_start":28,"column_end":35},"alias_span":null,"name":"TryFrom","value":"","parent":{"krate":0,"index":2058}},{"kind":"Use","ref_id":{"krate":2,"index":1828},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1886,"byte_end":1893,"line_start":67,"line_end":67,"column_start":37,"column_end":44},"alias_span":null,"name":"TryInto","value":"","parent":{"krate":0,"index":2058}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":0,"byte_end":2155,"line_start":1,"line_end":81,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":399},{"krate":0,"index":802},{"krate":0,"index":865},{"krate":0,"index":1147},{"krate":0,"index":1197},{"krate":0,"index":1326},{"krate":0,"index":1402},{"krate":0,"index":1442},{"krate":0,"index":1561},{"krate":0,"index":1990},{"krate":0,"index":2003},{"krate":0,"index":2006},{"krate":0,"index":2010},{"krate":0,"index":2017},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2048},{"krate":0,"index":2058}],"decl_id":null,"docs":" *libzmq* - A strict subset of ØMQ with a high level API.\n","sig":null,"attributes":[{"value":"! *libzmq* - A strict subset of ØMQ with a high level API.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":55,"byte_end":116,"line_start":3,"line_end":3,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2075},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25608,"byte_end":25617,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"Heartbeat","qualname":"::core::heartbeat::Heartbeat","value":"Heartbeat {  }","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2076},{"krate":0,"index":2077}],"decl_id":null,"docs":" Socket heartbeating configuration.","sig":null,"attributes":[{"value":"/ Socket heartbeating configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25270,"byte_end":25308,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25309,"byte_end":25312,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25313,"byte_end":25326,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25327,"byte_end":25334,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use libzmq::Heartbeat;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25335,"byte_end":25361,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25362,"byte_end":25390,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25391,"byte_end":25394,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let duration = Duration::from_millis(300);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25395,"byte_end":25441,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25442,"byte_end":25445,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let hb = Heartbeat::new(duration)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25446,"byte_end":25483,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/     .add_timeout(2 * duration);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25484,"byte_end":25519,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25520,"byte_end":25527,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25920,"byte_end":25923,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Heartbeat>::new","value":"fn <D> (interval: D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Heartbeat` from the given interval.","sig":null,"attributes":[{"value":"/ Create a new `Heartbeat` from the given interval.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25778,"byte_end":25831,"line_start":57,"line_end":57,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25836,"byte_end":25839,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This interval specifies the duration between each heartbeat.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25844,"byte_end":25908,"line_start":59,"line_end":59,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26184,"byte_end":26192,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"interval","qualname":"<Heartbeat>::interval","value":"fn (&self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the interval between each heartbeat.\n","sig":null,"attributes":[{"value":"/ Returns the interval between each heartbeat.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26124,"byte_end":26172,"line_start":71,"line_end":71,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26435,"byte_end":26446,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"add_timeout","qualname":"<Heartbeat>::add_timeout","value":"fn <D> (mut self, timeout: D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout for the `Heartbeat`.","sig":null,"attributes":[{"value":"/ Set a timeout for the `Heartbeat`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26247,"byte_end":26285,"line_start":76,"line_end":76,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26290,"byte_end":26293,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This timeout specifies how long to wait before timing out a connection","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26298,"byte_end":26372,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ with a peer for not receiving any traffic.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26377,"byte_end":26423,"line_start":79,"line_end":79,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26640,"byte_end":26647,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Heartbeat>::timeout","value":"fn (&self) -> Period","parent":null,"children":[],"decl_id":null,"docs":" Returns the heartbeat timeout.\n","sig":null,"attributes":[{"value":"/ Returns the heartbeat timeout.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26594,"byte_end":26628,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26866,"byte_end":26873,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"add_ttl","qualname":"<Heartbeat>::add_ttl","value":"fn <D> (mut self, ttl: D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a ttl for the `Heartbeat`","sig":null,"attributes":[{"value":"/ Set a ttl for the `Heartbeat`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26699,"byte_end":26732,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26737,"byte_end":26740,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This ttl is equivalent to a `heartbeat_timeout` for the remote","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26745,"byte_end":26811,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/ side for this specific connection.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":26816,"byte_end":26854,"line_start":96,"line_end":96,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27051,"byte_end":27054,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Heartbeat>::ttl","value":"fn (&self) -> Period","parent":null,"children":[],"decl_id":null,"docs":" Returns the heartbeat ttl.\n","sig":null,"attributes":[{"value":"/ Returns the heartbeat ttl.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27009,"byte_end":27039,"line_start":105,"line_end":105,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28296,"byte_end":28308,"line_start":156,"line_end":156,"column_start":11,"column_end":23},"name":"Heartbeating","qualname":"::core::heartbeat::Heartbeating","value":"Heartbeating: GetRawSocket","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" A trait that indicates that the socket supports configurable\n heartbeating.","sig":null,"attributes":[{"value":"/ A trait that indicates that the socket supports configurable","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27217,"byte_end":27281,"line_start":117,"line_end":117,"column_start":1,"column_end":65}},{"value":"/ heartbeating.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27282,"byte_end":27299,"line_start":118,"line_end":118,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27300,"byte_end":27303,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The actual heartbeating will be done by the engine in the background.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27304,"byte_end":27377,"line_start":120,"line_end":120,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27378,"byte_end":27381,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Only applies to connection based transports such as `TCP`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27382,"byte_end":27444,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27445,"byte_end":27448,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27449,"byte_end":27463,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/ * timeout and interval duration in ms cannot exceed i32::MAX","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27464,"byte_end":27528,"line_start":125,"line_end":125,"column_start":1,"column_end":65}},{"value":"/ * ttl duration in ms cannot exceed 6553599","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27529,"byte_end":27575,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27576,"byte_end":27579,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Default value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27580,"byte_end":27599,"line_start":128,"line_end":128,"column_start":1,"column_end":20}},{"value":"/ `None` (no heartbeating)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27600,"byte_end":27628,"line_start":129,"line_end":129,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27629,"byte_end":27632,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Return Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27633,"byte_end":27652,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/ * [`InvalidInput`]: (if contract is not respected)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27653,"byte_end":27707,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27708,"byte_end":27711,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27712,"byte_end":27725,"line_start":134,"line_end":134,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27726,"byte_end":27733,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27734,"byte_end":27780,"line_start":136,"line_end":136,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, Client, Heartbeat, auth::*};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27781,"byte_end":27838,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27839,"byte_end":27867,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27868,"byte_end":27871,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27872,"byte_end":27904,"line_start":140,"line_end":140,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(client.heartbeat(), None);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27905,"byte_end":27946,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27947,"byte_end":27950,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ let duration = Duration::from_millis(300);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27951,"byte_end":27997,"line_start":143,"line_end":143,"column_start":1,"column_end":47}},{"value":"/ let hb = Heartbeat::new(duration)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27998,"byte_end":28035,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/     .add_timeout(2 * duration);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28036,"byte_end":28071,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ let expected = hb.clone();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28072,"byte_end":28102,"line_start":146,"line_end":146,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28103,"byte_end":28106,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ client.set_heartbeat(Some(hb))?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28107,"byte_end":28143,"line_start":148,"line_end":148,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(client.heartbeat(), Some(expected));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28144,"byte_end":28195,"line_start":149,"line_end":149,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28196,"byte_end":28201,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28202,"byte_end":28218,"line_start":151,"line_end":151,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28219,"byte_end":28226,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28227,"byte_end":28234,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28235,"byte_end":28238,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`Mechanism`]: ../auth/enum.Mechanism.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28239,"byte_end":28285,"line_start":155,"line_end":155,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28391,"byte_end":28400,"line_start":158,"line_end":158,"column_start":8,"column_end":17},"name":"heartbeat","qualname":"::core::heartbeat::Heartbeating::heartbeat","value":"fn (&self) -> Option<Heartbeat>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns a the socket's heartbeating configuration.\n","sig":null,"attributes":[{"value":"/ Returns a the socket's heartbeating configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28329,"byte_end":28383,"line_start":157,"line_end":157,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28564,"byte_end":28577,"line_start":163,"line_end":163,"column_start":8,"column_end":21},"name":"set_heartbeat","qualname":"::core::heartbeat::Heartbeating::set_heartbeat","value":"fn (&self, maybe: Option<Heartbeat>) -> Result<(), Error>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Sets the socket's heartbeating configuration.\n","sig":null,"attributes":[{"value":"/ Sets the socket's heartbeating configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28507,"byte_end":28556,"line_start":162,"line_end":162,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2171},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28876,"byte_end":28894,"line_start":173,"line_end":173,"column_start":12,"column_end":30},"name":"HeartbeatingConfig","qualname":"::core::heartbeat::HeartbeatingConfig","value":"HeartbeatingConfig {  }","parent":null,"children":[{"krate":0,"index":2172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29164,"byte_end":29185,"line_start":187,"line_end":187,"column_start":11,"column_end":32},"name":"GetHeartbeatingConfig","qualname":"::core::heartbeat::GetHeartbeatingConfig","value":"GetHeartbeatingConfig: private::Sealed","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29212,"byte_end":29228,"line_start":188,"line_end":188,"column_start":8,"column_end":24},"name":"heartbeat_config","qualname":"::core::heartbeat::GetHeartbeatingConfig::heartbeat_config","value":"fn (&self) -> &HeartbeatingConfig","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29268,"byte_end":29288,"line_start":190,"line_end":190,"column_start":8,"column_end":28},"name":"heartbeat_config_mut","qualname":"::core::heartbeat::GetHeartbeatingConfig::heartbeat_config_mut","value":"fn (&mut self) -> &mut HeartbeatingConfig","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29617,"byte_end":29638,"line_start":204,"line_end":204,"column_start":11,"column_end":32},"name":"ConfigureHeartbeating","qualname":"::core::heartbeat::ConfigureHeartbeating","value":"ConfigureHeartbeating: GetHeartbeatingConfig","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" A set of provided methods for a socket configuration.\n","sig":null,"attributes":[{"value":"/ A set of provided methods for a socket configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29549,"byte_end":29606,"line_start":203,"line_end":203,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29671,"byte_end":29680,"line_start":205,"line_end":205,"column_start":8,"column_end":17},"name":"heartbeat","qualname":"::core::heartbeat::ConfigureHeartbeating::heartbeat","value":"fn (&self) -> Option<&Heartbeat>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29777,"byte_end":29790,"line_start":209,"line_end":209,"column_start":8,"column_end":21},"name":"set_heartbeat","qualname":"::core::heartbeat::ConfigureHeartbeating::set_heartbeat","value":"fn (&mut self, maybe: Option<Heartbeat>) -> ()","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":30010,"byte_end":30027,"line_start":217,"line_end":217,"column_start":11,"column_end":28},"name":"BuildHeartbeating","qualname":"::core::heartbeat::BuildHeartbeating","value":"BuildHeartbeating: GetHeartbeatingConfig + Sized","parent":null,"children":[{"krate":0,"index":49}],"decl_id":null,"docs":" A set of provided methods for a socket builder.\n","sig":null,"attributes":[{"value":"/ A set of provided methods for a socket builder.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29948,"byte_end":29999,"line_start":216,"line_end":216,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":30068,"byte_end":30077,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"heartbeat","qualname":"::core::heartbeat::BuildHeartbeating::heartbeat","value":"fn <H> (&mut self, heartbeat: H) -> &mut Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":30628,"byte_end":30640,"line_start":25,"line_end":25,"column_start":11,"column_end":23},"name":"GetRawSocket","qualname":"::core::raw::GetRawSocket","value":"GetRawSocket: super::private::Sealed","parent":null,"children":[{"krate":0,"index":74}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":30674,"byte_end":30684,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"raw_socket","qualname":"::core::raw::GetRawSocket::raw_socket","value":"fn (&self) -> &RawSocket","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2189},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":35800,"byte_end":35809,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"RawSocket","qualname":"::core::raw::RawSocket","value":"RawSocket {  }","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193}],"decl_id":null,"docs":" This socket may or may not be thread safe depending on the `RawSocketType`.\n We prevent that it is always thread-safe and let the wrapping types decide.\n","sig":null,"attributes":[{"value":"/ This socket may or may not be thread safe depending on the `RawSocketType`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":35597,"byte_end":35676,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ We prevent that it is always thread-safe and let the wrapping types decide.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":35677,"byte_end":35756,"line_start":169,"line_end":169,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":169},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45798,"byte_end":45805,"line_start":47,"line_end":47,"column_start":11,"column_end":18},"name":"RecvMsg","qualname":"::core::recv::RecvMsg","value":"RecvMsg: GetRawSocket","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Receive atomic messages in an immutable, thread-safe fashion.","sig":null,"attributes":[{"value":"/ Receive atomic messages in an immutable, thread-safe fashion.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45677,"byte_end":45742,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45743,"byte_end":45746,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Does not support multipart messages.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45747,"byte_end":45787,"line_start":46,"line_end":46,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46462,"byte_end":46466,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"recv","qualname":"::core::recv::RecvMsg::recv","value":"fn (&self, msg: &mut Msg) -> Result<(), Error>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Retreive a message from the inbound socket queue.","sig":null,"attributes":[{"value":"/ Retreive a message from the inbound socket queue.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45826,"byte_end":45879,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45884,"byte_end":45887,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This operation might block until the socket receives a message or,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45892,"byte_end":45962,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ if it is set, until `recv_timeout` expires.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45967,"byte_end":46014,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46019,"byte_end":46022,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46027,"byte_end":46038,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ The `Msg` is returned as the content of the `Error`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46043,"byte_end":46099,"line_start":54,"line_end":54,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46104,"byte_end":46107,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ## Possible Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46112,"byte_end":46142,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/ * [`WouldBlock`] (if `recv_timeout` expires)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46147,"byte_end":46195,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46200,"byte_end":46220,"line_start":58,"line_end":58,"column_start":5,"column_end":25}},{"value":"/ * [`Interrupted`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46225,"byte_end":46246,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46251,"byte_end":46254,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: ../enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46259,"byte_end":46320,"line_start":61,"line_end":61,"column_start":5,"column_end":66}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46325,"byte_end":46386,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/ [`Interrupted`]: ../enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46391,"byte_end":46454,"line_start":63,"line_end":63,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47281,"byte_end":47289,"line_start":85,"line_end":85,"column_start":8,"column_end":16},"name":"try_recv","qualname":"::core::recv::RecvMsg::try_recv","value":"fn (&self, msg: &mut Msg) -> Result<(), Error>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Try to retrieve a message from the inbound socket queue without blocking.","sig":null,"attributes":[{"value":"/ Try to retrieve a message from the inbound socket queue without blocking.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46580,"byte_end":46657,"line_start":68,"line_end":68,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46662,"byte_end":46665,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This polls the socket to determine there is at least on inbound message in","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46670,"byte_end":46748,"line_start":70,"line_end":70,"column_start":5,"column_end":83}},{"value":"/ the socket queue. If there is, it retuns it, otherwise it errors with","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46753,"byte_end":46826,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ [`WouldBlock`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46831,"byte_end":46850,"line_start":72,"line_end":72,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46855,"byte_end":46858,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46863,"byte_end":46874,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ No message from the inbound queue is lost if there is an error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46879,"byte_end":46946,"line_start":75,"line_end":75,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46951,"byte_end":46954,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ## Possible Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46959,"byte_end":46989,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ * [`WouldBlock`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":46994,"byte_end":47014,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47019,"byte_end":47039,"line_start":79,"line_end":79,"column_start":5,"column_end":25}},{"value":"/ * [`Interrupted`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47044,"byte_end":47065,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47070,"byte_end":47073,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: ../enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47078,"byte_end":47139,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47144,"byte_end":47205,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ [`Interrupted`]: ../enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47210,"byte_end":47273,"line_start":84,"line_end":84,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47586,"byte_end":47594,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"recv_msg","qualname":"::core::recv::RecvMsg::recv_msg","value":"fn (&self) -> Result<Msg, Error>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" A convenience function that allocates a [`Msg`] with the same properties\n as [`recv`].","sig":null,"attributes":[{"value":"/ A convenience function that allocates a [`Msg`] with the same properties","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47402,"byte_end":47478,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ as [`recv`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47483,"byte_end":47499,"line_start":90,"line_end":90,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47504,"byte_end":47507,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47512,"byte_end":47538,"line_start":92,"line_end":92,"column_start":5,"column_end":31}},{"value":"/ [`Msg`]: ../msg/struct.Msg.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47543,"byte_end":47578,"line_start":93,"line_end":93,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47910,"byte_end":47922,"line_start":106,"line_end":106,"column_start":8,"column_end":20},"name":"try_recv_msg","qualname":"::core::recv::RecvMsg::try_recv_msg","value":"fn (&self) -> Result<Msg, Error>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" A convenience function that allocates a [`Msg`] with the same properties\n as [`try_recv`].","sig":null,"attributes":[{"value":"/ A convenience function that allocates a [`Msg`] with the same properties","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47718,"byte_end":47794,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/ as [`try_recv`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47799,"byte_end":47819,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47824,"byte_end":47827,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: #method.recv","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47832,"byte_end":47862,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/ [`Msg`]: ../msg/struct.Msg.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":47867,"byte_end":47902,"line_start":105,"line_end":105,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48683,"byte_end":48691,"line_start":135,"line_end":135,"column_start":8,"column_end":16},"name":"recv_hwm","qualname":"::core::recv::RecvMsg::recv_hwm","value":"fn (&self) -> Result<i32, Error>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" The high water mark for incoming messages on the specified socket.","sig":null,"attributes":[{"value":"/ The high water mark for incoming messages on the specified socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48050,"byte_end":48120,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48125,"byte_end":48128,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ The high water mark is a hard limit on the maximum number of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48133,"byte_end":48197,"line_start":115,"line_end":115,"column_start":5,"column_end":69}},{"value":"/ incoming messages ØMQ shall queue in memory.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48202,"byte_end":48251,"line_start":116,"line_end":116,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48256,"byte_end":48259,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ If this limit has been reached the socket shall enter the `mute state`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48264,"byte_end":48339,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48344,"byte_end":48347,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48352,"byte_end":48365,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ `1000`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48370,"byte_end":48380,"line_start":121,"line_end":121,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48385,"byte_end":48388,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48393,"byte_end":48406,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48411,"byte_end":48418,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48423,"byte_end":48469,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48474,"byte_end":48506,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48511,"byte_end":48514,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let client = ClientBuilder::new().build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48519,"byte_end":48566,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(client.recv_hwm()?, 1000);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48571,"byte_end":48612,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48617,"byte_end":48620,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48625,"byte_end":48630,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48635,"byte_end":48651,"line_start":132,"line_end":132,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48656,"byte_end":48663,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48668,"byte_end":48675,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49330,"byte_end":49342,"line_start":156,"line_end":156,"column_start":8,"column_end":20},"name":"set_recv_hwm","qualname":"::core::recv::RecvMsg::set_recv_hwm","value":"fn (&self, hwm: i32) -> Result<(), Error>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Set the high water mark for inbound messages on the specified socket.","sig":null,"attributes":[{"value":"/ Set the high water mark for inbound messages on the specified socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48771,"byte_end":48844,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48849,"byte_end":48852,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The high water mark is a hard limit on the maximum number of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48857,"byte_end":48921,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/ outstanding messages ØMQ shall queue in memory.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48926,"byte_end":48978,"line_start":142,"line_end":142,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48983,"byte_end":48986,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If this limit has been reached the socket shall enter the `mute state`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":48991,"byte_end":49066,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49071,"byte_end":49074,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49079,"byte_end":49099,"line_start":146,"line_end":146,"column_start":5,"column_end":25}},{"value":"/ * The high water mark cannot be zero.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49104,"byte_end":49145,"line_start":147,"line_end":147,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49150,"byte_end":49153,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Returned Error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49158,"byte_end":49178,"line_start":149,"line_end":149,"column_start":5,"column_end":25}},{"value":"/ * [`InvalidInput`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49183,"byte_end":49205,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49210,"byte_end":49213,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49218,"byte_end":49231,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/ 1000","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49236,"byte_end":49244,"line_start":153,"line_end":153,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49249,"byte_end":49252,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: ../enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49257,"byte_end":49322,"line_start":155,"line_end":155,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49665,"byte_end":49677,"line_start":165,"line_end":165,"column_start":8,"column_end":20},"name":"recv_timeout","qualname":"::core::recv::RecvMsg::recv_timeout","value":"fn (&self) -> Result<Period, Error>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" The timeout for [`recv`] on the socket.","sig":null,"attributes":[{"value":"/ The timeout for [`recv`] on the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49438,"byte_end":49481,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49486,"byte_end":49489,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If some timeout is specified, [`recv`] will return","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49494,"byte_end":49548,"line_start":162,"line_end":162,"column_start":5,"column_end":59}},{"value":"/ [`WouldBlock`] after the duration is elapsed. Otherwise it","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49553,"byte_end":49615,"line_start":163,"line_end":163,"column_start":5,"column_end":67}},{"value":"/ will until a message is received.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49620,"byte_end":49657,"line_start":164,"line_end":164,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50041,"byte_end":50057,"line_start":177,"line_end":177,"column_start":8,"column_end":24},"name":"set_recv_timeout","qualname":"::core::recv::RecvMsg::set_recv_timeout","value":"fn <P> (&self, period: P) -> Result<(), Error>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Sets the timeout for [`recv`] on the socket.","sig":null,"attributes":[{"value":"/ Sets the timeout for [`recv`] on the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49764,"byte_end":49812,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49817,"byte_end":49820,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If some timeout is specified, [`recv`] will return","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49825,"byte_end":49879,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ [`WouldBlock`] after the duration is elapsed. Otherwise it","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49884,"byte_end":49946,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/ will until a message is received.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49951,"byte_end":49988,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":49993,"byte_end":49996,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50001,"byte_end":50014,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ `Infinite`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50019,"byte_end":50033,"line_start":176,"line_end":176,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2196},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50288,"byte_end":50298,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"RecvConfig","qualname":"::core::recv::RecvConfig","value":"RecvConfig {  }","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":182},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50632,"byte_end":50645,"line_start":202,"line_end":202,"column_start":11,"column_end":24},"name":"GetRecvConfig","qualname":"::core::recv::GetRecvConfig","value":"GetRecvConfig: private::Sealed","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50672,"byte_end":50683,"line_start":203,"line_end":203,"column_start":8,"column_end":19},"name":"recv_config","qualname":"::core::recv::GetRecvConfig::recv_config","value":"fn (&self) -> &RecvConfig","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50715,"byte_end":50730,"line_start":205,"line_end":205,"column_start":8,"column_end":23},"name":"recv_config_mut","qualname":"::core::recv::GetRecvConfig::recv_config_mut","value":"fn (&mut self) -> &mut RecvConfig","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50866,"byte_end":50879,"line_start":209,"line_end":209,"column_start":11,"column_end":24},"name":"ConfigureRecv","qualname":"::core::recv::ConfigureRecv","value":"ConfigureRecv: GetRecvConfig","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":" A set of provided methods for the configuration of a socket that implements `RecvMsg`.\n","sig":null,"attributes":[{"value":"/ A set of provided methods for the configuration of a socket that implements `RecvMsg`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50765,"byte_end":50855,"line_start":208,"line_end":208,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50904,"byte_end":50912,"line_start":210,"line_end":210,"column_start":8,"column_end":16},"name":"recv_hwm","qualname":"::core::recv::ConfigureRecv::recv_hwm","value":"fn (&self) -> i32","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50986,"byte_end":50998,"line_start":214,"line_end":214,"column_start":8,"column_end":20},"name":"set_recv_hwm","qualname":"::core::recv::ConfigureRecv::set_recv_hwm","value":"fn (&mut self, hwm: i32) -> ()","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":51098,"byte_end":51110,"line_start":218,"line_end":218,"column_start":8,"column_end":20},"name":"recv_timeout","qualname":"::core::recv::ConfigureRecv::recv_timeout","value":"fn (&self) -> Period","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":51184,"byte_end":51200,"line_start":222,"line_end":222,"column_start":8,"column_end":24},"name":"set_recv_timeout","qualname":"::core::recv::ConfigureRecv::set_recv_timeout","value":"fn (&mut self, period: Period) -> ()","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":190},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":51388,"byte_end":51397,"line_start":228,"line_end":228,"column_start":11,"column_end":20},"name":"BuildRecv","qualname":"::core::recv::BuildRecv","value":"BuildRecv: GetRecvConfig","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":" A set of provided methods for the builder of a socket that implements `RecvMsg`.\n","sig":null,"attributes":[{"value":"/ A set of provided methods for the builder of a socket that implements `RecvMsg`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":51293,"byte_end":51377,"line_start":227,"line_end":227,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":51422,"byte_end":51430,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"recv_hwm","qualname":"::core::recv::BuildRecv::recv_hwm","value":"fn (&mut self, hwm: i32) -> &mut Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":51556,"byte_end":51568,"line_start":234,"line_end":234,"column_start":8,"column_end":20},"name":"recv_timeout","qualname":"::core::recv::BuildRecv::recv_timeout","value":"fn (&mut self, timeout: Duration) -> &mut Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":209},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53207,"byte_end":53214,"line_start":53,"line_end":53,"column_start":11,"column_end":18},"name":"SendMsg","qualname":"::core::send::SendMsg","value":"SendMsg: GetRawSocket","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" Send messages in a thread-safe fashion.","sig":null,"attributes":[{"value":"/ Send messages in a thread-safe fashion.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53108,"byte_end":53151,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53152,"byte_end":53155,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Does not support multipart messages.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53156,"byte_end":53196,"line_start":52,"line_end":52,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54299,"byte_end":54303,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"send","qualname":"::core::send::SendMsg::send","value":"fn <M> (&self, msg: M) -> Result<(), Error<Msg>>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Push a message into the outgoing socket queue.","sig":null,"attributes":[{"value":"/ Push a message into the outgoing socket queue.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53235,"byte_end":53285,"line_start":54,"line_end":54,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53290,"byte_end":53293,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This operation might block until the mute state end or,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53298,"byte_end":53357,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/ if it set, `send_timeout` expires.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53362,"byte_end":53400,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53405,"byte_end":53408,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If the message is a `Msg`, `Vec<u8>`, `[u8]`, or a `String`, it is not copied.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53413,"byte_end":53495,"line_start":59,"line_end":59,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53500,"byte_end":53503,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Success","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53508,"byte_end":53521,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ The message was queued and now belongs to ØMQ","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53526,"byte_end":53576,"line_start":62,"line_end":62,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53581,"byte_end":53584,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53589,"byte_end":53600,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/ In case of an error, the message is not queued and","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53605,"byte_end":53659,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ the ownership is returned.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53664,"byte_end":53694,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53699,"byte_end":53702,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ## Possible Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53707,"byte_end":53737,"line_start":68,"line_end":68,"column_start":5,"column_end":35}},{"value":"/ * [`WouldBlock`] (if `send_timeout` expires)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53742,"byte_end":53790,"line_start":69,"line_end":69,"column_start":5,"column_end":53}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53795,"byte_end":53815,"line_start":70,"line_end":70,"column_start":5,"column_end":25}},{"value":"/ * [`Interrupted`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53820,"byte_end":53841,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/ * [`HostUnreachable`] (only for [`Server`] socket)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53846,"byte_end":53900,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53905,"byte_end":53908,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`zmq_msg_send`]: http://api.zeromq.org/master:zmq-msg-send","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53913,"byte_end":53976,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/ [`WouldBlock`]: ../enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53981,"byte_end":54042,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54047,"byte_end":54108,"line_start":76,"line_end":76,"column_start":5,"column_end":66}},{"value":"/ [`Interrupted`]: ../enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54113,"byte_end":54176,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ [`HostUnreachable`]: ../enum.ErrorKind.html#variant.HostUnreachable","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54181,"byte_end":54252,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54257,"byte_end":54291,"line_start":79,"line_end":79,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55549,"byte_end":55557,"line_start":113,"line_end":113,"column_start":8,"column_end":16},"name":"try_send","qualname":"::core::send::SendMsg::try_send","value":"fn <M> (&self, msg: M) -> Result<(), Error<Msg>>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Try to push a message into the outgoing socket queue without blocking.","sig":null,"attributes":[{"value":"/ Try to push a message into the outgoing socket queue without blocking.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54461,"byte_end":54535,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54540,"byte_end":54543,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If the action would block, it returns a [`WouldBlock`] error, otherwise","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54548,"byte_end":54623,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ the message is pushed into the outgoing queue.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54628,"byte_end":54678,"line_start":90,"line_end":90,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54683,"byte_end":54686,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ If the message is a `Msg`, `Vec<u8>`, `[u8]`, or a `String`, it is not copied.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54691,"byte_end":54773,"line_start":92,"line_end":92,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54778,"byte_end":54781,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Success","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54786,"byte_end":54799,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/ The message was queued and now belongs to ØMQ","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54804,"byte_end":54854,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54859,"byte_end":54862,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54867,"byte_end":54878,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ In case of an error, the message is not queued and","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54883,"byte_end":54937,"line_start":98,"line_end":98,"column_start":5,"column_end":59}},{"value":"/ the ownership is returned.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54942,"byte_end":54972,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54977,"byte_end":54980,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Possible Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":54985,"byte_end":55015,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/ * [`WouldBlock`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55020,"byte_end":55040,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55045,"byte_end":55065,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/ * [`Interrupted`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55070,"byte_end":55091,"line_start":104,"line_end":104,"column_start":5,"column_end":26}},{"value":"/ * [`HostUnreachable`] (only for [`Server`] socket)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55096,"byte_end":55150,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55155,"byte_end":55158,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`zmq_msg_send`]: http://api.zeromq.org/master:zmq-msg-send","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55163,"byte_end":55226,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"/ [`WouldBlock`]: ../enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55231,"byte_end":55292,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55297,"byte_end":55358,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/ [`Interrupted`]: ../enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55363,"byte_end":55426,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/ [`HostUnreachable`]: ../enum.ErrorKind.html#variant.HostUnreachable","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55431,"byte_end":55502,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55507,"byte_end":55541,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56350,"byte_end":56358,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"send_hwm","qualname":"::core::send::SendMsg::send_hwm","value":"fn (&self) -> Result<i32, Error>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" The high water mark for outbound messages on the specified socket.","sig":null,"attributes":[{"value":"/ The high water mark for outbound messages on the specified socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55714,"byte_end":55784,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55789,"byte_end":55792,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The high water mark is a hard limit on the maximum number of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55797,"byte_end":55861,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ outstanding messages ØMQ shall queue in memory.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55866,"byte_end":55918,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55923,"byte_end":55926,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ If this limit has been reached the socket shall enter the `mute state`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":55931,"byte_end":56006,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56011,"byte_end":56014,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56019,"byte_end":56032,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ `1000`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56037,"byte_end":56047,"line_start":128,"line_end":128,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56052,"byte_end":56055,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56060,"byte_end":56073,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56078,"byte_end":56085,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56090,"byte_end":56136,"line_start":132,"line_end":132,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56141,"byte_end":56173,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56178,"byte_end":56181,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let client = ClientBuilder::new().build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56186,"byte_end":56233,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(client.send_hwm()?, 1000);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56238,"byte_end":56279,"line_start":136,"line_end":136,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56284,"byte_end":56287,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56292,"byte_end":56297,"line_start":138,"line_end":138,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56302,"byte_end":56318,"line_start":139,"line_end":139,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56323,"byte_end":56330,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56335,"byte_end":56342,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57027,"byte_end":57039,"line_start":163,"line_end":163,"column_start":8,"column_end":20},"name":"set_send_hwm","qualname":"::core::send::SendMsg::set_send_hwm","value":"fn (&self, hwm: i32) -> Result<(), Error>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Set the high water mark for outbound messages on the specified socket.","sig":null,"attributes":[{"value":"/ Set the high water mark for outbound messages on the specified socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56438,"byte_end":56512,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56517,"byte_end":56520,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The high water mark is a hard limit on the maximum number of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56525,"byte_end":56589,"line_start":148,"line_end":148,"column_start":5,"column_end":69}},{"value":"/ outstanding messages ØMQ shall queue in memory.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56594,"byte_end":56646,"line_start":149,"line_end":149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56651,"byte_end":56654,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ If this limit has been reached the socket shall enter the `mute state`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56659,"byte_end":56734,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56739,"byte_end":56742,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56747,"byte_end":56767,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/ * The high water mark cannot be zero.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56772,"byte_end":56813,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56818,"byte_end":56821,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Returned Error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56826,"byte_end":56846,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/ * [`InvalidInput`](on contract violation)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56851,"byte_end":56896,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56901,"byte_end":56904,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Default value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56909,"byte_end":56928,"line_start":159,"line_end":159,"column_start":5,"column_end":24}},{"value":"/ 1000","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56933,"byte_end":56941,"line_start":160,"line_end":160,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56946,"byte_end":56949,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: ../enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":56954,"byte_end":57019,"line_start":162,"line_end":162,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57376,"byte_end":57388,"line_start":172,"line_end":172,"column_start":8,"column_end":20},"name":"send_timeout","qualname":"::core::send::SendMsg::send_timeout","value":"fn (&self) -> Result<Period, Error>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Sets the timeout for [`send`] on the socket.","sig":null,"attributes":[{"value":"/ Sets the timeout for [`send`] on the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57135,"byte_end":57183,"line_start":167,"line_end":167,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57188,"byte_end":57191,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If some timeout is specified, the [`send`] will return","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57196,"byte_end":57254,"line_start":169,"line_end":169,"column_start":5,"column_end":63}},{"value":"/ [`WouldBlock`] after the duration is elapsed. Otherwise,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57259,"byte_end":57319,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/ it will block until the message is sent.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57324,"byte_end":57368,"line_start":171,"line_end":171,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58372,"byte_end":58388,"line_start":202,"line_end":202,"column_start":8,"column_end":24},"name":"set_send_timeout","qualname":"::core::send::SendMsg::set_send_timeout","value":"fn <P> (&self, period: P) -> Result<(), Error>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Sets the timeout for [`send`] on the socket.","sig":null,"attributes":[{"value":"/ Sets the timeout for [`send`] on the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57475,"byte_end":57523,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57528,"byte_end":57531,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ If some timeout is specified, the [`send`] will return","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57536,"byte_end":57594,"line_start":178,"line_end":178,"column_start":5,"column_end":63}},{"value":"/ [`WouldBlock`] after the duration is elapsed. Otherwise,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57599,"byte_end":57659,"line_start":179,"line_end":179,"column_start":5,"column_end":65}},{"value":"/ it will block until the message is sent.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57664,"byte_end":57708,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57713,"byte_end":57716,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Default Value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57721,"byte_end":57740,"line_start":182,"line_end":182,"column_start":5,"column_end":24}},{"value":"/ `Infinite`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57745,"byte_end":57759,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57764,"byte_end":57767,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57772,"byte_end":57785,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57790,"byte_end":57797,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57802,"byte_end":57848,"line_start":187,"line_end":187,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, Client, ErrorKind};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57853,"byte_end":57901,"line_start":188,"line_end":188,"column_start":5,"column_end":53}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57906,"byte_end":57934,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57939,"byte_end":57942,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57947,"byte_end":57979,"line_start":191,"line_end":191,"column_start":5,"column_end":37}},{"value":"/ client.set_send_timeout(Some(Duration::from_millis(1)))?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":57984,"byte_end":58045,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58050,"byte_end":58053,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ // The client is in mute state so the following would block forever","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58058,"byte_end":58129,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ // if a timeout wasn't specified. Instead, it will block for 1ms.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58134,"byte_end":58203,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/ let err = client.send(\"msg\").unwrap_err();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58208,"byte_end":58254,"line_start":196,"line_end":196,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(ErrorKind::WouldBlock, err.kind());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58259,"byte_end":58309,"line_start":197,"line_end":197,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58314,"byte_end":58319,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58324,"byte_end":58340,"line_start":199,"line_end":199,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58345,"byte_end":58352,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58357,"byte_end":58364,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2215},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58619,"byte_end":58629,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"SendConfig","qualname":"::core::send::SendConfig","value":"SendConfig {  }","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2217}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58963,"byte_end":58976,"line_start":227,"line_end":227,"column_start":11,"column_end":24},"name":"GetSendConfig","qualname":"::core::send::GetSendConfig","value":"GetSendConfig: private::Sealed","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59003,"byte_end":59014,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"send_config","qualname":"::core::send::GetSendConfig::send_config","value":"fn (&self) -> &SendConfig","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59046,"byte_end":59061,"line_start":230,"line_end":230,"column_start":8,"column_end":23},"name":"send_config_mut","qualname":"::core::send::GetSendConfig::send_config_mut","value":"fn (&mut self) -> &mut SendConfig","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":225},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59195,"byte_end":59208,"line_start":234,"line_end":234,"column_start":11,"column_end":24},"name":"ConfigureSend","qualname":"::core::send::ConfigureSend","value":"ConfigureSend: GetSendConfig","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" A set of provided methods for the configuration of socket that implements `SendMsg`.\n","sig":null,"attributes":[{"value":"/ A set of provided methods for the configuration of socket that implements `SendMsg`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59096,"byte_end":59184,"line_start":233,"line_end":233,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59233,"byte_end":59241,"line_start":235,"line_end":235,"column_start":8,"column_end":16},"name":"send_hwm","qualname":"::core::send::ConfigureSend::send_hwm","value":"fn (&self) -> i32","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59315,"byte_end":59327,"line_start":239,"line_end":239,"column_start":8,"column_end":20},"name":"set_send_hwm","qualname":"::core::send::ConfigureSend::set_send_hwm","value":"fn (&mut self, hwm: i32) -> ()","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59427,"byte_end":59439,"line_start":243,"line_end":243,"column_start":8,"column_end":20},"name":"send_timeout","qualname":"::core::send::ConfigureSend::send_timeout","value":"fn (&self) -> Period","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59513,"byte_end":59529,"line_start":247,"line_end":247,"column_start":8,"column_end":24},"name":"set_send_timeout","qualname":"::core::send::ConfigureSend::set_send_timeout","value":"fn (&mut self, period: Period) -> ()","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59717,"byte_end":59726,"line_start":253,"line_end":253,"column_start":11,"column_end":20},"name":"BuildSend","qualname":"::core::send::BuildSend","value":"BuildSend: GetSendConfig","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" A set of provided methods for the builder of a socket that implements `SendMsg`.\n","sig":null,"attributes":[{"value":"/ A set of provided methods for the builder of a socket that implements `SendMsg`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59622,"byte_end":59706,"line_start":252,"line_end":252,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59751,"byte_end":59759,"line_start":254,"line_end":254,"column_start":8,"column_end":16},"name":"send_hwm","qualname":"::core::send::BuildSend::send_hwm","value":"fn (&mut self, hwm: i32) -> &mut Self","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59885,"byte_end":59897,"line_start":259,"line_end":259,"column_start":8,"column_end":20},"name":"send_timeout","qualname":"::core::send::BuildSend::send_timeout","value":"fn (&mut self, timeout: Duration) -> &mut Self","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":281},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2480,"byte_end":2486,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::core::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2381},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5378,"byte_end":5386,"line_start":142,"line_end":142,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::core::Period::Infinite","value":"Period::Infinite","parent":{"krate":0,"index":2380},"children":[],"decl_id":null,"docs":" A unbounded period of time.\n","sig":null,"attributes":[{"value":"/ A unbounded period of time.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5342,"byte_end":5373,"line_start":141,"line_end":141,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2383},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5426,"byte_end":5432,"line_start":144,"line_end":144,"column_start":5,"column_end":11},"name":"Finite","qualname":"::core::Period::Finite","value":"Period::Finite(Duration)","parent":{"krate":0,"index":2380},"children":[],"decl_id":null,"docs":" A bounded period of time.\n","sig":null,"attributes":[{"value":"/ A bounded period of time.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5392,"byte_end":5421,"line_start":143,"line_end":143,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":2380},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5329,"byte_end":5335,"line_start":140,"line_end":140,"column_start":10,"column_end":16},"name":"Period","qualname":"::core::Period","value":"Period::{Infinite, Finite}","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2383}],"decl_id":null,"docs":" Represents a period of time.\n","sig":null,"attributes":[{"value":"/ Represents a period of time.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5126,"byte_end":5158,"line_start":136,"line_end":136,"column_start":1,"column_end":33}},{"value":"serde(from = \"Serde<Option<Duration>>\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5234,"byte_end":5276,"line_start":138,"line_end":138,"column_start":1,"column_end":43}},{"value":"serde(into = \"Serde<Option<Duration>>\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5277,"byte_end":5319,"line_start":139,"line_end":139,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":352},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6876,"byte_end":6882,"line_start":204,"line_end":204,"column_start":11,"column_end":17},"name":"Socket","qualname":"::core::Socket","value":"Socket: GetRawSocket","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"decl_id":null,"docs":" Methods shared by all thread-safe sockets.","sig":null,"attributes":[{"value":"/ Methods shared by all thread-safe sockets.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6495,"byte_end":6541,"line_start":197,"line_end":197,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6542,"byte_end":6545,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ Here is the list of socket option that differs from the ØMQ defaults:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6546,"byte_end":6620,"line_start":199,"line_end":199,"column_start":1,"column_end":74}},{"value":"/ * All sockets have their linger period set to zero (`ZMQ_BLOCKY`).","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6621,"byte_end":6691,"line_start":200,"line_end":200,"column_start":1,"column_end":71}},{"value":"/ * All sockets have IPV6 enabled (`ZMQ_IPV6`).","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6692,"byte_end":6741,"line_start":201,"line_end":201,"column_start":1,"column_end":50}},{"value":"/ * All sockets have `ZMQ_ZAP_ENFORCE_DOMAIN` set to true.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6742,"byte_end":6802,"line_start":202,"line_end":202,"column_start":1,"column_end":61}},{"value":"/ * All sockets have `ZMQ_ZAP_DOMAIN` hardcoded to \"global\".","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6803,"byte_end":6865,"line_start":203,"line_end":203,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7959,"byte_end":7966,"line_start":235,"line_end":235,"column_start":8,"column_end":15},"name":"connect","qualname":"::core::Socket::connect","value":"fn <E> (&self, endpoint: E) -> Result<(), Error>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Schedules a connection to a [`Endpoint`].","sig":null,"attributes":[{"value":"/ Schedules a connection to a [`Endpoint`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6903,"byte_end":6948,"line_start":205,"line_end":205,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6953,"byte_end":6956,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Since ØMQ handles all connections behind the curtain, one cannot know","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6961,"byte_end":7035,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ exactly when the connection is truly established a blocking `send`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7040,"byte_end":7110,"line_start":208,"line_end":208,"column_start":5,"column_end":75}},{"value":"/ or `recv` call is made on that connection.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7115,"byte_end":7161,"line_start":209,"line_end":209,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7166,"byte_end":7169,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7174,"byte_end":7194,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ * The endpoint's protocol must be supported by the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7199,"byte_end":7261,"line_start":212,"line_end":212,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7266,"byte_end":7269,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7274,"byte_end":7295,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/ * [`InvalidInput`] (transport incompatible or not supported)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7300,"byte_end":7364,"line_start":215,"line_end":215,"column_start":5,"column_end":69}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7369,"byte_end":7389,"line_start":216,"line_end":216,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7394,"byte_end":7397,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7402,"byte_end":7415,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7420,"byte_end":7427,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7432,"byte_end":7478,"line_start":220,"line_end":220,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, Client, TcpAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7483,"byte_end":7529,"line_start":221,"line_end":221,"column_start":5,"column_end":51}},{"value":"/ use std::convert::TryInto;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7534,"byte_end":7564,"line_start":222,"line_end":222,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7569,"byte_end":7572,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:420\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7577,"byte_end":7629,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7634,"byte_end":7637,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7642,"byte_end":7674,"line_start":226,"line_end":226,"column_start":5,"column_end":37}},{"value":"/ client.connect(&addr)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7679,"byte_end":7706,"line_start":227,"line_end":227,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7711,"byte_end":7716,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7721,"byte_end":7737,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7742,"byte_end":7749,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7754,"byte_end":7761,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ [`Endpoints`]: ../endpoint/enum.Endpoint.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7766,"byte_end":7815,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/ [`InvalidInput`]: ../enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7820,"byte_end":7885,"line_start":233,"line_end":233,"column_start":5,"column_end":70}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":7890,"byte_end":7951,"line_start":234,"line_end":234,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9458,"byte_end":9462,"line_start":279,"line_end":279,"column_start":8,"column_end":12},"name":"bind","qualname":"::core::Socket::bind","value":"fn <E> (&self, endpoint: E) -> Result<(), Error>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Schedules a bind to a [`Endpoint`] and then accepts\n incoming connections.","sig":null,"attributes":[{"value":"/ Schedules a bind to a [`Endpoint`] and then accepts","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8117,"byte_end":8172,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/ incoming connections.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8177,"byte_end":8202,"line_start":243,"line_end":243,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8207,"byte_end":8210,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ As opposed to `connect`, the socket will straight await and start","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8215,"byte_end":8284,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ accepting connections.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8289,"byte_end":8315,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8320,"byte_end":8323,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8328,"byte_end":8348,"line_start":248,"line_end":248,"column_start":5,"column_end":25}},{"value":"/ * The transport must be supported by the socket type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8353,"byte_end":8410,"line_start":249,"line_end":249,"column_start":5,"column_end":62}},{"value":"/ * The endpoint must not be in use.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8415,"byte_end":8453,"line_start":250,"line_end":250,"column_start":5,"column_end":43}},{"value":"/ * The endpoint must be local.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8458,"byte_end":8491,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8496,"byte_end":8499,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8504,"byte_end":8525,"line_start":253,"line_end":253,"column_start":5,"column_end":26}},{"value":"/ * [`InvalidInput`] (transport incompatible or not supported)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8530,"byte_end":8594,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/ * [`AddrInUse`] (addr already in use)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8599,"byte_end":8640,"line_start":255,"line_end":255,"column_start":5,"column_end":46}},{"value":"/ * [`AddrNotAvailable`] (addr not local)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8645,"byte_end":8688,"line_start":256,"line_end":256,"column_start":5,"column_end":48}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8693,"byte_end":8713,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8718,"byte_end":8721,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8726,"byte_end":8739,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8744,"byte_end":8751,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8756,"byte_end":8802,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, Server, TcpAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8807,"byte_end":8853,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/ use std::convert::TryInto;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8858,"byte_end":8888,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8893,"byte_end":8896,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ // Use a system-assigned port.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8901,"byte_end":8935,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8940,"byte_end":8990,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":8995,"byte_end":8998,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let server = Server::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9003,"byte_end":9035,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/ server.bind(addr)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9040,"byte_end":9063,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9068,"byte_end":9073,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9078,"byte_end":9094,"line_start":271,"line_end":271,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9099,"byte_end":9106,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9111,"byte_end":9118,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ [`Endpoints`]: ../endpoint/enum.Endpoint.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9123,"byte_end":9172,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`InvalidInput`]: ../enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9177,"byte_end":9242,"line_start":275,"line_end":275,"column_start":5,"column_end":70}},{"value":"/ [`AddrInUse`]: ../enum.ErrorKind.html#variant.AddrInUse","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9247,"byte_end":9306,"line_start":276,"line_end":276,"column_start":5,"column_end":64}},{"value":"/ [`AddrNotAvailable`]: ../enum.ErrorKind.html#variant.AddrNotAvailable","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9311,"byte_end":9384,"line_start":277,"line_end":277,"column_start":5,"column_end":78}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9389,"byte_end":9450,"line_start":278,"line_end":278,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10439,"byte_end":10449,"line_start":305,"line_end":305,"column_start":8,"column_end":18},"name":"disconnect","qualname":"::core::Socket::disconnect","value":"fn <E> (&self, endpoint: E) -> Result<(), Error>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Disconnect the socket from a [`Endpoint`].","sig":null,"attributes":[{"value":"/ Disconnect the socket from a [`Endpoint`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9610,"byte_end":9656,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9661,"byte_end":9664,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ## Disconnect from a connected endpoint","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9669,"byte_end":9712,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ The socket stops receiving and sending messages to the remote.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9717,"byte_end":9783,"line_start":289,"line_end":289,"column_start":5,"column_end":71}},{"value":"/ The incoming and outgoing queue of the socket associated to the endpoint","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9788,"byte_end":9864,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ are discarded. However, the remote server might still have outstanding","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9869,"byte_end":9943,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/ messages from the socket sent prior to the disconnection in its","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":9948,"byte_end":10015,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/ incoming queue.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10020,"byte_end":10039,"line_start":293,"line_end":293,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10044,"byte_end":10047,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10052,"byte_end":10072,"line_start":295,"line_end":295,"column_start":5,"column_end":25}},{"value":"/ * The endpoint must be currently connected to.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10077,"byte_end":10127,"line_start":296,"line_end":296,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10132,"byte_end":10135,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10140,"byte_end":10161,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/ * [`NotFound`] (endpoint was not connected to)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10166,"byte_end":10216,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10221,"byte_end":10241,"line_start":300,"line_end":300,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10246,"byte_end":10249,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ [`Endpoints`]: ../endpoint/enum.Endpoint.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10254,"byte_end":10303,"line_start":302,"line_end":302,"column_start":5,"column_end":54}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10308,"byte_end":10369,"line_start":303,"line_end":303,"column_start":5,"column_end":66}},{"value":"/ [`NotFound`]: ../enum.ErrorKind.html#variant.NotFound","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10374,"byte_end":10431,"line_start":304,"line_end":304,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11315,"byte_end":11321,"line_start":329,"line_end":329,"column_start":8,"column_end":14},"name":"unbind","qualname":"::core::Socket::unbind","value":"fn <I, E> (&self, endpoint: E) -> Result<(), Error>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Unbind the socket from a [`Endpoint`].","sig":null,"attributes":[{"value":"/ Unbind the socket from a [`Endpoint`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10603,"byte_end":10645,"line_start":312,"line_end":312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10650,"byte_end":10653,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ## Disconnect from a bound endpoint","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10658,"byte_end":10697,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/ The socket stops receiving and sending messages to peers connected to","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10702,"byte_end":10775,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ the now unbound endpoint. The outgoing queue of the socket associated","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10780,"byte_end":10853,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ to the endpoint is discarded, but the incoming queue is kept.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10858,"byte_end":10923,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10928,"byte_end":10931,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10936,"byte_end":10956,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ * The endpoint must be currently bound to.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":10961,"byte_end":11007,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11012,"byte_end":11015,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11020,"byte_end":11041,"line_start":322,"line_end":322,"column_start":5,"column_end":26}},{"value":"/ * [`NotFound`] (endpoint was not bound to)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11046,"byte_end":11092,"line_start":323,"line_end":323,"column_start":5,"column_end":51}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11097,"byte_end":11117,"line_start":324,"line_end":324,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11122,"byte_end":11125,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`Endpoints`]: ../endpoint/enum.Endpoint.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11130,"byte_end":11179,"line_start":326,"line_end":326,"column_start":5,"column_end":54}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11184,"byte_end":11245,"line_start":327,"line_end":327,"column_start":5,"column_end":66}},{"value":"/ [`NotFound`]: ../enum.ErrorKind.html#variant.NotFound","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11250,"byte_end":11307,"line_start":328,"line_end":328,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13176,"byte_end":13189,"line_start":385,"line_end":385,"column_start":8,"column_end":21},"name":"last_endpoint","qualname":"::core::Socket::last_endpoint","value":"fn (&self) -> Result<Endpoint, Error>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Retrieve the last endpoint connected or bound to.","sig":null,"attributes":[{"value":"/ Retrieve the last endpoint connected or bound to.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11474,"byte_end":11527,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11532,"byte_end":11535,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Returns `Error` with `ErrorKind::NotFound` if not endpoint","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11540,"byte_end":11602,"line_start":338,"line_end":338,"column_start":5,"column_end":67}},{"value":"/ was previously bound or connect to.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11607,"byte_end":11646,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11651,"byte_end":11654,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This is the only way to retrieve the assigned value of an","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11659,"byte_end":11720,"line_start":341,"line_end":341,"column_start":5,"column_end":66}},{"value":"/ [`Unspecified`] port.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11725,"byte_end":11750,"line_start":342,"line_end":342,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11755,"byte_end":11758,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11763,"byte_end":11784,"line_start":344,"line_end":344,"column_start":5,"column_end":26}},{"value":"/ * [`NotFound`] (no endpoint to retrieve)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11789,"byte_end":11833,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11838,"byte_end":11858,"line_start":346,"line_end":346,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11863,"byte_end":11866,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`NotFound`]: ../endpoint/enum.Endpoint.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11871,"byte_end":11919,"line_start":348,"line_end":348,"column_start":5,"column_end":53}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11924,"byte_end":11985,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11990,"byte_end":11993,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":11998,"byte_end":12011,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12016,"byte_end":12023,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12028,"byte_end":12074,"line_start":353,"line_end":353,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, Server, TcpAddr, addr::Endpoint, ErrorKind};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12079,"byte_end":12152,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12157,"byte_end":12160,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ // We create a tcp addr with an unspecified port.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12165,"byte_end":12218,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/ // This port will be assigned by the OS when binding.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12223,"byte_end":12280,"line_start":357,"line_end":357,"column_start":5,"column_end":62}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12285,"byte_end":12335,"line_start":358,"line_end":358,"column_start":5,"column_end":55}},{"value":"/ assert!(addr.host().port().is_unspecified());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12340,"byte_end":12389,"line_start":359,"line_end":359,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12394,"byte_end":12397,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let server = Server::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12402,"byte_end":12434,"line_start":361,"line_end":361,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12439,"byte_end":12442,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ // Returns a `NotFound` error since no endpoint was bound","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12447,"byte_end":12508,"line_start":363,"line_end":363,"column_start":5,"column_end":66}},{"value":"/ // or connected to.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12513,"byte_end":12536,"line_start":364,"line_end":364,"column_start":5,"column_end":28}},{"value":"/ let err = server.last_endpoint().unwrap_err();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12541,"byte_end":12591,"line_start":365,"line_end":365,"column_start":5,"column_end":55}},{"value":"/ match err.kind() {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12596,"byte_end":12618,"line_start":366,"line_end":366,"column_start":5,"column_end":27}},{"value":"/     ErrorKind::NotFound(_) => (),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12623,"byte_end":12660,"line_start":367,"line_end":367,"column_start":5,"column_end":42}},{"value":"/     _ => unreachable!(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12665,"byte_end":12693,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12698,"byte_end":12703,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12708,"byte_end":12711,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ server.bind(&addr)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12716,"byte_end":12740,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12745,"byte_end":12748,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Now we retrieve the endpoint that was previously bound.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12753,"byte_end":12815,"line_start":373,"line_end":373,"column_start":5,"column_end":67}},{"value":"/ match server.last_endpoint()? {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12820,"byte_end":12855,"line_start":374,"line_end":374,"column_start":5,"column_end":40}},{"value":"/     Endpoint::Tcp(tcp) => assert!(tcp.host().port().is_specified()),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12860,"byte_end":12932,"line_start":375,"line_end":375,"column_start":5,"column_end":77}},{"value":"/     _ => unreachable!(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12937,"byte_end":12965,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12970,"byte_end":12975,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12980,"byte_end":12985,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":12990,"byte_end":13006,"line_start":379,"line_end":379,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13011,"byte_end":13018,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13023,"byte_end":13030,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13035,"byte_end":13038,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`Unspecified`]: ../addr/enum.Port.html#variant.Unspecified","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13043,"byte_end":13106,"line_start":383,"line_end":383,"column_start":5,"column_end":68}},{"value":"/ [`NotFound`]: ../enum.ErrorKind.html#variant.NotFound","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13111,"byte_end":13168,"line_start":384,"line_end":384,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13890,"byte_end":13899,"line_start":409,"line_end":409,"column_start":8,"column_end":17},"name":"mechanism","qualname":"::core::Socket::mechanism","value":"fn (&self) -> Mechanism","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Returns the socket's [`Mechanism`].","sig":null,"attributes":[{"value":"/ Returns the socket's [`Mechanism`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13479,"byte_end":13518,"line_start":394,"line_end":394,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13523,"byte_end":13526,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13531,"byte_end":13544,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13549,"byte_end":13556,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13561,"byte_end":13607,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, Server, auth::Mechanism};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13612,"byte_end":13666,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13671,"byte_end":13674,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let server = Server::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13679,"byte_end":13711,"line_start":401,"line_end":401,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(server.mechanism(), Mechanism::Null);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13716,"byte_end":13768,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13773,"byte_end":13778,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13783,"byte_end":13799,"line_start":404,"line_end":404,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13804,"byte_end":13811,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13816,"byte_end":13823,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13828,"byte_end":13831,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ [`Mechanism`]: ../auth/enum.Mechanism.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13836,"byte_end":13882,"line_start":408,"line_end":408,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15210,"byte_end":15223,"line_start":449,"line_end":449,"column_start":8,"column_end":21},"name":"set_mechanism","qualname":"::core::Socket::set_mechanism","value":"fn <M> (&self, mechanism: M) -> Result<(), Error>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Set the socket's [`Mechanism`].","sig":null,"attributes":[{"value":"/ Set the socket's [`Mechanism`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":13998,"byte_end":14033,"line_start":413,"line_end":413,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14038,"byte_end":14041,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Feature Flags","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14046,"byte_end":14065,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14070,"byte_end":14073,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Note that `Mechanism::CurveClient` and `Mechanism::CurveServer` require","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14078,"byte_end":14153,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ the feature flag \"curve\" to be enabled, and will panic if used otherwise.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14158,"byte_end":14235,"line_start":418,"line_end":418,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14240,"byte_end":14243,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14248,"byte_end":14261,"line_start":420,"line_end":420,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14266,"byte_end":14273,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14278,"byte_end":14324,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/ #[cfg(feature = \"curve\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14329,"byte_end":14360,"line_start":423,"line_end":423,"column_start":5,"column_end":36}},{"value":"/     use libzmq::{prelude::*, Client, auth::*};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14365,"byte_end":14415,"line_start":424,"line_end":424,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14420,"byte_end":14423,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/     let client = Client::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14428,"byte_end":14464,"line_start":426,"line_end":426,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(client.mechanism(), Mechanism::Null);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14469,"byte_end":14525,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14530,"byte_end":14533,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/     let server_cert = CurveCert::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14538,"byte_end":14588,"line_start":429,"line_end":429,"column_start":5,"column_end":55}},{"value":"/     // We do not specify a client certificate, so it","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14593,"byte_end":14649,"line_start":430,"line_end":430,"column_start":5,"column_end":61}},{"value":"/     // will be automatically generated.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14654,"byte_end":14697,"line_start":431,"line_end":431,"column_start":5,"column_end":48}},{"value":"/     let creds = CurveClientCreds::new(server_cert.public());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14702,"byte_end":14766,"line_start":432,"line_end":432,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14771,"byte_end":14774,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     client.set_mechanism(&creds)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14779,"byte_end":14817,"line_start":434,"line_end":434,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14822,"byte_end":14825,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     if let Mechanism::CurveClient(creds) = client.mechanism() {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14830,"byte_end":14897,"line_start":436,"line_end":436,"column_start":5,"column_end":72}},{"value":"/         assert_eq!(creds.server(), server_cert.public());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14902,"byte_end":14963,"line_start":437,"line_end":437,"column_start":5,"column_end":66}},{"value":"/         assert!(creds.cert().is_some());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":14968,"byte_end":15012,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/     } else {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15017,"byte_end":15033,"line_start":439,"line_end":439,"column_start":5,"column_end":21}},{"value":"/         unreachable!()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15038,"byte_end":15064,"line_start":440,"line_end":440,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15069,"byte_end":15078,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15083,"byte_end":15088,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15093,"byte_end":15098,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15103,"byte_end":15119,"line_start":444,"line_end":444,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15124,"byte_end":15131,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15136,"byte_end":15143,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15148,"byte_end":15151,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [`Mechanism`]: ../auth/enum.Mechanism.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":15156,"byte_end":15202,"line_start":448,"line_end":448,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2414},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":18403,"byte_end":18415,"line_start":550,"line_end":550,"column_start":12,"column_end":24},"name":"SocketConfig","qualname":"::core::SocketConfig","value":"SocketConfig {  }","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":370},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19239,"byte_end":19254,"line_start":578,"line_end":578,"column_start":11,"column_end":26},"name":"GetSocketConfig","qualname":"::core::GetSocketConfig","value":"GetSocketConfig: private::Sealed","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19281,"byte_end":19294,"line_start":579,"line_end":579,"column_start":8,"column_end":21},"name":"socket_config","qualname":"::core::GetSocketConfig::socket_config","value":"fn (&self) -> &SocketConfig","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19328,"byte_end":19345,"line_start":581,"line_end":581,"column_start":8,"column_end":25},"name":"socket_config_mut","qualname":"::core::GetSocketConfig::socket_config_mut","value":"fn (&mut self) -> &mut SocketConfig","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":376},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19638,"byte_end":19653,"line_start":595,"line_end":595,"column_start":11,"column_end":26},"name":"ConfigureSocket","qualname":"::core::ConfigureSocket","value":"ConfigureSocket: GetSocketConfig","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":388}],"decl_id":null,"docs":" A set of provided methods for a socket configuration.\n","sig":null,"attributes":[{"value":"/ A set of provided methods for a socket configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19570,"byte_end":19627,"line_start":594,"line_end":594,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19680,"byte_end":19687,"line_start":596,"line_end":596,"column_start":8,"column_end":15},"name":"connect","qualname":"::core::ConfigureSocket::connect","value":"fn (&self) -> Option<&[Endpoint]>","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19782,"byte_end":19793,"line_start":600,"line_end":600,"column_start":8,"column_end":19},"name":"set_connect","qualname":"::core::ConfigureSocket::set_connect","value":"fn <I, E> (&mut self, maybe: Option<I>) -> ()","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20079,"byte_end":20083,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"bind","qualname":"::core::ConfigureSocket::bind","value":"fn (&self) -> Option<&[Endpoint]>","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20175,"byte_end":20183,"line_start":614,"line_end":614,"column_start":8,"column_end":16},"name":"set_bind","qualname":"::core::ConfigureSocket::set_bind","value":"fn <I, E> (&mut self, maybe: Option<I>) -> ()","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20466,"byte_end":20475,"line_start":624,"line_end":624,"column_start":8,"column_end":17},"name":"mechanism","qualname":"::core::ConfigureSocket::mechanism","value":"fn (&self) -> Option<&Mechanism>","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20569,"byte_end":20582,"line_start":628,"line_end":628,"column_start":8,"column_end":21},"name":"set_mechanism","qualname":"::core::ConfigureSocket::set_mechanism","value":"fn (&mut self, maybe: Option<Mechanism>) -> ()","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":390},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20787,"byte_end":20798,"line_start":636,"line_end":636,"column_start":11,"column_end":22},"name":"BuildSocket","qualname":"::core::BuildSocket","value":"BuildSocket: GetSocketConfig + Sized","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397}],"decl_id":null,"docs":" A set of provided methods for a socket builder.\n","sig":null,"attributes":[{"value":"/ A set of provided methods for a socket builder.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20725,"byte_end":20776,"line_start":635,"line_end":635,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20833,"byte_end":20840,"line_start":637,"line_end":637,"column_start":8,"column_end":15},"name":"connect","qualname":"::core::BuildSocket::connect","value":"fn <I, E> (&mut self, endpoints: I) -> &mut Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":21053,"byte_end":21057,"line_start":646,"line_end":646,"column_start":8,"column_end":12},"name":"bind","qualname":"::core::BuildSocket::bind","value":"fn <I, E> (&mut self, endpoints: I) -> &mut Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":21267,"byte_end":21276,"line_start":655,"line_end":655,"column_start":8,"column_end":17},"name":"mechanism","qualname":"::core::BuildSocket::mechanism","value":"fn <M> (&mut self, mechanism: M) -> &mut Self","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":399},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"auth","qualname":"::auth","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":496},{"krate":0,"index":699},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":3139},{"krate":0,"index":3203},{"krate":0,"index":3201},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3191},{"krate":0,"index":3185},{"krate":0,"index":3142},{"krate":0,"index":770},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":788},{"krate":0,"index":3205},{"krate":0,"index":3282},{"krate":0,"index":3280},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3270},{"krate":0,"index":3264},{"krate":0,"index":3219},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":3284},{"krate":0,"index":3300},{"krate":0,"index":3299},{"krate":0,"index":3297},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3302},{"krate":0,"index":3307},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":798}],"decl_id":null,"docs":" Socket authentication and encryption.","sig":null,"attributes":[{"value":"! Socket authentication and encryption.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70660,"byte_end":70701,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70702,"byte_end":70705,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! In *libzmq* each `Ctx` as a dedicated background","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70706,"byte_end":70758,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"! `AuthHandler` thread which will handle authentication and encryption","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70759,"byte_end":70831,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"! for all sockets within the same context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70832,"byte_end":70876,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70877,"byte_end":70880,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! For two sockets to connect to","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70881,"byte_end":70914,"line_start":7,"line_end":7,"column_start":1,"column_end":34}},{"value":"! each other, they must have matching `Mechanism`. Then authentication is","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70915,"byte_end":70990,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"! performed depending on the configuration of the `AuthHandler`. This","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":70991,"byte_end":71062,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"! configuration can be modified by using a `AuthClient` which send commands","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71063,"byte_end":71140,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"! to the handler.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71141,"byte_end":71160,"line_start":11,"line_end":11,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78277,"byte_end":78287,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"AuthClient","qualname":"::auth::client::AuthClient","value":"AuthClient {  }","parent":null,"children":[{"krate":0,"index":417}],"decl_id":null,"docs":" A client to configure the `AuthServer`.","sig":null,"attributes":[{"value":"/ A client to configure the `AuthServer`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76574,"byte_end":76617,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76618,"byte_end":76621,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ There can be multiple `AuthClient` associated with the same `AuthServer`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76622,"byte_end":76699,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76700,"byte_end":76703,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76704,"byte_end":76717,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76718,"byte_end":76721,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76722,"byte_end":76729,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76730,"byte_end":76776,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ #[cfg(feature = \"curve\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76777,"byte_end":76808,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/     use libzmq::{prelude::*, auth::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76809,"byte_end":76854,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/     use std::{time::Duration};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76855,"byte_end":76889,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76890,"byte_end":76893,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     let server_cert = CurveCert::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76894,"byte_end":76944,"line_start":49,"line_end":49,"column_start":1,"column_end":51}},{"value":"/     let client_cert = CurveCert::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76945,"byte_end":76995,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":76996,"byte_end":76999,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77000,"byte_end":77054,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77055,"byte_end":77058,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     let server_creds = CurveServerCreds::new(server_cert.secret());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77059,"byte_end":77130,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77131,"byte_end":77134,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Creates a server using the `CurveServer` mechanism. Since `CURVE`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77135,"byte_end":77211,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/     // authentication is enabled by default, only sockets whose public key","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77212,"byte_end":77290,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/     // is in the whitelist will be allowed to connect.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77291,"byte_end":77349,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/     let server = ServerBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77350,"byte_end":77391,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/         .bind(&addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77392,"byte_end":77416,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/         .mechanism(server_creds)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77417,"byte_end":77453,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/         .recv_timeout(Duration::from_millis(200))","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77454,"byte_end":77507,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/         .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77508,"byte_end":77530,"line_start":63,"line_end":63,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77531,"byte_end":77534,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     // We need to tell the `AuthServer` to allow the client's public key.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77535,"byte_end":77612,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/     let _ = AuthBuilder::new().curve_registry(client_cert.public()).build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77613,"byte_end":77694,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77695,"byte_end":77698,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     let bound = server.last_endpoint()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77699,"byte_end":77743,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77744,"byte_end":77747,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     let client_creds = CurveClientCreds::new(server_cert.public())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77748,"byte_end":77818,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/         .add_cert(client_cert);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77819,"byte_end":77854,"line_start":71,"line_end":71,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77855,"byte_end":77858,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Creates a server using the `CurveServer` mechanism. Since `CURVE`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77859,"byte_end":77935,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/     let client = ClientBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77936,"byte_end":77977,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/         .mechanism(client_creds)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":77978,"byte_end":78014,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/         .connect(bound)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78015,"byte_end":78042,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/         .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78043,"byte_end":78065,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78066,"byte_end":78069,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     // The handshake is successfull so we can now send and receive messages.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78070,"byte_end":78150,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/     client.send(\"\").unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78151,"byte_end":78184,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/     server.recv_msg().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78185,"byte_end":78220,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78221,"byte_end":78226,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78227,"byte_end":78232,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78233,"byte_end":78249,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78250,"byte_end":78257,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78258,"byte_end":78265,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78452,"byte_end":78455,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<AuthClient>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `AuthClient` connected to the `AuthServer` associated\n with the default global `Ctx`.\n","sig":null,"attributes":[{"value":"/ Create a `AuthClient` connected to the `AuthServer` associated","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78335,"byte_end":78401,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/ with the default global `Ctx`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78406,"byte_end":78440,"line_start":93,"line_end":93,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78663,"byte_end":78671,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<AuthClient>::with_ctx","value":"fn (handle: CtxHandle) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `AuthClient` connected to the `AuthServer` associated\n with the context aliased by the `CtxHandle`.\n","sig":null,"attributes":[{"value":"/ Create a `AuthClient` connected to the `AuthServer` associated","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78532,"byte_end":78598,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ with the context aliased by the `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78603,"byte_end":78651,"line_start":99,"line_end":99,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":79395,"byte_end":79408,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"add_blacklist","qualname":"<AuthClient>::add_blacklist","value":"fn <I> (&self, ips: I) -> Result<(), Error<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Add the ips to the `AuthServer`'s blacklist.","sig":null,"attributes":[{"value":"/ Add the ips to the `AuthServer`'s blacklist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":79280,"byte_end":79328,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":79333,"byte_end":79336,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Blacklisted ips will be denied access.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":79341,"byte_end":79383,"line_start":122,"line_end":122,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":79867,"byte_end":79883,"line_start":140,"line_end":140,"column_start":12,"column_end":28},"name":"remove_blacklist","qualname":"<AuthClient>::remove_blacklist","value":"fn <I> (&self, ips: I) -> Result<(), Error<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Remove the ips from the `AuthServer`'s blacklist, if\n they are present.\n","sig":null,"attributes":[{"value":"/ Remove the ips from the `AuthServer`'s blacklist, if","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":79773,"byte_end":79829,"line_start":138,"line_end":138,"column_start":5,"column_end":61}},{"value":"/ they are present.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":79834,"byte_end":79855,"line_start":139,"line_end":139,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80366,"byte_end":80379,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"name":"set_blacklist","qualname":"<AuthClient>::set_blacklist","value":"fn <I> (&self, ips: I) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the ips in the `AuthServer`'s blacklist.","sig":null,"attributes":[{"value":"/ Set the ips in the `AuthServer`'s blacklist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80251,"byte_end":80299,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80304,"byte_end":80307,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Blacklisted ips will be denied access.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80312,"byte_end":80354,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80862,"byte_end":80875,"line_start":173,"line_end":173,"column_start":12,"column_end":25},"name":"add_whitelist","qualname":"<AuthClient>::add_whitelist","value":"fn <I> (&self, ips: I) -> Result<(), Error<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Add the ips to the `AuthServer`'s whitelist.","sig":null,"attributes":[{"value":"/ Add the ips to the `AuthServer`'s whitelist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80638,"byte_end":80686,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80691,"byte_end":80694,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the whitelist is not empty, only ips in present","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80699,"byte_end":80753,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/ in the whitelist are allowed. The whitelist takes precedence","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80758,"byte_end":80822,"line_start":171,"line_end":171,"column_start":5,"column_end":69}},{"value":"/ over the blacklist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":80827,"byte_end":80850,"line_start":172,"line_end":172,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81331,"byte_end":81347,"line_start":190,"line_end":190,"column_start":12,"column_end":28},"name":"remove_whitelist","qualname":"<AuthClient>::remove_whitelist","value":"fn <I> (&self, ips: I) -> Result<(), Error<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Remove the ips from the `AuthServer`'s whitelist, if it\n is present.\n","sig":null,"attributes":[{"value":"/ Remove the ips from the `AuthServer`'s whitelist, if it","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81240,"byte_end":81299,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/ is present.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81304,"byte_end":81319,"line_start":189,"line_end":189,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81939,"byte_end":81952,"line_start":210,"line_end":210,"column_start":12,"column_end":25},"name":"set_whitelist","qualname":"<AuthClient>::set_whitelist","value":"fn <I> (&self, ips: I) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the ips in the `AuthServer`'s whitelist.","sig":null,"attributes":[{"value":"/ Set the ips in the `AuthServer`'s whitelist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81715,"byte_end":81763,"line_start":205,"line_end":205,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81768,"byte_end":81771,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ If the whitelist is not empty, only ips in present","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81776,"byte_end":81830,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/ in the whitelist are allowed. The whitelist takes precedence","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81835,"byte_end":81899,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ over the blacklist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":81904,"byte_end":81927,"line_start":209,"line_end":209,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":82338,"byte_end":82356,"line_start":222,"line_end":222,"column_start":12,"column_end":30},"name":"add_plain_registry","qualname":"<AuthClient>::add_plain_registry","value":"fn <I, E> (&self, iter: I) -> Result<(), Error<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Add the credentials to the `AuthServer`'s plain registry.","sig":null,"attributes":[{"value":"/ Add the credentials to the `AuthServer`'s plain registry.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":82177,"byte_end":82238,"line_start":219,"line_end":219,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":82243,"byte_end":82246,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Only credentials present in the registry can successfully authenticate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":82251,"byte_end":82326,"line_start":221,"line_end":221,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":82860,"byte_end":82881,"line_start":239,"line_end":239,"column_start":12,"column_end":33},"name":"remove_plain_registry","qualname":"<AuthClient>::remove_plain_registry","value":"fn <I, E> (&self, usernames: I) -> Result<(), Error<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Remove the credentials with the given usernames from the plain registry.\n","sig":null,"attributes":[{"value":"/ Remove the credentials with the given usernames from the plain registry.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":82772,"byte_end":82848,"line_start":238,"line_end":238,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83490,"byte_end":83508,"line_start":261,"line_end":261,"column_start":12,"column_end":30},"name":"set_plain_registry","qualname":"<AuthClient>::set_plain_registry","value":"fn <I, E> (&self, creds: I) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the credentials in the `AuthServer`'s plain registry.","sig":null,"attributes":[{"value":"/ Set the credentials in the `AuthServer`'s plain registry.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83329,"byte_end":83390,"line_start":258,"line_end":258,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83395,"byte_end":83398,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Only credentials present in the registry can successfully authenticate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83403,"byte_end":83478,"line_start":260,"line_end":260,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83998,"byte_end":84016,"line_start":276,"line_end":276,"column_start":12,"column_end":30},"name":"add_curve_registry","qualname":"<AuthClient>::add_curve_registry","value":"fn <I, E> (&self, keys: I) -> Result<(), Error<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Add the curve keys to the curve registry.","sig":null,"attributes":[{"value":"/ Add the curve keys to the curve registry.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83820,"byte_end":83865,"line_start":272,"line_end":272,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83870,"byte_end":83873,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Only public keys present in the whitelist are allowed to authenticate","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83878,"byte_end":83951,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ via the `CURVE` mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":83956,"byte_end":83986,"line_start":275,"line_end":275,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":84538,"byte_end":84559,"line_start":294,"line_end":294,"column_start":12,"column_end":33},"name":"remove_curve_registry","qualname":"<AuthClient>::remove_curve_registry","value":"fn <I, E> (&self, keys: I) -> Result<(), Error<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Remove the given public keys from the `AuthServer`'s curve registry\n if they are present.\n","sig":null,"attributes":[{"value":"/ Remove the given public keys from the `AuthServer`'s curve registry","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":84426,"byte_end":84497,"line_start":292,"line_end":292,"column_start":5,"column_end":76}},{"value":"/ if they are present.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":84502,"byte_end":84526,"line_start":293,"line_end":293,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85068,"byte_end":85086,"line_start":314,"line_end":314,"column_start":12,"column_end":30},"name":"set_curve_registry","qualname":"<AuthClient>::set_curve_registry","value":"fn <I, E> (&self, keys: I) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the public keys in the `AuthServer`'s curve registry.\n","sig":null,"attributes":[{"value":"/ Set the public keys in the `AuthServer`'s curve registry.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":84995,"byte_end":85056,"line_start":313,"line_end":313,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85644,"byte_end":85658,"line_start":329,"line_end":329,"column_start":12,"column_end":26},"name":"set_curve_auth","qualname":"<AuthClient>::set_curve_auth","value":"fn (&self, enabled: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use authentication for the `CURVE` mechanism.","sig":null,"attributes":[{"value":"/ Sets whether to use authentication for the `CURVE` mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85366,"byte_end":85431,"line_start":324,"line_end":324,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85436,"byte_end":85439,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If it is set to `true`, then only sockets whose public key is present","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85444,"byte_end":85517,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/ in the whitelist will be allowed to authenticate. Otherwise all sockets","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85522,"byte_end":85597,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/ authenticate successfully.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85602,"byte_end":85632,"line_start":328,"line_end":328,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2608},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85992,"byte_end":86002,"line_start":339,"line_end":339,"column_start":12,"column_end":22},"name":"AuthConfig","qualname":"::auth::client::AuthConfig","value":"AuthConfig {  }","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613}],"decl_id":null,"docs":" A Configuration of the `AuthServer`.","sig":null,"attributes":[{"value":"/ A Configuration of the `AuthServer`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85771,"byte_end":85811,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85812,"byte_end":85815,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ A `AuthClient` must be used to communicate this configuration with the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85816,"byte_end":85890,"line_start":336,"line_end":336,"column_start":1,"column_end":75}},{"value":"/ server.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":85891,"byte_end":85902,"line_start":337,"line_end":337,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86277,"byte_end":86280,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"new","qualname":"<AuthConfig>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `AuthConfig`.\n","sig":null,"attributes":[{"value":"/ Create an empty `AuthConfig`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86232,"byte_end":86265,"line_start":348,"line_end":348,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86473,"byte_end":86478,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"name":"build","qualname":"<AuthConfig>::build","value":"fn (&self) -> Result<AuthClient, Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to build a `AuthClient` and send the configuration\n to the `AuthServer` associated with the default global `Ctx`.\n","sig":null,"attributes":[{"value":"/ Attempts to build a `AuthClient` and send the configuration","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86328,"byte_end":86391,"line_start":353,"line_end":353,"column_start":5,"column_end":68}},{"value":"/ to the `AuthServer` associated with the default global `Ctx`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86396,"byte_end":86461,"line_start":354,"line_end":354,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86732,"byte_end":86740,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<AuthConfig>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<AuthClient, Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to build a `AuthClient` and send the configuration\n to the `AuthServer` associated with the context aliased by the\n `CtxHandle`.\n","sig":null,"attributes":[{"value":"/ Attempts to build a `AuthClient` and send the configuration","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86565,"byte_end":86628,"line_start":359,"line_end":359,"column_start":5,"column_end":68}},{"value":"/ to the `AuthServer` associated with the context aliased by the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86633,"byte_end":86699,"line_start":360,"line_end":360,"column_start":5,"column_end":71}},{"value":"/ `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86704,"byte_end":86720,"line_start":361,"line_end":361,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":87029,"byte_end":87034,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"apply","qualname":"<AuthConfig>::apply","value":"fn (&self, client: &AuthClient) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Apply the configuration to the `AuthClient` which will send\n it to its associated `AuthServer`.\n","sig":null,"attributes":[{"value":"/ Apply the configuration to the `AuthClient` which will send","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86911,"byte_end":86974,"line_start":369,"line_end":369,"column_start":5,"column_end":68}},{"value":"/ it to its associated `AuthServer`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86979,"byte_end":87017,"line_start":370,"line_end":370,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":87687,"byte_end":87700,"line_start":391,"line_end":391,"column_start":12,"column_end":25},"name":"set_blacklist","qualname":"<AuthConfig>::set_blacklist","value":"fn <I> (&mut self, maybe: Option<I>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":87920,"byte_end":87933,"line_start":400,"line_end":400,"column_start":12,"column_end":25},"name":"set_whitelist","qualname":"<AuthConfig>::set_whitelist","value":"fn <I> (&mut self, maybe: Option<I>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":88153,"byte_end":88171,"line_start":409,"line_end":409,"column_start":12,"column_end":30},"name":"set_plain_registry","qualname":"<AuthConfig>::set_plain_registry","value":"fn <I, E> (&mut self, maybe: Option<I>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":88464,"byte_end":88482,"line_start":419,"line_end":419,"column_start":12,"column_end":30},"name":"set_curve_registry","qualname":"<AuthConfig>::set_curve_registry","value":"fn <I, E> (&mut self, maybe: Option<I>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":88771,"byte_end":88785,"line_start":429,"line_end":429,"column_start":12,"column_end":26},"name":"set_curve_auth","qualname":"<AuthConfig>::set_curve_auth","value":"fn (&mut self, maybe: Option<bool>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2685},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89080,"byte_end":89091,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"AuthBuilder","qualname":"::auth::client::AuthBuilder","value":"AuthBuilder {  }","parent":null,"children":[{"krate":0,"index":2686}],"decl_id":null,"docs":" A builder for a `AuthClient`.","sig":null,"attributes":[{"value":"/ A builder for a `AuthClient`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":88862,"byte_end":88895,"line_start":434,"line_end":434,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":88896,"byte_end":88899,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ Creates a `AuthClient` and sends the configuration to the associated","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":88900,"byte_end":88972,"line_start":436,"line_end":436,"column_start":1,"column_end":73}},{"value":"/ `AuthServer`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":88973,"byte_end":88990,"line_start":437,"line_end":437,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89150,"byte_end":89153,"line_start":444,"line_end":444,"column_start":12,"column_end":15},"name":"new","qualname":"<AuthBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89208,"byte_end":89213,"line_start":448,"line_end":448,"column_start":12,"column_end":17},"name":"build","qualname":"<AuthBuilder>::build","value":"fn (&self) -> Result<AuthClient, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89297,"byte_end":89305,"line_start":452,"line_end":452,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<AuthBuilder>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<AuthClient, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89417,"byte_end":89426,"line_start":456,"line_end":456,"column_start":12,"column_end":21},"name":"blacklist","qualname":"<AuthBuilder>::blacklist","value":"fn <I> (&mut self, ips: I) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89578,"byte_end":89587,"line_start":464,"line_end":464,"column_start":12,"column_end":21},"name":"whitelist","qualname":"<AuthBuilder>::whitelist","value":"fn <I> (&mut self, ips: I) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89739,"byte_end":89753,"line_start":472,"line_end":472,"column_start":12,"column_end":26},"name":"plain_registry","qualname":"<AuthBuilder>::plain_registry","value":"fn <I, E> (&mut self, iter: I) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89961,"byte_end":89975,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"curve_registry","qualname":"<AuthBuilder>::curve_registry","value":"fn <I, E> (&mut self, keys: I) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":90181,"byte_end":90194,"line_start":490,"line_end":490,"column_start":12,"column_end":25},"name":"no_curve_auth","qualname":"<AuthBuilder>::no_curve_auth","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2751},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":99046,"byte_end":99057,"line_start":42,"line_end":42,"column_start":5,"column_end":16},"name":"InvalidSize","qualname":"::auth::curve::CurveError::InvalidSize","value":"CurveError::InvalidSize","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"input string must have len of 40 char\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":98992,"byte_end":99041,"line_start":41,"line_end":41,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":2753},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":99176,"byte_end":99187,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::auth::curve::CurveError::InvalidByte","value":"CurveError::InvalidByte { pos, byte }","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"input string contains invalid byte 0x{:2X} at offset {}\", byte, pos)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":99063,"byte_end":99171,"line_start":43,"line_end":47,"column_start":5,"column_end":7}}]},{"kind":"Enum","id":{"krate":0,"index":2750},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":98975,"byte_end":98985,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"CurveError","qualname":"::auth::curve::CurveError","value":"CurveError::{InvalidSize, InvalidByte}","parent":null,"children":[{"krate":0,"index":2751},{"krate":0,"index":2753}],"decl_id":null,"docs":" A error when encoding or decoding a `CurveKey`.\n","sig":null,"attributes":[{"value":"/ A error when encoding or decoding a `CurveKey`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":98875,"byte_end":98926,"line_start":38,"line_end":38,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2768},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101563,"byte_end":101577,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"CurvePublicKey","qualname":"::auth::curve::CurvePublicKey","value":"CurvePublicKey {  }","parent":null,"children":[{"krate":0,"index":2769}],"decl_id":null,"docs":" A public `CURVE` cryptographic key in the printable [`Z85`] representation.","sig":null,"attributes":[{"value":"/ A public `CURVE` cryptographic key in the printable [`Z85`] representation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":100918,"byte_end":100997,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":100998,"byte_end":101001,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101002,"byte_end":101015,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101016,"byte_end":101023,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ use libzmq::auth::*;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101024,"byte_end":101048,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101049,"byte_end":101052,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let cert = CurveCert::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101053,"byte_end":101092,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101093,"byte_end":101096,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ // Generate a public key from a curve certificate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101097,"byte_end":101151,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"/ let public = cert.public().to_owned();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101152,"byte_end":101194,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ // Derive a public key from a secret key.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101195,"byte_end":101240,"line_start":134,"line_end":134,"column_start":1,"column_end":46}},{"value":"/ let derived: CurvePublicKey = cert.secret().into();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101241,"byte_end":101296,"line_start":135,"line_end":135,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101297,"byte_end":101300,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(public, derived);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101301,"byte_end":101333,"line_start":137,"line_end":137,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101334,"byte_end":101341,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101342,"byte_end":101345,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`Z85`]: https://rfc.zeromq.org/spec:32/Z85/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101346,"byte_end":101394,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/ [`CurveCert::new_unique()`]: struct.CurveCert.html#method.new_unique","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101395,"byte_end":101467,"line_start":141,"line_end":141,"column_start":1,"column_end":73}},{"value":"serde(transparent)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101530,"byte_end":101551,"line_start":143,"line_end":143,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101702,"byte_end":101705,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"new","qualname":"<CurvePublicKey>::new","value":"fn <S> (text: S) -> Result<Self, CurveError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CurvePublicKey` from a valid `Z85` string.\n","sig":null,"attributes":[{"value":"/ Create a new `CurvePublicKey` from a valid `Z85` string.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101630,"byte_end":101690,"line_start":149,"line_end":149,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101924,"byte_end":101930,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"as_str","qualname":"<CurvePublicKey>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the key in `Z85` encoded string.\n","sig":null,"attributes":[{"value":"/ Returns the key in `Z85` encoded string.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101868,"byte_end":101912,"line_start":159,"line_end":159,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2796},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104562,"byte_end":104576,"line_start":270,"line_end":270,"column_start":12,"column_end":26},"name":"CurveSecretKey","qualname":"::auth::curve::CurveSecretKey","value":"CurveSecretKey {  }","parent":null,"children":[{"krate":0,"index":2797}],"decl_id":null,"docs":" A secret `CURVE` cryptographic key in the printable [`Z85`] representation.","sig":null,"attributes":[{"value":"/ A secret `CURVE` cryptographic key in the printable [`Z85`] representation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104204,"byte_end":104283,"line_start":262,"line_end":262,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104284,"byte_end":104287,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ Can be generated by [`CurveCert::new_unique()`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104288,"byte_end":104340,"line_start":264,"line_end":264,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104341,"byte_end":104344,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ [`Z85`]: https://rfc.zeromq.org/spec:32/Z85/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104345,"byte_end":104393,"line_start":266,"line_end":266,"column_start":1,"column_end":49}},{"value":"/ [`CurveCert::new_unique()`]: struct.CurveCert.html#method.new_unique","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104394,"byte_end":104466,"line_start":267,"line_end":267,"column_start":1,"column_end":73}},{"value":"serde(transparent)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104529,"byte_end":104550,"line_start":269,"line_end":269,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104701,"byte_end":104704,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"new","qualname":"<CurveSecretKey>::new","value":"fn <S> (text: S) -> Result<Self, CurveError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CurveSecretKey` from a valid `Z85` string.\n","sig":null,"attributes":[{"value":"/ Create a new `CurveSecretKey` from a valid `Z85` string.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104629,"byte_end":104689,"line_start":275,"line_end":275,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104923,"byte_end":104929,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"as_str","qualname":"<CurveSecretKey>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the key in `Z85` encoded string.\n","sig":null,"attributes":[{"value":"/ Returns the key in `Z85` encoded string.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104867,"byte_end":104911,"line_start":285,"line_end":285,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2840},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110270,"byte_end":110279,"line_start":518,"line_end":518,"column_start":12,"column_end":21},"name":"CurveCert","qualname":"::auth::curve::CurveCert","value":"CurveCert {  }","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842}],"decl_id":null,"docs":" A `CURVE` certificate containing a public and secret `CurveKey`.","sig":null,"attributes":[{"value":"/ A `CURVE` certificate containing a public and secret `CurveKey`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109962,"byte_end":110030,"line_start":508,"line_end":508,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110031,"byte_end":110034,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110035,"byte_end":110048,"line_start":510,"line_end":510,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110049,"byte_end":110056,"line_start":511,"line_end":511,"column_start":1,"column_end":8}},{"value":"/ use libzmq::auth::CurveCert;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110057,"byte_end":110089,"line_start":512,"line_end":512,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110090,"byte_end":110093,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ // Generate a new unique curve certificate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110094,"byte_end":110141,"line_start":514,"line_end":514,"column_start":1,"column_end":48}},{"value":"/ let cert = CurveCert::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110142,"byte_end":110181,"line_start":515,"line_end":515,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110182,"byte_end":110189,"line_start":516,"line_end":516,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110412,"byte_end":110422,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"new_unique","qualname":"<CurveCert>::new_unique","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a new unique certificate.\n","sig":null,"attributes":[{"value":"/ Generate a new unique certificate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110362,"byte_end":110400,"line_start":524,"line_end":524,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":111340,"byte_end":111346,"line_start":558,"line_end":558,"column_start":12,"column_end":18},"name":"public","qualname":"<CurveCert>::public","value":"fn (&self) -> &CurvePublicKey","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the certificate's public key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the certificate's public key.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":111272,"byte_end":111328,"line_start":557,"line_end":557,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":111475,"byte_end":111481,"line_start":563,"line_end":563,"column_start":12,"column_end":18},"name":"secret","qualname":"<CurveCert>::secret","value":"fn (&self) -> &CurveSecretKey","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the certificate's secret key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the certificate's secret key.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":111407,"byte_end":111463,"line_start":562,"line_end":562,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2922},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113397,"byte_end":113413,"line_start":646,"line_end":646,"column_start":12,"column_end":28},"name":"CurveClientCreds","qualname":"::auth::curve::CurveClientCreds","value":"CurveClientCreds {  }","parent":null,"children":[{"krate":0,"index":2923},{"krate":0,"index":2924}],"decl_id":null,"docs":" Credentials for a `Curve` client.","sig":null,"attributes":[{"value":"/ Credentials for a `Curve` client.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113026,"byte_end":113063,"line_start":633,"line_end":633,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113064,"byte_end":113067,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113068,"byte_end":113081,"line_start":635,"line_end":635,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113082,"byte_end":113089,"line_start":636,"line_end":636,"column_start":1,"column_end":8}},{"value":"/ use libzmq::auth::*;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113090,"byte_end":113114,"line_start":637,"line_end":637,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113115,"byte_end":113118,"line_start":638,"line_end":638,"column_start":1,"column_end":4}},{"value":"/ let server_cert = CurveCert::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113119,"byte_end":113165,"line_start":639,"line_end":639,"column_start":1,"column_end":47}},{"value":"/ let client_cert = CurveCert::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113166,"byte_end":113212,"line_start":640,"line_end":640,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113213,"byte_end":113216,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ let creds = CurveClientCreds::new(server_cert.public())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113217,"byte_end":113276,"line_start":642,"line_end":642,"column_start":1,"column_end":60}},{"value":"/     .add_cert(client_cert);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113277,"byte_end":113308,"line_start":643,"line_end":643,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113309,"byte_end":113316,"line_start":644,"line_end":644,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113607,"byte_end":113610,"line_start":653,"line_end":653,"column_start":12,"column_end":15},"name":"new","qualname":"<CurveClientCreds>::new","value":"fn <S> (server: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CurveClientCreds` from server's `CurvePublicKey`.\n","sig":null,"attributes":[{"value":"/ Create a new `CurveClientCreds` from server's `CurvePublicKey`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113528,"byte_end":113595,"line_start":652,"line_end":652,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113848,"byte_end":113856,"line_start":664,"line_end":664,"column_start":12,"column_end":20},"name":"add_cert","qualname":"<CurveClientCreds>::add_cert","value":"fn <C> (mut self, client: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Associates a client `CurveCert` with the credentials.\n","sig":null,"attributes":[{"value":"/ Associates a client `CurveCert` with the credentials.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113779,"byte_end":113836,"line_start":663,"line_end":663,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114062,"byte_end":114066,"line_start":673,"line_end":673,"column_start":12,"column_end":16},"name":"cert","qualname":"<CurveClientCreds>::cert","value":"fn (&self) -> Option<&CurveCert>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the client certificate.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the client certificate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114000,"byte_end":114050,"line_start":672,"line_end":672,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114199,"byte_end":114205,"line_start":678,"line_end":678,"column_start":12,"column_end":18},"name":"server","qualname":"<CurveClientCreds>::server","value":"fn (&self) -> &CurvePublicKey","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the server public key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the server public key.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114138,"byte_end":114187,"line_start":677,"line_end":677,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2988},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114996,"byte_end":115012,"line_start":711,"line_end":711,"column_start":12,"column_end":28},"name":"CurveServerCreds","qualname":"::auth::curve::CurveServerCreds","value":"CurveServerCreds {  }","parent":null,"children":[{"krate":0,"index":2989}],"decl_id":null,"docs":" Credentials for a `Curve` server.\n # Example\n ```\n use libzmq::auth::*;","sig":null,"attributes":[{"value":"/ Credentials for a `Curve` server.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114707,"byte_end":114744,"line_start":701,"line_end":701,"column_start":1,"column_end":38}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114745,"byte_end":114758,"line_start":702,"line_end":702,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114759,"byte_end":114766,"line_start":703,"line_end":703,"column_start":1,"column_end":8}},{"value":"/ use libzmq::auth::*;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114767,"byte_end":114791,"line_start":704,"line_end":704,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114792,"byte_end":114795,"line_start":705,"line_end":705,"column_start":1,"column_end":4}},{"value":"/ let server_cert = CurveCert::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114796,"byte_end":114842,"line_start":706,"line_end":706,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114843,"byte_end":114846,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ let creds = CurveServerCreds::new(server_cert.secret());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114847,"byte_end":114907,"line_start":708,"line_end":708,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114908,"byte_end":114915,"line_start":709,"line_end":709,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115210,"byte_end":115213,"line_start":718,"line_end":718,"column_start":12,"column_end":15},"name":"new","qualname":"<CurveServerCreds>::new","value":"fn <S> (secret: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `CurveServerCreds` from a server secret `CurveSecretKey`.\n","sig":null,"attributes":[{"value":"/ Create a new `CurveServerCreds` from a server secret `CurveSecretKey`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115124,"byte_end":115198,"line_start":717,"line_end":717,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115417,"byte_end":115423,"line_start":728,"line_end":728,"column_start":12,"column_end":18},"name":"secret","qualname":"<CurveServerCreds>::secret","value":"fn (&self) -> &CurveSecretKey","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the server secret key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the server secret key.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115356,"byte_end":115405,"line_start":727,"line_end":727,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3085},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":119755,"byte_end":119762,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Allowed","qualname":"::auth::server::StatusCode::Allowed","value":"StatusCode::Allowed","parent":{"krate":0,"index":3084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3088},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":119774,"byte_end":119788,"line_start":29,"line_end":29,"column_start":5,"column_end":19},"name":"TemporaryError","qualname":"::auth::server::StatusCode::TemporaryError","value":"StatusCode::TemporaryError","parent":{"krate":0,"index":3084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3091},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":119800,"byte_end":119806,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Denied","qualname":"::auth::server::StatusCode::Denied","value":"StatusCode::Denied","parent":{"krate":0,"index":3084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3094},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":119818,"byte_end":119831,"line_start":31,"line_end":31,"column_start":5,"column_end":18},"name":"InternalError","qualname":"::auth::server::StatusCode::InternalError","value":"StatusCode::InternalError","parent":{"krate":0,"index":3084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3084},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":119738,"byte_end":119748,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"StatusCode","qualname":"::auth::server::StatusCode","value":"StatusCode::{Allowed, TemporaryError, Denied, InternalError}","parent":null,"children":[{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3091},{"krate":0,"index":3094}],"decl_id":null,"docs":" The possible status code resulting from a `ZAP` handshake.\n","sig":null,"attributes":[{"value":"/ The possible status code resulting from a `ZAP` handshake.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":119621,"byte_end":119683,"line_start":25,"line_end":25,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3108},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":120472,"byte_end":120492,"line_start":52,"line_end":52,"column_start":12,"column_end":32},"name":"StatusCodeParseError","qualname":"::auth::server::StatusCodeParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"unable to parse status code\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":120406,"byte_end":120445,"line_start":50,"line_end":50,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3139},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71674,"byte_end":71690,"line_start":36,"line_end":36,"column_start":12,"column_end":28},"name":"PlainClientCreds","qualname":"::auth::PlainClientCreds","value":"PlainClientCreds {  }","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3141}],"decl_id":null,"docs":" Credentials for a `PLAIN` client.\n # Example\n ```\n use libzmq::auth::*;","sig":null,"attributes":[{"value":"/ Credentials for a `PLAIN` client.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71442,"byte_end":71479,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71480,"byte_end":71493,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71494,"byte_end":71501,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use libzmq::auth::*;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71502,"byte_end":71526,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71527,"byte_end":71530,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let creds = PlainClientCreds::new(\"user\", \"pass\");","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71531,"byte_end":71585,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71586,"byte_end":71593,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71867,"byte_end":71870,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<PlainClientCreds>::new","value":"fn <U, P> (username: U, password: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PlainClientCreds` from a username and password.\n","sig":null,"attributes":[{"value":"/ Create a new `PlainClientCreds` from a username and password.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71790,"byte_end":71855,"line_start":42,"line_end":42,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72143,"byte_end":72151,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"username","qualname":"<PlainClientCreds>::username","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the username.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the username.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72091,"byte_end":72131,"line_start":54,"line_end":54,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72255,"byte_end":72263,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"password","qualname":"<PlainClientCreds>::password","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the password.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the password.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72203,"byte_end":72243,"line_start":59,"line_end":59,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3206},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73711,"byte_end":73715,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Null","qualname":"::auth::Mechanism::Null","value":"Mechanism::Null","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":" No encryption or authentication.","sig":null,"attributes":[{"value":"/ No encryption or authentication.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73534,"byte_end":73570,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73575,"byte_end":73578,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ A socket using the `Null` mechanism connect or accept connections from","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73583,"byte_end":73657,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ sockets also using the `Null` mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73662,"byte_end":73706,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3208},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73897,"byte_end":73908,"line_start":120,"line_end":120,"column_start":5,"column_end":16},"name":"PlainClient","qualname":"::auth::Mechanism::PlainClient","value":"Mechanism::PlainClient(PlainClientCreds)","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":" Plain text authentication with no encryption.","sig":null,"attributes":[{"value":"/ Plain text authentication with no encryption.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73721,"byte_end":73770,"line_start":116,"line_end":116,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73775,"byte_end":73778,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ A socket using the `PlainClient` mechanism connects to sockets using","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73783,"byte_end":73855,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ the `PlainServer` mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73860,"byte_end":73892,"line_start":119,"line_end":119,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3211},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74120,"byte_end":74131,"line_start":125,"line_end":125,"column_start":5,"column_end":16},"name":"PlainServer","qualname":"::auth::Mechanism::PlainServer","value":"Mechanism::PlainServer","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":" Plain text authentication with no encryption.","sig":null,"attributes":[{"value":"/ Plain text authentication with no encryption.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73932,"byte_end":73981,"line_start":121,"line_end":121,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73986,"byte_end":73989,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ A socket using the `PlainServer` mechanism accept connections from","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73994,"byte_end":74064,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ sockets using the `PlainClient` mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74069,"byte_end":74115,"line_start":124,"line_end":124,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3213},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74484,"byte_end":74495,"line_start":134,"line_end":134,"column_start":5,"column_end":16},"name":"CurveClient","qualname":"::auth::Mechanism::CurveClient","value":"Mechanism::CurveClient(CurveClientCreds)","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":" Secure authentication and encryption using the `Curve` public-key\n mechanism.","sig":null,"attributes":[{"value":"/ Secure authentication and encryption using the `Curve` public-key","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74137,"byte_end":74206,"line_start":126,"line_end":126,"column_start":5,"column_end":74}},{"value":"/ mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74211,"byte_end":74225,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74230,"byte_end":74233,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ By default authentication is done using a whitelist of public keys.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74238,"byte_end":74309,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ However, authentication can be disabled.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74314,"byte_end":74358,"line_start":130,"line_end":130,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74363,"byte_end":74366,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ A socket using the `CurveClient` mechanism connects to socket using the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74371,"byte_end":74446,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/ `CurveServer` mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74451,"byte_end":74479,"line_start":133,"line_end":133,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3216},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74747,"byte_end":74758,"line_start":140,"line_end":140,"column_start":5,"column_end":16},"name":"CurveServer","qualname":"::auth::Mechanism::CurveServer","value":"Mechanism::CurveServer(CurveServerCreds)","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":" Secure authentication and encryption using the `Curve` public-key\n mechanism.","sig":null,"attributes":[{"value":"/ Secure authentication and encryption using the `Curve` public-key","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74519,"byte_end":74588,"line_start":135,"line_end":135,"column_start":5,"column_end":74}},{"value":"/ mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74593,"byte_end":74607,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74612,"byte_end":74615,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ A socket using the `CurveServer` mechanism accepts connections from","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74620,"byte_end":74691,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ sockets using the `CurveClient` mechanism.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74696,"byte_end":74742,"line_start":139,"line_end":139,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":3205},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73518,"byte_end":73527,"line_start":110,"line_end":110,"column_start":10,"column_end":19},"name":"Mechanism","qualname":"::auth::Mechanism","value":"Mechanism::{Null, PlainClient, PlainServer, CurveClient, CurveServer}","parent":null,"children":[{"krate":0,"index":3206},{"krate":0,"index":3208},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3216}],"decl_id":null,"docs":" A socket's `Mechanism`.","sig":null,"attributes":[{"value":"/ A socket's `Mechanism`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73134,"byte_end":73161,"line_start":101,"line_end":101,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73162,"byte_end":73165,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The `Mechanism` is used to configure the authentication and encryption","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73166,"byte_end":73240,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ strategy to use between two connected sockets.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73241,"byte_end":73291,"line_start":104,"line_end":104,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73292,"byte_end":73295,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ By default the `Null`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73296,"byte_end":73321,"line_start":106,"line_end":106,"column_start":1,"column_end":26}},{"value":"/ mechanism is used, meaning there is no attempt authentication nor encryption.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73322,"byte_end":73403,"line_start":107,"line_end":107,"column_start":1,"column_end":82}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":73473,"byte_end":73508,"line_start":109,"line_end":109,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3352},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136912,"byte_end":136921,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"CtxConfig","qualname":"::ctx::CtxConfig","value":"CtxConfig {  }","parent":null,"children":[{"krate":0,"index":3353},{"krate":0,"index":3354}],"decl_id":null,"docs":" A config for a [`Ctx`].","sig":null,"attributes":[{"value":"/ A config for a [`Ctx`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136729,"byte_end":136756,"line_start":110,"line_end":110,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136757,"byte_end":136760,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Usefull in configuration files.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136761,"byte_end":136796,"line_start":112,"line_end":112,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136797,"byte_end":136800,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Ctx`]: struct.Ctx.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136801,"byte_end":136829,"line_start":114,"line_end":114,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137014,"byte_end":137017,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<CtxConfig>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137072,"byte_end":137077,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"build","qualname":"<CtxConfig>::build","value":"fn (&self) -> Result<Ctx, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137209,"byte_end":137214,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"apply","qualname":"<CtxConfig>::apply","value":"fn (&self, handle: CtxHandle) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137500,"byte_end":137510,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"io_threads","qualname":"<CtxConfig>::io_threads","value":"fn (&self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137577,"byte_end":137591,"line_start":148,"line_end":148,"column_start":12,"column_end":26},"name":"set_io_threads","qualname":"<CtxConfig>::set_io_threads","value":"fn (&mut self, value: Option<i32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137676,"byte_end":137687,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"max_sockets","qualname":"<CtxConfig>::max_sockets","value":"fn (&mut self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137759,"byte_end":137774,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"set_max_sockets","qualname":"<CtxConfig>::set_max_sockets","value":"fn (&mut self, value: Option<i32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3418},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138068,"byte_end":138078,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"CtxBuilder","qualname":"::ctx::CtxBuilder","value":"CtxBuilder {  }","parent":null,"children":[{"krate":0,"index":3419}],"decl_id":null,"docs":" A convenience builder for a [`Ctx`].","sig":null,"attributes":[{"value":"/ A convenience builder for a [`Ctx`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137851,"byte_end":137891,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137892,"byte_end":137895,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Makes complex context configuration more convenient.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137896,"byte_end":137952,"line_start":163,"line_end":163,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137953,"byte_end":137956,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ [`Ctx`]: struct.Ctx.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":137957,"byte_end":137985,"line_start":165,"line_end":165,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138135,"byte_end":138138,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"new","qualname":"<CtxBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138549,"byte_end":138554,"line_start":192,"line_end":192,"column_start":12,"column_end":17},"name":"build","qualname":"<CtxBuilder>::build","value":"fn (&self) -> Result<Ctx, Error>","parent":null,"children":[],"decl_id":null,"docs":" Builds a `Ctx` from a `CtxBuilder`.","sig":null,"attributes":[{"value":"/ Builds a `Ctx` from a `CtxBuilder`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138186,"byte_end":138225,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138230,"byte_end":138233,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Usage Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138238,"byte_end":138257,"line_start":178,"line_end":178,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138262,"byte_end":138269,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138274,"byte_end":138320,"line_start":180,"line_end":180,"column_start":5,"column_end":51}},{"value":"/ use libzmq::*;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138325,"byte_end":138343,"line_start":181,"line_end":181,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138348,"byte_end":138351,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let ctx = CtxBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138356,"byte_end":138387,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/   .io_threads(2)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138392,"byte_end":138412,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/   .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138417,"byte_end":138433,"line_start":185,"line_end":185,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138438,"byte_end":138441,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ctx.io_threads(), 2);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138446,"byte_end":138482,"line_start":187,"line_end":187,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138487,"byte_end":138492,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138497,"byte_end":138513,"line_start":189,"line_end":189,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138518,"byte_end":138525,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138530,"byte_end":138537,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139216,"byte_end":139221,"line_start":220,"line_end":220,"column_start":12,"column_end":17},"name":"apply","qualname":"<CtxBuilder>::apply","value":"fn (&self, handle: CtxHandle) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Applies the configuration of `CtxBuilder` to an existing context via\n its `CtxHandle`.","sig":null,"attributes":[{"value":"/ Applies the configuration of `CtxBuilder` to an existing context via","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138679,"byte_end":138751,"line_start":199,"line_end":199,"column_start":5,"column_end":77}},{"value":"/ its `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138756,"byte_end":138776,"line_start":200,"line_end":200,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138781,"byte_end":138784,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Usage Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138789,"byte_end":138808,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138813,"byte_end":138820,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138825,"byte_end":138871,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/ use libzmq::*;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138876,"byte_end":138894,"line_start":205,"line_end":205,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138899,"byte_end":138902,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let global = Ctx::global();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138907,"byte_end":138938,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138943,"byte_end":138946,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ CtxBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138951,"byte_end":138972,"line_start":209,"line_end":209,"column_start":5,"column_end":26}},{"value":"/   .io_threads(0)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138977,"byte_end":138997,"line_start":210,"line_end":210,"column_start":5,"column_end":25}},{"value":"/   .max_sockets(69)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139002,"byte_end":139024,"line_start":211,"line_end":211,"column_start":5,"column_end":27}},{"value":"/   .apply(global)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139029,"byte_end":139051,"line_start":212,"line_end":212,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139056,"byte_end":139059,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(global.io_threads(), 0);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139064,"byte_end":139103,"line_start":214,"line_end":214,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(global.max_sockets(), 69);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139108,"byte_end":139149,"line_start":215,"line_end":215,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139154,"byte_end":139159,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139164,"byte_end":139180,"line_start":217,"line_end":217,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139185,"byte_end":139192,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139197,"byte_end":139204,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139428,"byte_end":139438,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"io_threads","qualname":"<CtxBuilder>::io_threads","value":"fn (&mut self, value: i32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" See [`set_io_threads`].","sig":null,"attributes":[{"value":"/ See [`set_io_threads`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139315,"byte_end":139342,"line_start":224,"line_end":224,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139347,"byte_end":139350,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`set_io_threads`]: struct.Ctx.html#method.set_io_threads","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139355,"byte_end":139416,"line_start":226,"line_end":226,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139665,"byte_end":139676,"line_start":235,"line_end":235,"column_start":12,"column_end":23},"name":"max_sockets","qualname":"<CtxBuilder>::max_sockets","value":"fn (&mut self, value: i32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" See [`set_max_sockets`].","sig":null,"attributes":[{"value":"/ See [`set_max_sockets`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139549,"byte_end":139577,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139582,"byte_end":139585,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ [`set_max_sockets`]: struct.Ctx.html#method.set_max_sockets","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139590,"byte_end":139653,"line_start":234,"line_end":234,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3481},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140872,"byte_end":140881,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"CtxHandle","qualname":"::ctx::CtxHandle","value":"CtxHandle {  }","parent":null,"children":[{"krate":0,"index":3482}],"decl_id":null,"docs":" A non-owning pointer to a `Ctx`.","sig":null,"attributes":[{"value":"/ A non-owning pointer to a `Ctx`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139786,"byte_end":139822,"line_start":241,"line_end":241,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139823,"byte_end":139826,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ A `CtxHandle` allows thread-safe configuration of the context aliased by","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139827,"byte_end":139903,"line_start":243,"line_end":243,"column_start":1,"column_end":77}},{"value":"/ the handle. It is also used to created sockets associated with the context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139904,"byte_end":139983,"line_start":244,"line_end":244,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139984,"byte_end":139987,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Once the `Ctx` it is pointing to is `shutdown` or dropped, all associated","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":139988,"byte_end":140065,"line_start":246,"line_end":246,"column_start":1,"column_end":78}},{"value":"/ `CtxHandle` will be invalidated. All calls involving an invalidated","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140066,"byte_end":140137,"line_start":247,"line_end":247,"column_start":1,"column_end":72}},{"value":"/ `CtxHandle` will return a `InvalidCtx` error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140138,"byte_end":140187,"line_start":248,"line_end":248,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140188,"byte_end":140195,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140196,"byte_end":140242,"line_start":250,"line_end":250,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{Ctx, Dish, ErrorKind};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140243,"byte_end":140282,"line_start":251,"line_end":251,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140283,"byte_end":140286,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ // We create a `CtxHandle` from a new context. Since we drop","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140287,"byte_end":140351,"line_start":253,"line_end":253,"column_start":1,"column_end":65}},{"value":"/ // the context pointed by the handle, it will no longer be valid","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140352,"byte_end":140420,"line_start":254,"line_end":254,"column_start":1,"column_end":69}},{"value":"/ // once it reaches the outer scope.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140421,"byte_end":140460,"line_start":255,"line_end":255,"column_start":1,"column_end":40}},{"value":"/ let handle = {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140461,"byte_end":140479,"line_start":256,"line_end":256,"column_start":1,"column_end":19}},{"value":"/     let ctx = Ctx::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140480,"byte_end":140509,"line_start":257,"line_end":257,"column_start":1,"column_end":30}},{"value":"/     ctx.handle()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140510,"byte_end":140530,"line_start":258,"line_end":258,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140531,"byte_end":140537,"line_start":259,"line_end":259,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140538,"byte_end":140541,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ // Attempting to use the invalided handle will result in `InvalidCtx`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140542,"byte_end":140615,"line_start":261,"line_end":261,"column_start":1,"column_end":74}},{"value":"/ // errors.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140616,"byte_end":140630,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/ let err = Dish::with_ctx(handle).unwrap_err();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140631,"byte_end":140681,"line_start":263,"line_end":263,"column_start":1,"column_end":51}},{"value":"/ match err.kind() {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140682,"byte_end":140704,"line_start":264,"line_end":264,"column_start":1,"column_end":23}},{"value":"/     ErrorKind::InvalidCtx => (),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140705,"byte_end":140741,"line_start":265,"line_end":265,"column_start":1,"column_end":37}},{"value":"/     _ => unreachable!(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140742,"byte_end":140770,"line_start":266,"line_end":266,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140771,"byte_end":140776,"line_start":267,"line_end":267,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140777,"byte_end":140782,"line_start":268,"line_end":268,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140783,"byte_end":140799,"line_start":269,"line_end":269,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140800,"byte_end":140807,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140808,"byte_end":140815,"line_start":271,"line_end":271,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140991,"byte_end":141001,"line_start":279,"line_end":279,"column_start":12,"column_end":22},"name":"io_threads","qualname":"<CtxHandle>::io_threads","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" [`Read more`](struct.Ctx.html#method.io_threads)\n","sig":null,"attributes":[{"value":"/ [`Read more`](struct.Ctx.html#method.io_threads)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140927,"byte_end":140979,"line_start":278,"line_end":278,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141141,"byte_end":141155,"line_start":284,"line_end":284,"column_start":12,"column_end":26},"name":"set_io_threads","qualname":"<CtxHandle>::set_io_threads","value":"fn (self, nb_threads: i32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" [`Read more`](struct.Ctx.html#method.set_io_threads)\n","sig":null,"attributes":[{"value":"/ [`Read more`](struct.Ctx.html#method.set_io_threads)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141073,"byte_end":141129,"line_start":283,"line_end":283,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141335,"byte_end":141346,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"name":"max_sockets","qualname":"<CtxHandle>::max_sockets","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" [`Read more`](struct.Ctx.html#method.max_sockets)\n","sig":null,"attributes":[{"value":"/ [`Read more`](struct.Ctx.html#method.max_sockets)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141270,"byte_end":141323,"line_start":288,"line_end":288,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141488,"byte_end":141503,"line_start":294,"line_end":294,"column_start":12,"column_end":27},"name":"set_max_sockets","qualname":"<CtxHandle>::set_max_sockets","value":"fn (self, max: i32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" [`Read more`](struct.Ctx.html#method.set_max_sockets)\n","sig":null,"attributes":[{"value":"/ [`Read more`](struct.Ctx.html#method.set_max_sockets)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141419,"byte_end":141476,"line_start":293,"line_end":293,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141667,"byte_end":141675,"line_start":299,"line_end":299,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<CtxHandle>::shutdown","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" [`Read more`](struct.Ctx.html#method.shutdown)\n","sig":null,"attributes":[{"value":"/ [`Read more`](struct.Ctx.html#method.shutdown)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141605,"byte_end":141655,"line_start":298,"line_end":298,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3495},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142620,"byte_end":142623,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"Ctx","qualname":"::ctx::Ctx","value":"Ctx {  }","parent":null,"children":[{"krate":0,"index":3496}],"decl_id":null,"docs":" A owning pointer to a ØMQ context.","sig":null,"attributes":[{"value":"/ A owning pointer to a ØMQ context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141801,"byte_end":141840,"line_start":308,"line_end":308,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141841,"byte_end":141844,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ A context leeps the list of sockets and manages the async I/O thread and","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141845,"byte_end":141921,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ internal queries.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141922,"byte_end":141943,"line_start":311,"line_end":311,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141944,"byte_end":141947,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Each context also has an associated `AuthServer` which handles socket","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":141948,"byte_end":142021,"line_start":313,"line_end":313,"column_start":1,"column_end":74}},{"value":"/ authentification.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142022,"byte_end":142043,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142044,"byte_end":142047,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ # Drop Behavior","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142048,"byte_end":142067,"line_start":316,"line_end":316,"column_start":1,"column_end":20}},{"value":"/ The context will call terminate when dropped which will cause all","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142068,"byte_end":142137,"line_start":317,"line_end":317,"column_start":1,"column_end":70}},{"value":"/ blocking calls to fail with `InvalidCtx`, then the dropping thread","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142138,"byte_end":142208,"line_start":318,"line_end":318,"column_start":1,"column_end":71}},{"value":"/ will block until the following conditions are met:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142209,"byte_end":142263,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/ * All sockets open within the context have been dropped.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142264,"byte_end":142324,"line_start":320,"line_end":320,"column_start":1,"column_end":61}},{"value":"/ * All messages within the context are closed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142325,"byte_end":142374,"line_start":321,"line_end":321,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142375,"byte_end":142378,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ To prevent the context drop from blocking infinitely, users should properly","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142379,"byte_end":142458,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/ manage `Result` returned by function calls.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142459,"byte_end":142506,"line_start":324,"line_end":324,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142507,"byte_end":142510,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142511,"byte_end":142530,"line_start":326,"line_end":326,"column_start":1,"column_end":20}},{"value":"/ A ØMQ context is internally thread safe.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142531,"byte_end":142576,"line_start":327,"line_end":327,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143256,"byte_end":143259,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"new","qualname":"<Ctx>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new ØMQ context.","sig":null,"attributes":[{"value":"/ Create a new ØMQ context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142663,"byte_end":142693,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142698,"byte_end":142701,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ For almost all use cases, using and configuring the [`global`] context","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142706,"byte_end":142780,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ will be enought.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142785,"byte_end":142805,"line_start":337,"line_end":337,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142810,"byte_end":142813,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ See [`zmq_ctx_new`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142818,"byte_end":142842,"line_start":339,"line_end":339,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142847,"byte_end":142850,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`zmq_ctx_new`]: http://api.zeromq.org/master:zmq-ctx-new","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142855,"byte_end":142916,"line_start":341,"line_end":341,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142921,"byte_end":142924,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Usage Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142929,"byte_end":142948,"line_start":343,"line_end":343,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142953,"byte_end":142960,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use libzmq::Ctx;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142965,"byte_end":142985,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142990,"byte_end":142993,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // Creates a new unique context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142998,"byte_end":143034,"line_start":347,"line_end":347,"column_start":5,"column_end":41}},{"value":"/ let ctx = Ctx::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143039,"byte_end":143064,"line_start":348,"line_end":348,"column_start":5,"column_end":30}},{"value":"/ // Returns a handle to the context that can be used","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143069,"byte_end":143124,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/ // to create sockets.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143129,"byte_end":143154,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ let handle = ctx.handle();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143159,"byte_end":143189,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143194,"byte_end":143201,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143206,"byte_end":143209,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`global`]: #method.global","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143214,"byte_end":143244,"line_start":354,"line_end":354,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144292,"byte_end":144298,"line_start":389,"line_end":389,"column_start":12,"column_end":18},"name":"handle","qualname":"<Ctx>::handle","value":"fn (&self) -> CtxHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the `Ctx`.","sig":null,"attributes":[{"value":"/ Returns a handle to the `Ctx`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143838,"byte_end":143872,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143877,"byte_end":143880,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Sockets can be created using `CtxHandle` so that they used the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143885,"byte_end":143951,"line_start":374,"line_end":374,"column_start":5,"column_end":71}},{"value":"/ context aliased by the handle.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143956,"byte_end":143990,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":143995,"byte_end":143998,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144003,"byte_end":144010,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144015,"byte_end":144061,"line_start":378,"line_end":378,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{Ctx, Server};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144066,"byte_end":144096,"line_start":379,"line_end":379,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144101,"byte_end":144104,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let ctx = Ctx::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144109,"byte_end":144134,"line_start":381,"line_end":381,"column_start":5,"column_end":30}},{"value":"/ let handle = ctx.handle();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144139,"byte_end":144169,"line_start":382,"line_end":382,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144174,"byte_end":144177,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ let server = Server::with_ctx(handle)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144182,"byte_end":144225,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144230,"byte_end":144235,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144240,"byte_end":144256,"line_start":386,"line_end":386,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144261,"byte_end":144268,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144273,"byte_end":144280,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145014,"byte_end":145020,"line_start":412,"line_end":412,"column_start":12,"column_end":18},"name":"global","qualname":"<Ctx>::global","value":"fn () -> CtxHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the global context.","sig":null,"attributes":[{"value":"/ Returns a handle to the global context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144372,"byte_end":144415,"line_start":393,"line_end":393,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144420,"byte_end":144423,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ This is a singleton used by sockets created via their respective","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144428,"byte_end":144496,"line_start":395,"line_end":395,"column_start":5,"column_end":73}},{"value":"/ `::new()` method. It merely exists for convenience and is no different","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144501,"byte_end":144575,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ from a context obtained via `Ctx::new()`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144580,"byte_end":144625,"line_start":397,"line_end":397,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144630,"byte_end":144633,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Usage Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144638,"byte_end":144657,"line_start":399,"line_end":399,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144662,"byte_end":144669,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144674,"byte_end":144720,"line_start":401,"line_end":401,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{Ctx, Client};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144725,"byte_end":144755,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144760,"byte_end":144763,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ // A socket created via `new` will use the global context via","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144768,"byte_end":144833,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/ // its `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144838,"byte_end":144861,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/ let client = Client::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144866,"byte_end":144898,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(client.ctx(), Ctx::global());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144903,"byte_end":144947,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144952,"byte_end":144957,"line_start":408,"line_end":408,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144962,"byte_end":144978,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144983,"byte_end":144990,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":144995,"byte_end":145002,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145155,"byte_end":145165,"line_start":417,"line_end":417,"column_start":12,"column_end":22},"name":"io_threads","qualname":"<Ctx>::io_threads","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the ØMQ thread pool for this context.\n","sig":null,"attributes":[{"value":"/ Returns the size of the ØMQ thread pool for this context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145081,"byte_end":145143,"line_start":416,"line_end":416,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146065,"byte_end":146079,"line_start":447,"line_end":447,"column_start":12,"column_end":26},"name":"set_io_threads","qualname":"<Ctx>::set_io_threads","value":"fn (&self, nb_threads: i32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the size of the ØMQ thread pool to handle I/O operations.","sig":null,"attributes":[{"value":"/ Set the size of the ØMQ thread pool to handle I/O operations.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145238,"byte_end":145304,"line_start":421,"line_end":421,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145309,"byte_end":145312,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ \"The general rule of thumb is to allow one I/O thread per gigabyte of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145317,"byte_end":145390,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ data in or out per second.\" - [`Pieter Hintjens`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145395,"byte_end":145448,"line_start":424,"line_end":424,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145453,"byte_end":145456,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ [`Pieter Hintjens`]: http://zguide.zeromq.org/page:all#I-O-Threads","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145461,"byte_end":145531,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145536,"byte_end":145539,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145544,"byte_end":145557,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ The default value is `1`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145562,"byte_end":145591,"line_start":429,"line_end":429,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145596,"byte_end":145599,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Usage Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145604,"byte_end":145623,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145628,"byte_end":145635,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145640,"byte_end":145686,"line_start":433,"line_end":433,"column_start":5,"column_end":51}},{"value":"/ use libzmq::Ctx;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145691,"byte_end":145711,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145716,"byte_end":145719,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let ctx = Ctx::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145724,"byte_end":145749,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(ctx.io_threads(), 1);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145754,"byte_end":145790,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145795,"byte_end":145798,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ // Lets say our app exclusively uses the inproc transport","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145803,"byte_end":145864,"line_start":439,"line_end":439,"column_start":5,"column_end":66}},{"value":"/ // for messaging. Then we dont need any I/O threads.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145869,"byte_end":145925,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/ ctx.set_io_threads(0)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145930,"byte_end":145957,"line_start":441,"line_end":441,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(ctx.io_threads(), 0);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":145962,"byte_end":145998,"line_start":442,"line_end":442,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146003,"byte_end":146008,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146013,"byte_end":146029,"line_start":444,"line_end":444,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146034,"byte_end":146041,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146046,"byte_end":146053,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146274,"byte_end":146285,"line_start":452,"line_end":452,"column_start":12,"column_end":23},"name":"max_sockets","qualname":"<Ctx>::max_sockets","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of sockets allowed for this context.\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of sockets allowed for this context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146195,"byte_end":146262,"line_start":451,"line_end":451,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146841,"byte_end":146856,"line_start":475,"line_end":475,"column_start":12,"column_end":27},"name":"set_max_sockets","qualname":"<Ctx>::set_max_sockets","value":"fn (&self, max: i32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of sockets allowed on the context.","sig":null,"attributes":[{"value":"/ Sets the maximum number of sockets allowed on the context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146359,"byte_end":146421,"line_start":456,"line_end":456,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146426,"byte_end":146429,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146434,"byte_end":146447,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/ The default value is `1023`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146452,"byte_end":146484,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146489,"byte_end":146492,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Usage Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146497,"byte_end":146516,"line_start":461,"line_end":461,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146521,"byte_end":146528,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146533,"byte_end":146579,"line_start":463,"line_end":463,"column_start":5,"column_end":51}},{"value":"/ use libzmq::Ctx;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146584,"byte_end":146604,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146609,"byte_end":146612,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ let ctx = Ctx::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146617,"byte_end":146642,"line_start":466,"line_end":466,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(ctx.max_sockets(), 1023);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146647,"byte_end":146687,"line_start":467,"line_end":467,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146692,"byte_end":146695,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ctx.set_max_sockets(420)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146700,"byte_end":146730,"line_start":469,"line_end":469,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(ctx.max_sockets(), 420);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146735,"byte_end":146774,"line_start":470,"line_end":470,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146779,"byte_end":146784,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146789,"byte_end":146805,"line_start":472,"line_end":472,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146810,"byte_end":146817,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146822,"byte_end":146829,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147042,"byte_end":147054,"line_start":480,"line_end":480,"column_start":12,"column_end":24},"name":"socket_limit","qualname":"<Ctx>::socket_limit","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest number of sockets that the context will accept.\n","sig":null,"attributes":[{"value":"/ Returns the largest number of sockets that the context will accept.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":146959,"byte_end":147030,"line_start":479,"line_end":479,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147694,"byte_end":147702,"line_start":496,"line_end":496,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Ctx>::shutdown","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invalidates all the handles to the ØMQ context.","sig":null,"attributes":[{"value":"/ Invalidates all the handles to the ØMQ context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147129,"byte_end":147181,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147186,"byte_end":147189,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Context shutdown will cause any blocking operations currently in","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147194,"byte_end":147262,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/ progress on sockets using handles associated with the context to fail","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147267,"byte_end":147340,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/ with [`InvalidCtx`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147345,"byte_end":147369,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147374,"byte_end":147377,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ This is used as a mechanism to stop another blocked thread.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147382,"byte_end":147445,"line_start":490,"line_end":490,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147450,"byte_end":147453,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that, while this invalidates the context, it does not terminate it.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147458,"byte_end":147534,"line_start":492,"line_end":492,"column_start":5,"column_end":81}},{"value":"/ The context will only get terminated once `Ctx` is dropped.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147539,"byte_end":147602,"line_start":493,"line_end":493,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147607,"byte_end":147610,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: ../error/enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147615,"byte_end":147682,"line_start":495,"line_end":495,"column_start":5,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":887},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148236,"byte_end":148251,"line_start":15,"line_end":15,"column_start":11,"column_end":26},"name":"INPROC_MAX_SIZE","qualname":"::endpoint::INPROC_MAX_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of characters in a `inproc` address.\n","sig":null,"attributes":[{"value":"/ The maximum number of characters in a `inproc` address.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148166,"byte_end":148225,"line_start":14,"line_end":14,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":888},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148358,"byte_end":148369,"line_start":18,"line_end":18,"column_start":11,"column_end":22},"name":"IntoIpAddrs","qualname":"::endpoint::IntoIpAddrs","value":"IntoIpAddrs","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890}],"decl_id":null,"docs":" A trait equivalent to `IntoIter<Item=Into<IpAddr>>` for `std::net::*` types.\n","sig":null,"attributes":[{"value":"/ A trait equivalent to `IntoIter<Item=Into<IpAddr>>` for `std::net::*` types.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148267,"byte_end":148347,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":889},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148468,"byte_end":148476,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::endpoint::IntoIpAddrs::IntoIter","value":"type IntoIter: Iterator<Item = IpAddr>;","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Returned iterator over ip addresses which this type may correspond\n to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over ip addresses which this type may correspond","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148376,"byte_end":148446,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ to.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148451,"byte_end":148458,"line_start":20,"line_end":20,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148578,"byte_end":148591,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"into_ip_addrs","qualname":"::endpoint::IntoIpAddrs::into_ip_addrs","value":"fn (self) -> Self::IntoIter","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `IpAddr`s.\n","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `IpAddr`s.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148508,"byte_end":148570,"line_start":23,"line_end":23,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3506},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":150064,"byte_end":150078,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"AddrParseError","qualname":"::endpoint::AddrParseError","value":"AddrParseError {  }","parent":null,"children":[{"krate":0,"index":3507}],"decl_id":null,"docs":" An error that occurs when an address cannot be parsed.","sig":null,"attributes":[{"value":"/ An error that occurs when an address cannot be parsed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":149854,"byte_end":149912,"line_start":78,"line_end":78,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":149913,"byte_end":149916,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The error contains a message detailling the source of the error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":149917,"byte_end":149985,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"error(\"cannot parse address : {}\", msg)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":150010,"byte_end":150052,"line_start":82,"line_end":82,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":150208,"byte_end":150211,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"msg","qualname":"<AddrParseError>::msg","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3513},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152350,"byte_end":152358,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"Hostname","qualname":"::endpoint::Hostname","value":"Hostname {  }","parent":null,"children":[{"krate":0,"index":3514}],"decl_id":null,"docs":" An named interface.","sig":null,"attributes":[{"value":"/ An named interface.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151645,"byte_end":151668,"line_start":145,"line_end":145,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151669,"byte_end":151672,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ It can represente a network interface, a DNS address or","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151673,"byte_end":151732,"line_start":147,"line_end":147,"column_start":1,"column_end":60}},{"value":"/ a IP hostname depending on the context.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151733,"byte_end":151776,"line_start":148,"line_end":148,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151777,"byte_end":151780,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ The hostname must be strictly alpha-numeric except for the `-` character","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151781,"byte_end":151857,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ that is allowed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151858,"byte_end":151878,"line_start":151,"line_end":151,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151879,"byte_end":151882,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151883,"byte_end":151896,"line_start":153,"line_end":153,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151897,"byte_end":151904,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151905,"byte_end":151951,"line_start":155,"line_end":155,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, addr::Hostname};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":151952,"byte_end":152003,"line_start":156,"line_end":156,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152004,"byte_end":152007,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ // This is a network interface.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152008,"byte_end":152043,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/ let net: Hostname = \"eth0\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152044,"byte_end":152087,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"/ // This is a DNS address.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152088,"byte_end":152117,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"/ let dns: Hostname = \"server-name\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152118,"byte_end":152168,"line_start":161,"line_end":161,"column_start":1,"column_end":51}},{"value":"/ // This is a IPv4 hostname","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152169,"byte_end":152199,"line_start":162,"line_end":162,"column_start":1,"column_end":31}},{"value":"/ let localhost: Hostname = \"localhost\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152200,"byte_end":152254,"line_start":163,"line_end":163,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152255,"byte_end":152260,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152261,"byte_end":152277,"line_start":165,"line_end":165,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152278,"byte_end":152285,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152286,"byte_end":152293,"line_start":167,"line_end":167,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152409,"byte_end":152412,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"new","qualname":"<Hostname>::new","value":"fn <S> (name: S) -> Result<Self, AddrParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152963,"byte_end":152969,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Hostname>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3537},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154229,"byte_end":154238,"line_start":252,"line_end":252,"column_start":5,"column_end":14},"name":"Specified","qualname":"::endpoint::Port::Specified","value":"Port::Specified(u16)","parent":{"krate":0,"index":3536},"children":[],"decl_id":null,"docs":" An specified port number.\n","sig":null,"attributes":[{"value":"/ An specified port number.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154195,"byte_end":154224,"line_start":251,"line_end":251,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3540},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154292,"byte_end":154303,"line_start":254,"line_end":254,"column_start":5,"column_end":16},"name":"Unspecified","qualname":"::endpoint::Port::Unspecified","value":"Port::Unspecified","parent":{"krate":0,"index":3536},"children":[],"decl_id":null,"docs":" A system specified ephemeral port.\n","sig":null,"attributes":[{"value":"/ A system specified ephemeral port.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154249,"byte_end":154287,"line_start":253,"line_end":253,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3536},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154184,"byte_end":154188,"line_start":250,"line_end":250,"column_start":10,"column_end":14},"name":"Port","qualname":"::endpoint::Port","value":"Port::{Specified, Unspecified}","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3540}],"decl_id":null,"docs":" A port used by a socket address.","sig":null,"attributes":[{"value":"/ A port used by a socket address.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153849,"byte_end":153885,"line_start":236,"line_end":236,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153886,"byte_end":153889,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153890,"byte_end":153903,"line_start":238,"line_end":238,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153904,"byte_end":153911,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153912,"byte_end":153958,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, addr::Port};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153959,"byte_end":154006,"line_start":241,"line_end":241,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154007,"byte_end":154010,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ let port: Port = \"*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154011,"byte_end":154048,"line_start":243,"line_end":243,"column_start":1,"column_end":38}},{"value":"/ assert!(port.is_unspecified());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154049,"byte_end":154084,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154085,"byte_end":154090,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154091,"byte_end":154107,"line_start":246,"line_end":246,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154108,"byte_end":154115,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154116,"byte_end":154123,"line_start":248,"line_end":248,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154331,"byte_end":154343,"line_start":258,"line_end":258,"column_start":12,"column_end":24},"name":"is_specified","qualname":"<Port>::is_specified","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154483,"byte_end":154497,"line_start":266,"line_end":266,"column_start":12,"column_end":26},"name":"is_unspecified","qualname":"<Port>::is_unspecified","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155820,"byte_end":155822,"line_start":320,"line_end":320,"column_start":5,"column_end":7},"name":"Ip","qualname":"::endpoint::Interface::Ip","value":"Interface::Ip(IpAddr)","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":" Connect or bind to an IP address.\n","sig":null,"attributes":[{"value":"/ Connect or bind to an IP address.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155778,"byte_end":155815,"line_start":319,"line_end":319,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3579},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155880,"byte_end":155888,"line_start":322,"line_end":322,"column_start":5,"column_end":13},"name":"Hostname","qualname":"::endpoint::Interface::Hostname","value":"Interface::Hostname(Hostname)","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":" Connect or bind to a named address.\n","sig":null,"attributes":[{"value":"/ Connect or bind to a named address.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155836,"byte_end":155875,"line_start":321,"line_end":321,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3575},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155762,"byte_end":155771,"line_start":318,"line_end":318,"column_start":10,"column_end":19},"name":"Interface","qualname":"::endpoint::Interface","value":"Interface::{Ip, Hostname}","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3579}],"decl_id":null,"docs":" An interface used for connecting or binding.","sig":null,"attributes":[{"value":"/ An interface used for connecting or binding.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155436,"byte_end":155484,"line_start":305,"line_end":305,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155485,"byte_end":155488,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155489,"byte_end":155502,"line_start":307,"line_end":307,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155503,"byte_end":155510,"line_start":308,"line_end":308,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155511,"byte_end":155557,"line_start":309,"line_end":309,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, addr::Interface};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155558,"byte_end":155610,"line_start":310,"line_end":310,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155611,"byte_end":155614,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ let interface: Interface = \"0.0.0.0\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155615,"byte_end":155668,"line_start":312,"line_end":312,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155669,"byte_end":155674,"line_start":313,"line_end":313,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155675,"byte_end":155691,"line_start":314,"line_end":314,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155692,"byte_end":155699,"line_start":315,"line_end":315,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155700,"byte_end":155707,"line_start":316,"line_end":316,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3614},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157112,"byte_end":157122,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::endpoint::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":3615},{"krate":0,"index":3616}],"decl_id":null,"docs":" A socket address with an [`Interface`] and a [`Port`].","sig":null,"attributes":[{"value":"/ A socket address with an [`Interface`] and a [`Port`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156698,"byte_end":156756,"line_start":354,"line_end":354,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156757,"byte_end":156760,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156761,"byte_end":156774,"line_start":356,"line_end":356,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156775,"byte_end":156782,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156783,"byte_end":156829,"line_start":358,"line_end":358,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, addr::SocketAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156830,"byte_end":156883,"line_start":359,"line_end":359,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156884,"byte_end":156887,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ let host: SocketAddr = \"127.0.0.1:3000\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156888,"byte_end":156944,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156945,"byte_end":156950,"line_start":362,"line_end":362,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156951,"byte_end":156967,"line_start":363,"line_end":363,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156968,"byte_end":156975,"line_start":364,"line_end":364,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156976,"byte_end":156983,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156984,"byte_end":156987,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`Interface`]: enum.Interface.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156988,"byte_end":157026,"line_start":367,"line_end":367,"column_start":1,"column_end":39}},{"value":"/ [`Port`]: enum.Port.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157027,"byte_end":157055,"line_start":368,"line_end":368,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157199,"byte_end":157202,"line_start":376,"line_end":376,"column_start":12,"column_end":15},"name":"new","qualname":"<SocketAddr>::new","value":"fn (interface: Interface, port: Port) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157298,"byte_end":157307,"line_start":380,"line_end":380,"column_start":12,"column_end":21},"name":"interface","qualname":"<SocketAddr>::interface","value":"fn (&self) -> &Interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157373,"byte_end":157377,"line_start":384,"line_end":384,"column_start":12,"column_end":16},"name":"port","qualname":"<SocketAddr>::port","value":"fn (&self) -> Port","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3650},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159691,"byte_end":159697,"line_start":465,"line_end":465,"column_start":5,"column_end":11},"name":"Socket","qualname":"::endpoint::SrcAddr::Socket","value":"SrcAddr::Socket(SocketAddr)","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Bind to a socket address.\n","sig":null,"attributes":[{"value":"/ Bind to a socket address.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159657,"byte_end":159686,"line_start":464,"line_end":464,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3653},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159745,"byte_end":159754,"line_start":467,"line_end":467,"column_start":5,"column_end":14},"name":"Interface","qualname":"::endpoint::SrcAddr::Interface","value":"SrcAddr::Interface(Interface)","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Bind to an interface.\n","sig":null,"attributes":[{"value":"/ Bind to an interface.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159715,"byte_end":159740,"line_start":466,"line_end":466,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3649},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159643,"byte_end":159650,"line_start":463,"line_end":463,"column_start":10,"column_end":17},"name":"SrcAddr","qualname":"::endpoint::SrcAddr","value":"SrcAddr::{Socket, Interface}","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3653}],"decl_id":null,"docs":" Specify a source address when connecting.","sig":null,"attributes":[{"value":"/ Specify a source address when connecting.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158878,"byte_end":158923,"line_start":439,"line_end":439,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158924,"byte_end":158927,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ A `SrcAddr` differs from a `SocketAddr` since it allows an address with","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158928,"byte_end":159003,"line_start":441,"line_end":441,"column_start":1,"column_end":76}},{"value":"/ with no port specified (an `Interface`).","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159004,"byte_end":159048,"line_start":442,"line_end":442,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159049,"byte_end":159052,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ A source address can be specified when a client communicate with a public","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159053,"byte_end":159130,"line_start":444,"line_end":444,"column_start":1,"column_end":78}},{"value":"/ server from behind a private network. This allows the server's replies to","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159131,"byte_end":159208,"line_start":445,"line_end":445,"column_start":1,"column_end":78}},{"value":"/ be routed properly.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159209,"byte_end":159232,"line_start":446,"line_end":446,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159233,"byte_end":159236,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159237,"byte_end":159250,"line_start":448,"line_end":448,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159251,"byte_end":159258,"line_start":449,"line_end":449,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159259,"byte_end":159305,"line_start":450,"line_end":450,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, addr::SrcAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159306,"byte_end":159356,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159357,"byte_end":159360,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ // Specify an IPv4 addr with a unspecified port.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159361,"byte_end":159413,"line_start":453,"line_end":453,"column_start":1,"column_end":53}},{"value":"/ let src: SrcAddr = \"192.168.1.17:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159414,"byte_end":159466,"line_start":454,"line_end":454,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159467,"byte_end":159470,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ // Specify a network interface.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159471,"byte_end":159506,"line_start":456,"line_end":456,"column_start":1,"column_end":36}},{"value":"/ let src: SrcAddr = \"eth0\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159507,"byte_end":159549,"line_start":457,"line_end":457,"column_start":1,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159550,"byte_end":159555,"line_start":458,"line_end":458,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159556,"byte_end":159572,"line_start":459,"line_end":459,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159573,"byte_end":159580,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159581,"byte_end":159588,"line_start":461,"line_end":461,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3688},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161358,"byte_end":161365,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"TcpAddr","qualname":"::endpoint::TcpAddr","value":"TcpAddr {  }","parent":null,"children":[{"krate":0,"index":3689},{"krate":0,"index":3690}],"decl_id":null,"docs":" A socket address with the `TCP` transport.","sig":null,"attributes":[{"value":"/ A socket address with the `TCP` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160784,"byte_end":160830,"line_start":513,"line_end":513,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160831,"byte_end":160834,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ # Supported Sockets","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160835,"byte_end":160858,"line_start":515,"line_end":515,"column_start":1,"column_end":24}},{"value":"/ [`Dish`], [`Radio`], [`Client`] and [`Server]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160859,"byte_end":160908,"line_start":516,"line_end":516,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160909,"byte_end":160912,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160913,"byte_end":160926,"line_start":518,"line_end":518,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160927,"byte_end":160934,"line_start":519,"line_end":519,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160935,"byte_end":160981,"line_start":520,"line_end":520,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, TcpAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160982,"byte_end":161026,"line_start":521,"line_end":521,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161027,"byte_end":161030,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ // Connecting using a IPv4 address and bind to `eth0` interface.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161031,"byte_end":161099,"line_start":523,"line_end":523,"column_start":1,"column_end":69}},{"value":"/ let ipv4: TcpAddr = \"eth0;192.168.1.1:5555\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161100,"byte_end":161160,"line_start":524,"line_end":524,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161161,"byte_end":161164,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ // Connecting using a IPv6 address.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161165,"byte_end":161204,"line_start":526,"line_end":526,"column_start":1,"column_end":40}},{"value":"/ let ipv6: TcpAddr = \"[2001:db8::1]:8080\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161205,"byte_end":161262,"line_start":527,"line_end":527,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161263,"byte_end":161268,"line_start":528,"line_end":528,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161269,"byte_end":161285,"line_start":529,"line_end":529,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161286,"byte_end":161293,"line_start":530,"line_end":530,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161294,"byte_end":161301,"line_start":531,"line_end":531,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161445,"byte_end":161448,"line_start":539,"line_end":539,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpAddr>::new","value":"fn <H> (host: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161597,"byte_end":161604,"line_start":547,"line_end":547,"column_start":12,"column_end":19},"name":"add_src","qualname":"<TcpAddr>::add_src","value":"fn <S> (mut self, src: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161767,"byte_end":161771,"line_start":556,"line_end":556,"column_start":12,"column_end":16},"name":"host","qualname":"<TcpAddr>::host","value":"fn (&self) -> &SocketAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161833,"byte_end":161836,"line_start":560,"line_end":560,"column_start":12,"column_end":15},"name":"src","qualname":"<TcpAddr>::src","value":"fn (&self) -> Option<&SrcAddr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3723},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163967,"byte_end":163974,"line_start":651,"line_end":651,"column_start":12,"column_end":19},"name":"UdpAddr","qualname":"::endpoint::UdpAddr","value":"UdpAddr {  }","parent":null,"children":[{"krate":0,"index":3724},{"krate":0,"index":3725}],"decl_id":null,"docs":" A socket address with the `UDP` transport.","sig":null,"attributes":[{"value":"/ A socket address with the `UDP` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163409,"byte_end":163455,"line_start":631,"line_end":631,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163456,"byte_end":163459,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ # Supported Sockets","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163460,"byte_end":163483,"line_start":633,"line_end":633,"column_start":1,"column_end":24}},{"value":"/ [`Dish`], [`Radio`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163484,"byte_end":163507,"line_start":634,"line_end":634,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163508,"byte_end":163511,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163512,"byte_end":163525,"line_start":636,"line_end":636,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163526,"byte_end":163533,"line_start":637,"line_end":637,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163534,"byte_end":163580,"line_start":638,"line_end":638,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, UdpAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163581,"byte_end":163625,"line_start":639,"line_end":639,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163626,"byte_end":163629,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ // Multicast - UDP port 5555 on a Multicast address","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163630,"byte_end":163685,"line_start":641,"line_end":641,"column_start":1,"column_end":56}},{"value":"/ let addr: UdpAddr = \"239.0.0.1:5555\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163686,"byte_end":163739,"line_start":642,"line_end":642,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163740,"byte_end":163743,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ // Same as above using IPv6 with joining only on interface eth0.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163744,"byte_end":163812,"line_start":644,"line_end":644,"column_start":1,"column_end":69}},{"value":"/ let addr: UdpAddr = \"eth0;[ff02::1]:5555\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163813,"byte_end":163871,"line_start":645,"line_end":645,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163872,"byte_end":163877,"line_start":646,"line_end":646,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163878,"byte_end":163894,"line_start":647,"line_end":647,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163895,"byte_end":163902,"line_start":648,"line_end":648,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163903,"byte_end":163910,"line_start":649,"line_end":649,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164526,"byte_end":164529,"line_start":671,"line_end":671,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpAddr>::new","value":"fn <H> (host: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" # Example\n ```\n # fn main() -> Result<(), anyhow::Error> {\n use libzmq::{prelude::TryInto, UdpAddr, addr::SocketAddr};","sig":null,"attributes":[{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164047,"byte_end":164060,"line_start":657,"line_end":657,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164065,"byte_end":164072,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164077,"byte_end":164123,"line_start":659,"line_end":659,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::TryInto, UdpAddr, addr::SocketAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164128,"byte_end":164190,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164195,"byte_end":164198,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let host: SocketAddr = \"localhost:5555\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164203,"byte_end":164259,"line_start":662,"line_end":662,"column_start":5,"column_end":61}},{"value":"/ // We can use a reference here which will allocate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164264,"byte_end":164319,"line_start":663,"line_end":663,"column_start":5,"column_end":60}},{"value":"/ let udp = UdpAddr::new(&host);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164324,"byte_end":164358,"line_start":664,"line_end":664,"column_start":5,"column_end":39}},{"value":"/ // We can also give ownership which does not allocate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164363,"byte_end":164421,"line_start":665,"line_end":665,"column_start":5,"column_end":63}},{"value":"/ let udp = UdpAddr::new(host);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164426,"byte_end":164459,"line_start":666,"line_end":666,"column_start":5,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164464,"byte_end":164469,"line_start":667,"line_end":667,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164474,"byte_end":164490,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164495,"byte_end":164502,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164507,"byte_end":164514,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165333,"byte_end":165340,"line_start":698,"line_end":698,"column_start":12,"column_end":19},"name":"add_src","qualname":"<UdpAddr>::add_src","value":"fn <S> (mut self, src: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" # Example\n ```\n # fn main() -> Result<(), anyhow::Error> {\n use libzmq::{prelude::TryInto, UdpAddr, addr::{SrcAddr, SocketAddr}};","sig":null,"attributes":[{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164671,"byte_end":164684,"line_start":679,"line_end":679,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164689,"byte_end":164696,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164701,"byte_end":164747,"line_start":681,"line_end":681,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::TryInto, UdpAddr, addr::{SrcAddr, SocketAddr}};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164752,"byte_end":164825,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164830,"byte_end":164833,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ let host: SocketAddr = \"localhost:5555\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164838,"byte_end":164894,"line_start":684,"line_end":684,"column_start":5,"column_end":61}},{"value":"/ let src: SrcAddr = \"eth0\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164899,"byte_end":164941,"line_start":685,"line_end":685,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164946,"byte_end":164949,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ // We pass by reference which allocates, but we could","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164954,"byte_end":165011,"line_start":687,"line_end":687,"column_start":5,"column_end":62}},{"value":"/ // also give the ownership directly.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165016,"byte_end":165056,"line_start":688,"line_end":688,"column_start":5,"column_end":45}},{"value":"/ let udp = UdpAddr::new(&host).add_src(&src);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165061,"byte_end":165109,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165114,"byte_end":165117,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ // Note that `SocketAddr` implement `Into<SrcAddr>`,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165122,"byte_end":165178,"line_start":691,"line_end":691,"column_start":5,"column_end":61}},{"value":"/ // so this is also valid.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165183,"byte_end":165212,"line_start":692,"line_end":692,"column_start":5,"column_end":34}},{"value":"/ let udp = UdpAddr::new(&host).add_src(&host);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165217,"byte_end":165266,"line_start":693,"line_end":693,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165271,"byte_end":165276,"line_start":694,"line_end":694,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165281,"byte_end":165297,"line_start":695,"line_end":695,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165302,"byte_end":165309,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165314,"byte_end":165321,"line_start":697,"line_end":697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165503,"byte_end":165507,"line_start":707,"line_end":707,"column_start":12,"column_end":16},"name":"host","qualname":"<UdpAddr>::host","value":"fn (&self) -> &SocketAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165569,"byte_end":165572,"line_start":711,"line_end":711,"column_start":12,"column_end":15},"name":"src","qualname":"<UdpAddr>::src","value":"fn (&self) -> Option<&SrcAddr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3758},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167640,"byte_end":167647,"line_start":799,"line_end":799,"column_start":12,"column_end":19},"name":"PgmAddr","qualname":"::endpoint::PgmAddr","value":"PgmAddr {  }","parent":null,"children":[{"krate":0,"index":3759},{"krate":0,"index":3760}],"decl_id":null,"docs":" A socket address with the `PGM` transport.","sig":null,"attributes":[{"value":"/ A socket address with the `PGM` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167145,"byte_end":167191,"line_start":782,"line_end":782,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167192,"byte_end":167195,"line_start":783,"line_end":783,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167196,"byte_end":167209,"line_start":784,"line_end":784,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167210,"byte_end":167217,"line_start":785,"line_end":785,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167218,"byte_end":167264,"line_start":786,"line_end":786,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, PgmAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167265,"byte_end":167309,"line_start":787,"line_end":787,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167310,"byte_end":167313,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ // Connecting to the multicast address 239.192.1.1, port 5555,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167314,"byte_end":167380,"line_start":789,"line_end":789,"column_start":1,"column_end":67}},{"value":"/ // using the network interface with the address 192.168.1.1","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167381,"byte_end":167444,"line_start":790,"line_end":790,"column_start":1,"column_end":64}},{"value":"/ // and the PGM protocol","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167445,"byte_end":167472,"line_start":791,"line_end":791,"column_start":1,"column_end":28}},{"value":"/ let addr: PgmAddr = \"192.168.1.1;239.192.1.1:5555\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167473,"byte_end":167540,"line_start":792,"line_end":792,"column_start":1,"column_end":68}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167541,"byte_end":167546,"line_start":793,"line_end":793,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167547,"byte_end":167563,"line_start":794,"line_end":794,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167564,"byte_end":167571,"line_start":795,"line_end":795,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167572,"byte_end":167579,"line_start":796,"line_end":796,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167580,"byte_end":167583,"line_start":797,"line_end":797,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167727,"byte_end":167730,"line_start":805,"line_end":805,"column_start":12,"column_end":15},"name":"new","qualname":"<PgmAddr>::new","value":"fn <H> (host: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":168071,"byte_end":168078,"line_start":816,"line_end":816,"column_start":12,"column_end":19},"name":"add_src","qualname":"<PgmAddr>::add_src","value":"fn <S> (mut self, src: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A source address can be specified when a client communicate with a public\n server from behind a private network. This allows the server's replies to\n be routed properly.\n","sig":null,"attributes":[{"value":"/ A source address can be specified when a client communicate with a public","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167872,"byte_end":167949,"line_start":813,"line_end":813,"column_start":5,"column_end":82}},{"value":"/ server from behind a private network. This allows the server's replies to","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167954,"byte_end":168031,"line_start":814,"line_end":814,"column_start":5,"column_end":82}},{"value":"/ be routed properly.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":168036,"byte_end":168059,"line_start":815,"line_end":815,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":168241,"byte_end":168245,"line_start":825,"line_end":825,"column_start":12,"column_end":16},"name":"host","qualname":"<PgmAddr>::host","value":"fn (&self) -> &SocketAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":168307,"byte_end":168310,"line_start":829,"line_end":829,"column_start":12,"column_end":15},"name":"src","qualname":"<PgmAddr>::src","value":"fn (&self) -> Option<&SrcAddr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3793},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170391,"byte_end":170399,"line_start":916,"line_end":916,"column_start":12,"column_end":20},"name":"EpgmAddr","qualname":"::endpoint::EpgmAddr","value":"EpgmAddr {  }","parent":null,"children":[{"krate":0,"index":3794},{"krate":0,"index":3795}],"decl_id":null,"docs":" A socket address with the Encapsulated `PGM` transport.","sig":null,"attributes":[{"value":"/ A socket address with the Encapsulated `PGM` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169883,"byte_end":169942,"line_start":900,"line_end":900,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169943,"byte_end":169946,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169947,"byte_end":169960,"line_start":902,"line_end":902,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169961,"byte_end":169968,"line_start":903,"line_end":903,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169969,"byte_end":170015,"line_start":904,"line_end":904,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, EpgmAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170016,"byte_end":170061,"line_start":905,"line_end":905,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170062,"byte_end":170065,"line_start":906,"line_end":906,"column_start":1,"column_end":4}},{"value":"/ // Connecting to the multicast address 239.192.1.1, port 5555,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170066,"byte_end":170132,"line_start":907,"line_end":907,"column_start":1,"column_end":67}},{"value":"/ // using the first Ethernet network interface on Linux","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170133,"byte_end":170191,"line_start":908,"line_end":908,"column_start":1,"column_end":59}},{"value":"/ // and the Encapsulated PGM protocol.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170192,"byte_end":170233,"line_start":909,"line_end":909,"column_start":1,"column_end":42}},{"value":"/ let addr: EpgmAddr = \"eth0;239.192.1.1:5555\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170234,"byte_end":170295,"line_start":910,"line_end":910,"column_start":1,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170296,"byte_end":170301,"line_start":911,"line_end":911,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170302,"byte_end":170318,"line_start":912,"line_end":912,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170319,"byte_end":170326,"line_start":913,"line_end":913,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170327,"byte_end":170334,"line_start":914,"line_end":914,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170480,"byte_end":170483,"line_start":922,"line_end":922,"column_start":12,"column_end":15},"name":"new","qualname":"<EpgmAddr>::new","value":"fn <H> (host: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170824,"byte_end":170831,"line_start":933,"line_end":933,"column_start":12,"column_end":19},"name":"add_src","qualname":"<EpgmAddr>::add_src","value":"fn <S> (mut self, src: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A source address can be specified when a client communicate with a public\n server from behind a private network. This allows the server's replies to\n be routed properly.\n","sig":null,"attributes":[{"value":"/ A source address can be specified when a client communicate with a public","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170625,"byte_end":170702,"line_start":930,"line_end":930,"column_start":5,"column_end":82}},{"value":"/ server from behind a private network. This allows the server's replies to","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170707,"byte_end":170784,"line_start":931,"line_end":931,"column_start":5,"column_end":82}},{"value":"/ be routed properly.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170789,"byte_end":170812,"line_start":932,"line_end":932,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170994,"byte_end":170998,"line_start":942,"line_end":942,"column_start":12,"column_end":16},"name":"host","qualname":"<EpgmAddr>::host","value":"fn (&self) -> &SocketAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":171060,"byte_end":171063,"line_start":946,"line_end":946,"column_start":12,"column_end":15},"name":"src","qualname":"<EpgmAddr>::src","value":"fn (&self) -> Option<&SrcAddr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3828},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173420,"byte_end":173430,"line_start":1043,"line_end":1043,"column_start":12,"column_end":22},"name":"InprocAddr","qualname":"::endpoint::InprocAddr","value":"InprocAddr {  }","parent":null,"children":[{"krate":0,"index":3829}],"decl_id":null,"docs":" A socket address with inter-thread transport.","sig":null,"attributes":[{"value":"/ A socket address with inter-thread transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172649,"byte_end":172698,"line_start":1017,"line_end":1017,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172699,"byte_end":172702,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ The `inproc` address is a non-empty `String` with at most","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172703,"byte_end":172764,"line_start":1019,"line_end":1019,"column_start":1,"column_end":62}},{"value":"/ [`INPROC_MAX_SIZE`] characters.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172765,"byte_end":172800,"line_start":1020,"line_end":1020,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172801,"byte_end":172804,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ The `inproc` transport can only be used by sockets that share the same `Ctx`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172805,"byte_end":172886,"line_start":1022,"line_end":1022,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172887,"byte_end":172890,"line_start":1023,"line_end":1023,"column_start":1,"column_end":4}},{"value":"/ # Supported Sockets","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172891,"byte_end":172914,"line_start":1024,"line_end":1024,"column_start":1,"column_end":24}},{"value":"/ [`Dish`], [`Radio`], [`Client`] and [`Server]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172915,"byte_end":172964,"line_start":1025,"line_end":1025,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172965,"byte_end":172968,"line_start":1026,"line_end":1026,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172969,"byte_end":172982,"line_start":1027,"line_end":1027,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172983,"byte_end":172990,"line_start":1028,"line_end":1028,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172991,"byte_end":173037,"line_start":1029,"line_end":1029,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, InprocAddr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173038,"byte_end":173085,"line_start":1030,"line_end":1030,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173086,"byte_end":173089,"line_start":1031,"line_end":1031,"column_start":1,"column_end":4}},{"value":"/ // Can be any arbitrary string.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173090,"byte_end":173125,"line_start":1032,"line_end":1032,"column_start":1,"column_end":36}},{"value":"/ let addr: InprocAddr = \"test\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173126,"byte_end":173172,"line_start":1033,"line_end":1033,"column_start":1,"column_end":47}},{"value":"/ // Any character is allowed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173173,"byte_end":173205,"line_start":1034,"line_end":1034,"column_start":1,"column_end":33}},{"value":"/ let addr: InprocAddr = \"LKH*O&_[::O2134KG\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173206,"byte_end":173265,"line_start":1035,"line_end":1035,"column_start":1,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173266,"byte_end":173271,"line_start":1036,"line_end":1036,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173272,"byte_end":173288,"line_start":1037,"line_end":1037,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173289,"byte_end":173296,"line_start":1038,"line_end":1038,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173297,"byte_end":173304,"line_start":1039,"line_end":1039,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173305,"byte_end":173308,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ [`INPROC_MAX_SIZE`]: constant.INPROC_MAX_SIZE.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173309,"byte_end":173363,"line_start":1041,"line_end":1041,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173615,"byte_end":173618,"line_start":1051,"line_end":1051,"column_start":12,"column_end":15},"name":"new","qualname":"<InprocAddr>::new","value":"fn <S> (host: S) -> Result<Self, AddrParseError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `InprocAddr` addr from a string.","sig":null,"attributes":[{"value":"/ Create a new `InprocAddr` addr from a string.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173476,"byte_end":173525,"line_start":1048,"line_end":1048,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173530,"byte_end":173533,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ The string cannot be empty or longuer than `INPROC_MAX_SIZE`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173538,"byte_end":173603,"line_start":1050,"line_end":1050,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174644,"byte_end":174654,"line_start":1088,"line_end":1088,"column_start":12,"column_end":22},"name":"new_unique","qualname":"<InprocAddr>::new_unique","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unique `InprocAddr` by generating a [uuid v4].","sig":null,"attributes":[{"value":"/ Creates a new unique `InprocAddr` by generating a [uuid v4].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174048,"byte_end":174112,"line_start":1068,"line_end":1068,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174117,"byte_end":174120,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ This is the `inproc` equivalent of a system assigned port.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174125,"byte_end":174187,"line_start":1070,"line_end":1070,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174192,"byte_end":174195,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174200,"byte_end":174213,"line_start":1072,"line_end":1072,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174218,"byte_end":174225,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174230,"byte_end":174276,"line_start":1074,"line_end":1074,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, InprocAddr, ServerBuilder};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174281,"byte_end":174337,"line_start":1075,"line_end":1075,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174342,"byte_end":174345,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ let addr = InprocAddr::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174350,"byte_end":174390,"line_start":1077,"line_end":1077,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174395,"byte_end":174398,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ let server = ServerBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174403,"byte_end":174440,"line_start":1079,"line_end":1079,"column_start":5,"column_end":42}},{"value":"/     .bind(addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174445,"byte_end":174464,"line_start":1080,"line_end":1080,"column_start":5,"column_end":24}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174469,"byte_end":174487,"line_start":1081,"line_end":1081,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174492,"byte_end":174497,"line_start":1082,"line_end":1082,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174502,"byte_end":174518,"line_start":1083,"line_end":1083,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174523,"byte_end":174530,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174535,"byte_end":174542,"line_start":1085,"line_end":1085,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174547,"byte_end":174550,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ [uuid v4]: https://docs.rs/uuid/0.7.4/uuid/struct.Uuid.html#method.new_v4","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174555,"byte_end":174632,"line_start":1087,"line_end":1087,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174799,"byte_end":174805,"line_start":1093,"line_end":1093,"column_start":12,"column_end":18},"name":"as_str","qualname":"<InprocAddr>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying string of the `InprocAddr`.\n","sig":null,"attributes":[{"value":"/ Returns the underlying string of the `InprocAddr`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174733,"byte_end":174787,"line_start":1092,"line_end":1092,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3852},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178850,"byte_end":178853,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8},"name":"Tcp","qualname":"::endpoint::Endpoint::Tcp","value":"Endpoint::Tcp(TcpAddr)","parent":{"krate":0,"index":3851},"children":[],"decl_id":null,"docs":" Unicast transport using TCP, see [`zmq_tcp`].","sig":null,"attributes":[{"value":"/ Unicast transport using TCP, see [`zmq_tcp`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178730,"byte_end":178779,"line_start":1215,"line_end":1215,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178784,"byte_end":178787,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ [`zmq_tcp`]: http://api.zeromq.org/master:zmq-tcp","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178792,"byte_end":178845,"line_start":1217,"line_end":1217,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3855},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178983,"byte_end":178986,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8},"name":"Udp","qualname":"::endpoint::Endpoint::Udp","value":"Endpoint::Udp(UdpAddr)","parent":{"krate":0,"index":3851},"children":[],"decl_id":null,"docs":" ØMQ UDP multicast and unicast transport","sig":null,"attributes":[{"value":"/ ØMQ UDP multicast and unicast transport","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178868,"byte_end":178912,"line_start":1219,"line_end":1219,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178917,"byte_end":178920,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ [`zmq_udp`]: http://api.zeromq.org/master:zmq-udp","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178925,"byte_end":178978,"line_start":1221,"line_end":1221,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3858},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179137,"byte_end":179143,"line_start":1226,"line_end":1226,"column_start":5,"column_end":11},"name":"Inproc","qualname":"::endpoint::Endpoint::Inproc","value":"Endpoint::Inproc(InprocAddr)","parent":{"krate":0,"index":3851},"children":[],"decl_id":null,"docs":" Local in-process (inter-thread) communication transport","sig":null,"attributes":[{"value":"/ Local in-process (inter-thread) communication transport","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179001,"byte_end":179060,"line_start":1223,"line_end":1223,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179065,"byte_end":179068,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ [`zmq_inproc`]: http://api.zeromq.org/master:zmq-inproc","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179073,"byte_end":179132,"line_start":1225,"line_end":1225,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3861},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179292,"byte_end":179295,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8},"name":"Pgm","qualname":"::endpoint::Endpoint::Pgm","value":"Endpoint::Pgm(PgmAddr)","parent":{"krate":0,"index":3851},"children":[],"decl_id":null,"docs":" Reliable multicast transport using PGM, see [`zmq_pgm`].","sig":null,"attributes":[{"value":"/ Reliable multicast transport using PGM, see [`zmq_pgm`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179161,"byte_end":179221,"line_start":1227,"line_end":1227,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179226,"byte_end":179229,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ [`zmq_pgm`]: http://api.zeromq.org/master:zmq-pgm","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179234,"byte_end":179287,"line_start":1229,"line_end":1229,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3864},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179442,"byte_end":179446,"line_start":1234,"line_end":1234,"column_start":5,"column_end":9},"name":"Epgm","qualname":"::endpoint::Endpoint::Epgm","value":"Endpoint::Epgm(EpgmAddr)","parent":{"krate":0,"index":3851},"children":[],"decl_id":null,"docs":" Reliable multicast transport using EPGM, see [`zmq_pgm`].","sig":null,"attributes":[{"value":"/ Reliable multicast transport using EPGM, see [`zmq_pgm`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179310,"byte_end":179371,"line_start":1231,"line_end":1231,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179376,"byte_end":179379,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ [`zmq_pgm`]: http://api.zeromq.org/master:zmq-pgm","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179384,"byte_end":179437,"line_start":1233,"line_end":1233,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":3851},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178715,"byte_end":178723,"line_start":1214,"line_end":1214,"column_start":10,"column_end":18},"name":"Endpoint","qualname":"::endpoint::Endpoint","value":"Endpoint::{Tcp, Udp, Inproc, Pgm, Epgm}","parent":null,"children":[{"krate":0,"index":3852},{"krate":0,"index":3855},{"krate":0,"index":3858},{"krate":0,"index":3861},{"krate":0,"index":3864}],"decl_id":null,"docs":" A transport and a transport-specific address supported by ØMQ.","sig":null,"attributes":[{"value":"/ A transport and a transport-specific address supported by ØMQ.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176330,"byte_end":176397,"line_start":1164,"line_end":1164,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176398,"byte_end":176401,"line_start":1165,"line_end":1165,"column_start":1,"column_end":4}},{"value":"/ The transport specifies the underlying protocol to use. The address","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176402,"byte_end":176473,"line_start":1166,"line_end":1166,"column_start":1,"column_end":72}},{"value":"/ specifies the transport-specific address to connect to.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176474,"byte_end":176533,"line_start":1167,"line_end":1167,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176534,"byte_end":176537,"line_start":1168,"line_end":1168,"column_start":1,"column_end":4}},{"value":"/ # Bind vs. Connect","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176538,"byte_end":176560,"line_start":1169,"line_end":1169,"column_start":1,"column_end":23}},{"value":"/ For most transports and socket types the connection is not performed","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176561,"byte_end":176633,"line_start":1170,"line_end":1170,"column_start":1,"column_end":73}},{"value":"/ immediately but as needed by ØMQ. Thus a successful call to `connect`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176634,"byte_end":176708,"line_start":1171,"line_end":1171,"column_start":1,"column_end":74}},{"value":"/ does not mean that the connection was or could actually be established.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176709,"byte_end":176784,"line_start":1172,"line_end":1172,"column_start":1,"column_end":76}},{"value":"/ Because of this, for most transports and socket types the order in","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176785,"byte_end":176855,"line_start":1173,"line_end":1173,"column_start":1,"column_end":71}},{"value":"/ which a server socket is bound and a client socket is connected to it","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176856,"byte_end":176929,"line_start":1174,"line_end":1174,"column_start":1,"column_end":74}},{"value":"/ does not matter.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176930,"byte_end":176950,"line_start":1175,"line_end":1175,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176951,"byte_end":176954,"line_start":1176,"line_end":1176,"column_start":1,"column_end":4}},{"value":"/ # Summary of Transports","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176955,"byte_end":176982,"line_start":1177,"line_end":1177,"column_start":1,"column_end":28}},{"value":"/ | Transport `str` | Description                                 | Reference      |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176983,"byte_end":177069,"line_start":1178,"line_end":1178,"column_start":1,"column_end":87}},{"value":"/ | ----------------|:-------------------------------------------:|:--------------:|","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177070,"byte_end":177156,"line_start":1179,"line_end":1179,"column_start":1,"column_end":87}},{"value":"/ | \"tcp\"           | unicast transport using TCP                 | [`zmq_tcp`]    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177157,"byte_end":177243,"line_start":1180,"line_end":1180,"column_start":1,"column_end":87}},{"value":"/ | \"udp\"           | UDP multicast and unicast transport         | [`zmq_udp`]    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177244,"byte_end":177330,"line_start":1181,"line_end":1181,"column_start":1,"column_end":87}},{"value":"/ | \"ipc\"           | local inter-process communication transport | [`zmq_ipc`]    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177331,"byte_end":177417,"line_start":1182,"line_end":1182,"column_start":1,"column_end":87}},{"value":"/ | \"inproc\"        | local in-process communication transport    | [`zmq_inproc`] |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177418,"byte_end":177504,"line_start":1183,"line_end":1183,"column_start":1,"column_end":87}},{"value":"/ | \"pgm\", \"epgm\"   | reliable multicast transport using PGM      | [`zmq_pgm`]    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177505,"byte_end":177591,"line_start":1184,"line_end":1184,"column_start":1,"column_end":87}},{"value":"/ | \"vmci\"          | virtual machine communications interface    | [`zmq_vmci`]   |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177592,"byte_end":177678,"line_start":1185,"line_end":1185,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177679,"byte_end":177682,"line_start":1186,"line_end":1186,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177683,"byte_end":177696,"line_start":1187,"line_end":1187,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177697,"byte_end":177704,"line_start":1188,"line_end":1188,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177705,"byte_end":177751,"line_start":1189,"line_end":1189,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, TcpAddr, addr::Endpoint};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177752,"byte_end":177812,"line_start":1190,"line_end":1190,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177813,"byte_end":177816,"line_start":1191,"line_end":1191,"column_start":1,"column_end":4}},{"value":"/ // IPv4 addr with TCP transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177817,"byte_end":177853,"line_start":1192,"line_end":1192,"column_start":1,"column_end":37}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:9090\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177854,"byte_end":177907,"line_start":1193,"line_end":1193,"column_start":1,"column_end":54}},{"value":"/ let endpoint: Endpoint = addr.into();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177908,"byte_end":177949,"line_start":1194,"line_end":1194,"column_start":1,"column_end":42}},{"value":"/ assert!(endpoint.is_tcp());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177950,"byte_end":177981,"line_start":1195,"line_end":1195,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177982,"byte_end":177987,"line_start":1196,"line_end":1196,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":177988,"byte_end":178004,"line_start":1197,"line_end":1197,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178005,"byte_end":178012,"line_start":1198,"line_end":1198,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178013,"byte_end":178020,"line_start":1199,"line_end":1199,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178021,"byte_end":178024,"line_start":1200,"line_end":1200,"column_start":1,"column_end":4}},{"value":"/ This enum type is non-exhaustive and could have additional variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178025,"byte_end":178096,"line_start":1201,"line_end":1201,"column_start":1,"column_end":72}},{"value":"/ added in future. Therefore, when matching against variants of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178097,"byte_end":178162,"line_start":1202,"line_end":1202,"column_start":1,"column_end":66}},{"value":"/ non-exhaustive enums, an extra wildcard arm must be added to account","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178163,"byte_end":178235,"line_start":1203,"line_end":1203,"column_start":1,"column_end":73}},{"value":"/ for any future variants.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178236,"byte_end":178264,"line_start":1204,"line_end":1204,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178265,"byte_end":178268,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ [`zmq_tcp`]: http://api.zeromq.org/master:zmq_tcp","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178269,"byte_end":178322,"line_start":1206,"line_end":1206,"column_start":1,"column_end":54}},{"value":"/ [`zmq_udp`]: http://api.zeromq.org/master:zmq-udp","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178323,"byte_end":178376,"line_start":1207,"line_end":1207,"column_start":1,"column_end":54}},{"value":"/ [`zmq_ipc`]: http://api.zeromq.org/master:zmq_ipc","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178377,"byte_end":178430,"line_start":1208,"line_end":1208,"column_start":1,"column_end":54}},{"value":"/ [`zmq_inproc`]: http://api.zeromq.org/master:zmq_inproc","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178431,"byte_end":178490,"line_start":1209,"line_end":1209,"column_start":1,"column_end":60}},{"value":"/ [`zmq_pgm`]: http://api.zeromq.org/master:zmq_pgm","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178491,"byte_end":178544,"line_start":1210,"line_end":1210,"column_start":1,"column_end":54}},{"value":"/ [`zmq_vmci`]: http://api.zeromq.org/master:zmq_vmci","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178545,"byte_end":178600,"line_start":1211,"line_end":1211,"column_start":1,"column_end":56}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":178670,"byte_end":178705,"line_start":1213,"line_end":1213,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179553,"byte_end":179559,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"is_tcp","qualname":"<Endpoint>::is_tcp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the endpoint uses the `Tcp` transport.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the endpoint uses the `Tcp` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179481,"byte_end":179541,"line_start":1238,"line_end":1238,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179763,"byte_end":179769,"line_start":1248,"line_end":1248,"column_start":12,"column_end":18},"name":"is_udp","qualname":"<Endpoint>::is_udp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the endpoint uses the `Ucp` transport.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the endpoint uses the `Ucp` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179691,"byte_end":179751,"line_start":1247,"line_end":1247,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179976,"byte_end":179985,"line_start":1257,"line_end":1257,"column_start":12,"column_end":21},"name":"is_inproc","qualname":"<Endpoint>::is_inproc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the endpoint uses the `Inproc` transport.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the endpoint uses the `Inproc` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179901,"byte_end":179964,"line_start":1256,"line_end":1256,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":180191,"byte_end":180197,"line_start":1265,"line_end":1265,"column_start":12,"column_end":18},"name":"is_pgm","qualname":"<Endpoint>::is_pgm","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the endpoint uses the `Pgm` transport.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the endpoint uses the `Pgm` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":180119,"byte_end":180179,"line_start":1264,"line_end":1264,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":180401,"byte_end":180409,"line_start":1273,"line_end":1273,"column_start":12,"column_end":20},"name":"is_edpgm","qualname":"<Endpoint>::is_edpgm","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the endpoint uses the `Epgm` transport.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the endpoint uses the `Epgm` transport.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":180328,"byte_end":180389,"line_start":1272,"line_end":1272,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1159},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184831,"byte_end":184836,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"decl_id":null,"docs":" An error with a kind and a msg.","sig":null,"attributes":[{"value":"/ An error with a kind and a msg.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183497,"byte_end":183532,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183533,"byte_end":183536,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ An `Error` contains a [`ErrorKind`] which gives context on the error cause,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183537,"byte_end":183616,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ as well as an `Option<T>` which may be used to prevent the loss of data","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183617,"byte_end":183692,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ in case of a failed `send` function call. When no `T` is specified, it","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183693,"byte_end":183767,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ defaults to `()`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183768,"byte_end":183789,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183790,"byte_end":183793,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183794,"byte_end":183813,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183814,"byte_end":183821,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183822,"byte_end":183868,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *, ErrorKind::*};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183869,"byte_end":183915,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183916,"byte_end":183919,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // This client has no peer and is therefore in mute state.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183920,"byte_end":183982,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ let client = Client::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":183983,"byte_end":184015,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184016,"byte_end":184019,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // This means that the following call would block.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184020,"byte_end":184074,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/ if let Err(mut err) = client.try_send(\"msg\") {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184075,"byte_end":184125,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/     match err.kind() {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184126,"byte_end":184152,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/         // This covers all the possible error scenarios for this socket type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184153,"byte_end":184234,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/         // Normally we would process each error differently.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184235,"byte_end":184299,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/         WouldBlock | InvalidCtx | Interrupted => {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184300,"byte_end":184354,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/             // Here we get back the message we tried to send.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184355,"byte_end":184420,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/             let msg = err.take().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184421,"byte_end":184467,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/             assert_eq!(\"msg\", msg.to_str()?);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184468,"byte_end":184517,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184518,"byte_end":184531,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/         // Since `ErrorKind` is non-exhaustive, need an","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184532,"byte_end":184591,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/         // extra wildcard arm to account for potential future variants.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184592,"byte_end":184667,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/         _ => panic!(\"unhandled error : {}\", err),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184668,"byte_end":184721,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184722,"byte_end":184731,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184732,"byte_end":184737,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184738,"byte_end":184743,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184744,"byte_end":184760,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184761,"byte_end":184768,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184769,"byte_end":184776,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184777,"byte_end":184780,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind`]: enum.ErrorKind.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184781,"byte_end":184819,"line_start":42,"line_end":42,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185413,"byte_end":185417,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error<T>>::kind","value":"fn (&self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the kind of error.\n","sig":null,"attributes":[{"value":"/ Returns the kind of error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185371,"byte_end":185401,"line_start":67,"line_end":67,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185546,"byte_end":185553,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"content","qualname":"<Error<T>>::content","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.1\", note = \"please use `get` instead\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185469,"byte_end":185534,"line_start":72,"line_end":72,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185687,"byte_end":185690,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"get","qualname":"<Error<T>>::get","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the content held by the error.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the content held by the error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185618,"byte_end":185675,"line_start":77,"line_end":77,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185833,"byte_end":185845,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"take_content","qualname":"<Error<T>>::take_content","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.1\", note = \"please use `take` instead\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185755,"byte_end":185821,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185994,"byte_end":185998,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"take","qualname":"<Error<T>>::take","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the content held by the error, if any, replacing with `None`.\n","sig":null,"attributes":[{"value":"/ Takes the content held by the error, if any, replacing with `None`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":185911,"byte_end":185982,"line_start":87,"line_end":87,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186304,"byte_end":186308,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"cast","qualname":"<Error<T>>::cast","value":"fn <I> (self) -> Error<I>","parent":null,"children":[],"decl_id":null,"docs":" This allows casting to any `Error<I>` by replacing the content\n of the error with `None`.","sig":null,"attributes":[{"value":"/ This allows casting to any `Error<I>` by replacing the content","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186064,"byte_end":186130,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/ of the error with `None`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186135,"byte_end":186164,"line_start":93,"line_end":93,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186169,"byte_end":186172,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This is not implemented as `Into<Error<I>>` to be explicit since","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186177,"byte_end":186245,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ information is lost in the conversion.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186250,"byte_end":186292,"line_start":96,"line_end":96,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3933},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188659,"byte_end":188669,"line_start":177,"line_end":177,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::error::ErrorKind::WouldBlock","value":"ErrorKind::WouldBlock","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" Non-blocking mode was requested and the message cannot be sent\n without blocking\n","sig":null,"attributes":[{"value":"/ Non-blocking mode was requested and the message cannot be sent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188525,"byte_end":188591,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ without blocking","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188596,"byte_end":188616,"line_start":175,"line_end":175,"column_start":5,"column_end":25}},{"value":"error(\"operation would block\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188621,"byte_end":188654,"line_start":176,"line_end":176,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3935},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188844,"byte_end":188859,"line_start":183,"line_end":183,"column_start":5,"column_end":20},"name":"HostUnreachable","qualname":"::error::ErrorKind::HostUnreachable","value":"ErrorKind::HostUnreachable","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" Occurs when a [`Server`] socket cannot route a message\n to a host.","sig":null,"attributes":[{"value":"/ Occurs when a [`Server`] socket cannot route a message","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188675,"byte_end":188733,"line_start":178,"line_end":178,"column_start":5,"column_end":63}},{"value":"/ to a host.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188738,"byte_end":188752,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188757,"byte_end":188760,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: socket/struct.Server.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188765,"byte_end":188806,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"error(\"host unreachable\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188811,"byte_end":188839,"line_start":182,"line_end":182,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3937},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189287,"byte_end":189297,"line_start":194,"line_end":194,"column_start":5,"column_end":15},"name":"InvalidCtx","qualname":"::error::ErrorKind::InvalidCtx","value":"ErrorKind::InvalidCtx","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" The context used in the operation was invalidated. Either the\n context is being terminated, or was already terminated.","sig":null,"attributes":[{"value":"/ The context used in the operation was invalidated. Either the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188865,"byte_end":188930,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/ context is being terminated, or was already terminated.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188935,"byte_end":188994,"line_start":185,"line_end":185,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188999,"byte_end":189002,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This error only occurs if:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189007,"byte_end":189037,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/ * The `Ctx` is being dropped or was previously dropped.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189042,"byte_end":189101,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/ * [`shutdown`] was called.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189106,"byte_end":189136,"line_start":189,"line_end":189,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189141,"byte_end":189144,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Ctx`]: ../ctx/struct.Ctx.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189149,"byte_end":189184,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ [`shutdown`]: ../ctx/struct.Ctx.html#method.terminate","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189189,"byte_end":189246,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"error(\"context invalidated\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189251,"byte_end":189282,"line_start":193,"line_end":193,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3939},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189404,"byte_end":189415,"line_start":197,"line_end":197,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::error::ErrorKind::Interrupted","value":"ErrorKind::Interrupted","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" The operation was interrupted by a OS signal delivery.\n","sig":null,"attributes":[{"value":"/ The operation was interrupted by a OS signal delivery.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189303,"byte_end":189361,"line_start":195,"line_end":195,"column_start":5,"column_end":63}},{"value":"error(\"interrupted by signal\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189366,"byte_end":189399,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3941},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189512,"byte_end":189521,"line_start":200,"line_end":200,"column_start":5,"column_end":14},"name":"AddrInUse","qualname":"::error::ErrorKind::AddrInUse","value":"ErrorKind::AddrInUse","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" The addr cannot be bound because it is already in use.\n","sig":null,"attributes":[{"value":"/ The addr cannot be bound because it is already in use.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189421,"byte_end":189479,"line_start":198,"line_end":198,"column_start":5,"column_end":63}},{"value":"error(\"addr in use\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189484,"byte_end":189507,"line_start":199,"line_end":199,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3943},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189656,"byte_end":189672,"line_start":204,"line_end":204,"column_start":5,"column_end":21},"name":"AddrNotAvailable","qualname":"::error::ErrorKind::AddrNotAvailable","value":"ErrorKind::AddrNotAvailable","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" A nonexistent interface was requested or the requested address was\n not local.\n","sig":null,"attributes":[{"value":"/ A nonexistent interface was requested or the requested address was","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189527,"byte_end":189597,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ not local.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189602,"byte_end":189616,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"error(\"addr not available\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189621,"byte_end":189651,"line_start":203,"line_end":203,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3945},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189806,"byte_end":189814,"line_start":209,"line_end":209,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::error::ErrorKind::NotFound","value":"ErrorKind::NotFound(&'static str)","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" An entity was not found.","sig":null,"attributes":[{"value":"/ An entity was not found.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189678,"byte_end":189706,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189711,"byte_end":189714,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Contains information on the specific entity.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189719,"byte_end":189767,"line_start":207,"line_end":207,"column_start":5,"column_end":53}},{"value":"error(\"not found: {}\", _0)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189772,"byte_end":189801,"line_start":208,"line_end":208,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3948},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189923,"byte_end":189934,"line_start":212,"line_end":212,"column_start":5,"column_end":16},"name":"SocketLimit","qualname":"::error::ErrorKind::SocketLimit","value":"ErrorKind::SocketLimit","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" The open socket limit was reached.\n","sig":null,"attributes":[{"value":"/ The open socket limit was reached.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189834,"byte_end":189872,"line_start":210,"line_end":210,"column_start":5,"column_end":43}},{"value":"error(\"open socket limit was reached\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189877,"byte_end":189918,"line_start":211,"line_end":211,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3950},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":190128,"byte_end":190140,"line_start":217,"line_end":217,"column_start":5,"column_end":17},"name":"InvalidInput","qualname":"::error::ErrorKind::InvalidInput","value":"ErrorKind::InvalidInput(&'static str)","parent":{"krate":0,"index":3932},"children":[],"decl_id":null,"docs":" The user did not follow its usage contract and provided invalid inputs.","sig":null,"attributes":[{"value":"/ The user did not follow its usage contract and provided invalid inputs.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":189940,"byte_end":190015,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":190020,"byte_end":190023,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Contains information on the specific contract breach.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":190028,"byte_end":190085,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"error(\"invalid input: {}\", _0)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":190090,"byte_end":190123,"line_start":216,"line_end":216,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":3932},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188509,"byte_end":188518,"line_start":173,"line_end":173,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"ErrorKind::{WouldBlock, HostUnreachable, InvalidCtx, Interrupted, AddrInUse, AddrNotAvailable, NotFound, SocketLimit, InvalidInput}","parent":null,"children":[{"krate":0,"index":3933},{"krate":0,"index":3935},{"krate":0,"index":3937},{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3943},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":3950}],"decl_id":null,"docs":" Used to give context to an `Error`.","sig":null,"attributes":[{"value":"/ Used to give context to an `Error`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188349,"byte_end":188388,"line_start":168,"line_end":168,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188389,"byte_end":188392,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [`Error`]: enum.Error.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188393,"byte_end":188423,"line_start":170,"line_end":170,"column_start":1,"column_end":31}},{"value":"non_exhaustive","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":188482,"byte_end":188499,"line_start":172,"line_end":172,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":1217},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":190766,"byte_end":190780,"line_start":15,"line_end":15,"column_start":11,"column_end":25},"name":"MAX_GROUP_SIZE","qualname":"::group::MAX_GROUP_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum allowed number of characters in a group.\n","sig":null,"attributes":[{"value":"/ The maximum allowed number of characters in a group.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":190699,"byte_end":190755,"line_start":14,"line_end":14,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191112,"byte_end":191127,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"GroupParseError","qualname":"::group::GroupParseError","value":"GroupParseError {  }","parent":null,"children":[{"krate":0,"index":3972}],"decl_id":null,"docs":" An error returned when trying to parse a `GroupSlice` or `Group`.","sig":null,"attributes":[{"value":"/ An error returned when trying to parse a `GroupSlice` or `Group`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":190795,"byte_end":190864,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":190865,"byte_end":190868,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This error occurs from a string that exceeds [`MAX_GROUP_SIZE`] char.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":190869,"byte_end":190942,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":190943,"byte_end":190946,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`MAX_GROUP_SIZE`]: constant.MAX_GROUP_SIZE.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":190947,"byte_end":190999,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"error(\"unable to parse group: {}\", msg)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191058,"byte_end":191100,"line_start":23,"line_end":23,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3991},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191657,"byte_end":191667,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"GroupSlice","qualname":"::group::GroupSlice","value":"GroupSlice {  }","parent":null,"children":[{"krate":0,"index":3992}],"decl_id":null,"docs":" A slice to a [`Group`]","sig":null,"attributes":[{"value":"/ A slice to a [`Group`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191249,"byte_end":191275,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191276,"byte_end":191279,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ A `GroupSlice` cannot be constructed directly. It is either obtained from a","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191280,"byte_end":191359,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ [`Group`] or from [`Msg::group`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191360,"byte_end":191397,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191398,"byte_end":191401,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Namely, the length this group identifier must not exceed [`MAX_GROUP_SIZE`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191402,"byte_end":191482,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191483,"byte_end":191486,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`MAX_GROUP_SIZE`]: constant.MAX_GROUP_SIZE.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191487,"byte_end":191539,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ [`Group`]: struct.Group.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191540,"byte_end":191572,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ [`Msg`]: struct.Msg.html#method.group","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191573,"byte_end":191614,"line_start":43,"line_end":43,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191861,"byte_end":191869,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"as_c_str","qualname":"<GroupSlice>::as_c_str","value":"fn (&self) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191926,"byte_end":191932,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"to_str","qualname":"<GroupSlice>::to_str","value":"fn (&self) -> Result<&str, str::Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192020,"byte_end":192035,"line_start":62,"line_end":62,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<GroupSlice>::to_string_lossy","value":"fn (&self) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192112,"byte_end":192120,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<GroupSlice>::to_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4003},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194286,"byte_end":194291,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"Group","qualname":"::group::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":4004}],"decl_id":null,"docs":" An `CString` that is a valid ØMQ group identifier.","sig":null,"attributes":[{"value":"/ An `CString` that is a valid ØMQ group identifier.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193765,"byte_end":193820,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193821,"byte_end":193824,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Namely, the length this group identifier must not exceed [`MAX_GROUP_SIZE`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193825,"byte_end":193905,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193906,"byte_end":193909,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193910,"byte_end":193923,"line_start":151,"line_end":151,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193924,"byte_end":193931,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193932,"byte_end":193978,"line_start":153,"line_end":153,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::TryInto, Group};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193979,"byte_end":194021,"line_start":154,"line_end":154,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194022,"byte_end":194025,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let string = \"abc\".to_owned();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194026,"byte_end":194060,"line_start":156,"line_end":156,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194061,"byte_end":194064,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let group: Group = string.try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194065,"byte_end":194107,"line_start":158,"line_end":158,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(group, \"abc\");","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194108,"byte_end":194137,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194138,"byte_end":194143,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194144,"byte_end":194160,"line_start":161,"line_end":161,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194161,"byte_end":194168,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194169,"byte_end":194176,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ [`MAX_GROUP_SIZE`]: constant.MAX_GROUP_SIZE.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194177,"byte_end":194229,"line_start":164,"line_end":164,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194578,"byte_end":194581,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Group>::new","value":"fn <B> (bytes: B) -> Result<Self, GroupParseError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Group` from a container of bytes.","sig":null,"attributes":[{"value":"/ Creates a new `Group` from a container of bytes.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194334,"byte_end":194386,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194391,"byte_end":194394,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ A valid `Group` should not exceed [`MAX_GROUP_SIZE`] char and","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194399,"byte_end":194464,"line_start":173,"line_end":173,"column_start":5,"column_end":70}},{"value":"/ not contain any `nul` bytes.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194469,"byte_end":194501,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194506,"byte_end":194509,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`MAX_GROUP_SIZE`]: constant.MAX_GROUP_SIZE.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194514,"byte_end":194566,"line_start":176,"line_end":176,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195021,"byte_end":195029,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"as_c_str","qualname":"<Group>::as_c_str","value":"fn (&self) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195096,"byte_end":195102,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Group>::to_str","value":"fn (&self) -> Result<&str, str::Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195190,"byte_end":195205,"line_start":199,"line_end":199,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Group>::to_string_lossy","value":"fn (&self) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195282,"byte_end":195290,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Group>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4019},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199917,"byte_end":199926,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"RoutingId","qualname":"::msg::RoutingId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A generated ID used to route messages to the approriate client.","sig":null,"attributes":[{"value":"/ A generated ID used to route messages to the approriate client.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":198879,"byte_end":198946,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":198947,"byte_end":198950,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A `RoutingId` is an unique temporary identifier for each `Client`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":198951,"byte_end":199020,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ connection on a `Server` socket generated by ØMQ.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199021,"byte_end":199075,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199076,"byte_end":199079,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199080,"byte_end":199093,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199094,"byte_end":199101,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199102,"byte_end":199148,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199149,"byte_end":199181,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199182,"byte_end":199185,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199186,"byte_end":199236,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199237,"byte_end":199240,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let server = ServerBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199241,"byte_end":199278,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     .bind(addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199279,"byte_end":199298,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199299,"byte_end":199317,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199318,"byte_end":199321,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let bound = server.last_endpoint()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199322,"byte_end":199362,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199363,"byte_end":199366,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let client = ClientBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199367,"byte_end":199404,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/     .connect(bound)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199405,"byte_end":199428,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199429,"byte_end":199447,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199448,"byte_end":199451,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // The client initiates the conversation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199452,"byte_end":199497,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/ client.send(\"\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199498,"byte_end":199519,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ // ØMQ generates a `RoutingId` for the client upon reception of the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199520,"byte_end":199592,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ // first message.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199593,"byte_end":199614,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ let msg = server.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199615,"byte_end":199648,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ let id = msg.routing_id().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199649,"byte_end":199688,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199689,"byte_end":199692,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This `RoutingId` is used to route messages back to the `Client`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199693,"byte_end":199764,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ server.route(\"\", id)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199765,"byte_end":199791,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199792,"byte_end":199797,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199798,"byte_end":199814,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199815,"byte_end":199822,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199823,"byte_end":199830,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200248,"byte_end":200251,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"Msg","qualname":"::msg::Msg","value":"Msg {  }","parent":null,"children":[{"krate":0,"index":1347}],"decl_id":null,"docs":" A handle to a message owned by ØMQ.","sig":null,"attributes":[{"value":"/ A handle to a message owned by ØMQ.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199938,"byte_end":199978,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199979,"byte_end":199982,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A ØMQ message is a discrete unit of data passed between applications","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":199983,"byte_end":200056,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ or components of the same application. ØMQ messages have no internal","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200057,"byte_end":200130,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ structure and from the point of view of ØMQ itself they are considered","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200131,"byte_end":200206,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"/ to be opaque binary data.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200207,"byte_end":200236,"line_start":60,"line_end":60,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200760,"byte_end":200763,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<Msg>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Msg`.","sig":null,"attributes":[{"value":"/ Create an empty `Msg`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200472,"byte_end":200498,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200503,"byte_end":200506,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ See [`zmq_msg_init`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200511,"byte_end":200536,"line_start":80,"line_end":80,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200541,"byte_end":200544,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`zmq_msg_init`]: http://api.zeromq.org/master:zmq-msg-init","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200549,"byte_end":200612,"line_start":82,"line_end":82,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200617,"byte_end":200620,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200625,"byte_end":200632,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use libzmq::Msg;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200637,"byte_end":200657,"line_start":85,"line_end":85,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200662,"byte_end":200665,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let msg = Msg::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200670,"byte_end":200695,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200700,"byte_end":200703,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert!(msg.is_empty());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200708,"byte_end":200736,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200741,"byte_end":200748,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201182,"byte_end":201191,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"with_size","qualname":"<Msg>::with_size","value":"fn (size: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Msg` preallocated with `len` zeroed bytes.","sig":null,"attributes":[{"value":"/ Create a `Msg` preallocated with `len` zeroed bytes.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200811,"byte_end":200867,"line_start":95,"line_end":95,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200872,"byte_end":200875,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ See [`zmq_msg_init_size`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200880,"byte_end":200910,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200915,"byte_end":200918,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`zmq_msg_init_size`]: http://api.zeromq.org/master:zmq-msg-init-size","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200923,"byte_end":200996,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201001,"byte_end":201004,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201009,"byte_end":201016,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use libzmq::Msg;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201021,"byte_end":201041,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201046,"byte_end":201049,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let size = 420;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201054,"byte_end":201073,"line_start":104,"line_end":104,"column_start":5,"column_end":24}},{"value":"/ let msg = Msg::with_size(size);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201078,"byte_end":201113,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201118,"byte_end":201121,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(msg.len(), size);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201126,"byte_end":201158,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201163,"byte_end":201170,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201541,"byte_end":201544,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"len","qualname":"<Msg>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the message content size in bytes.","sig":null,"attributes":[{"value":"/ Returns the message content size in bytes.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201369,"byte_end":201415,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201420,"byte_end":201423,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ See [`zmq_msg_size`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201428,"byte_end":201453,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201458,"byte_end":201461,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [`zmq_msg_size`]: http://api.zeromq.org/master:zmq-msg-size","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201466,"byte_end":201529,"line_start":121,"line_end":121,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201694,"byte_end":201702,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Msg>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the message content has size zero.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the message content has size zero.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201626,"byte_end":201682,"line_start":126,"line_end":126,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202107,"byte_end":202113,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Msg>::to_str","value":"fn (&self) -> Result<&str, Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Return the message content as a `str` slice if it is valid UTF-8.","sig":null,"attributes":[{"value":"/ Return the message content as a `str` slice if it is valid UTF-8.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201755,"byte_end":201824,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201829,"byte_end":201832,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201837,"byte_end":201844,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201849,"byte_end":201895,"line_start":134,"line_end":134,"column_start":5,"column_end":51}},{"value":"/ use libzmq::Msg;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201900,"byte_end":201920,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201925,"byte_end":201928,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let text = \"blzit\";","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201933,"byte_end":201956,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"/ let msg = Msg::from(text);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201961,"byte_end":201991,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":201996,"byte_end":201999,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(msg.to_str()?, text);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202004,"byte_end":202040,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202045,"byte_end":202050,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202055,"byte_end":202071,"line_start":142,"line_end":142,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202076,"byte_end":202083,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202088,"byte_end":202095,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202449,"byte_end":202457,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Msg>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the message content as a byte slice.","sig":null,"attributes":[{"value":"/ Return the message content as a byte slice.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202201,"byte_end":202248,"line_start":149,"line_end":149,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202253,"byte_end":202256,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202261,"byte_end":202268,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use libzmq::Msg;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202273,"byte_end":202293,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202298,"byte_end":202301,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let bytes: &[u8] = b\"blzit\";","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202306,"byte_end":202338,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/ let msg = Msg::from(bytes);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202343,"byte_end":202374,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202379,"byte_end":202382,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(msg.as_bytes(), bytes);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202387,"byte_end":202425,"line_start":157,"line_end":157,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202430,"byte_end":202437,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202851,"byte_end":202863,"line_start":170,"line_end":170,"column_start":12,"column_end":24},"name":"as_bytes_mut","qualname":"<Msg>::as_bytes_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the message content as a mutable byte slice.\n","sig":null,"attributes":[{"value":"/ Return the message content as a mutable byte slice.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":202784,"byte_end":202839,"line_start":169,"line_end":169,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203348,"byte_end":203358,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"routing_id","qualname":"<Msg>::routing_id","value":"fn (&self) -> Option<RoutingId>","parent":null,"children":[],"decl_id":null,"docs":" Get routing ID property on the message.","sig":null,"attributes":[{"value":"/ Get routing ID property on the message.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203161,"byte_end":203204,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203209,"byte_end":203212,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ See [`zmq_msg_routing_id`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203217,"byte_end":203248,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203253,"byte_end":203256,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`zmq_msg_routing_id`]: http://api.zeromq.org/master:zmq-msg-routing-id","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203261,"byte_end":203336,"line_start":183,"line_end":183,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":204248,"byte_end":204262,"line_start":211,"line_end":211,"column_start":12,"column_end":26},"name":"set_routing_id","qualname":"<Msg>::set_routing_id","value":"fn (&mut self, routing_id: RoutingId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set routing ID property on the message.","sig":null,"attributes":[{"value":"/ Set routing ID property on the message.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203826,"byte_end":203869,"line_start":199,"line_end":199,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203874,"byte_end":203877,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203882,"byte_end":203902,"line_start":201,"line_end":201,"column_start":5,"column_end":25}},{"value":"/ * Cannot be zero","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203907,"byte_end":203927,"line_start":202,"line_end":202,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203932,"byte_end":203935,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203940,"byte_end":203969,"line_start":204,"line_end":204,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidInput`] (if contract is not followed)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":203974,"byte_end":204026,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":204031,"byte_end":204034,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ See [`zmq_msg_set_routing_id`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":204039,"byte_end":204074,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":204079,"byte_end":204082,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`zmq_msg_set_routing_id`]: http://api.zeromq.org/master:zmq-msg-set-routing-id","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":204087,"byte_end":204170,"line_start":209,"line_end":209,"column_start":5,"column_end":88}},{"value":"/ [`InvalidInput`]: ../enum.Error.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":204175,"byte_end":204236,"line_start":210,"line_end":210,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":204629,"byte_end":204634,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"group","qualname":"<Msg>::group","value":"fn (&self) -> Option<&GroupSlice>","parent":null,"children":[],"decl_id":null,"docs":" The group property on the message.\n","sig":null,"attributes":[{"value":"/ The group property on the message.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":204579,"byte_end":204617,"line_start":223,"line_end":223,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205709,"byte_end":205718,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"set_group","qualname":"<Msg>::set_group","value":"fn <G> (&mut self, group: G) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the group property on the message.","sig":null,"attributes":[{"value":"/ Set the group property on the message.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205050,"byte_end":205092,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205097,"byte_end":205100,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205105,"byte_end":205112,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205117,"byte_end":205163,"line_start":240,"line_end":240,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::TryInto, Msg, Group};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205168,"byte_end":205215,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205220,"byte_end":205223,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let a: Group = \"A\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205228,"byte_end":205263,"line_start":243,"line_end":243,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205268,"byte_end":205271,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let mut msg: Msg = \"some msg\".into();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205276,"byte_end":205317,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/ msg.set_group(&a);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205322,"byte_end":205344,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(a, msg.group().unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205349,"byte_end":205389,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205394,"byte_end":205399,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205404,"byte_end":205420,"line_start":249,"line_end":249,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205425,"byte_end":205432,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205437,"byte_end":205444,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205449,"byte_end":205452,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205457,"byte_end":205477,"line_start":253,"line_end":253,"column_start":5,"column_end":25}},{"value":"/ * Cannot hold more than 15 characters.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205482,"byte_end":205524,"line_start":254,"line_end":254,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205529,"byte_end":205532,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205537,"byte_end":205566,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidInput`] (if contract is not followed)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205571,"byte_end":205623,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205628,"byte_end":205631,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: ../enum.Error.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":205636,"byte_end":205697,"line_start":259,"line_end":259,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1442},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"poll","qualname":"::poll","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":4205},{"krate":0,"index":4227},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4218},{"krate":0,"index":4212},{"krate":0,"index":4210},{"krate":0,"index":4207},{"krate":0,"index":4228},{"krate":0,"index":4235},{"krate":0,"index":4237},{"krate":0,"index":4239},{"krate":0,"index":4241},{"krate":0,"index":4243},{"krate":0,"index":4252},{"krate":0,"index":4255},{"krate":0,"index":4257},{"krate":0,"index":4260},{"krate":0,"index":4262},{"krate":0,"index":4265},{"krate":0,"index":4267},{"krate":0,"index":4270},{"krate":0,"index":4272},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":4301},{"krate":0,"index":4323},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4314},{"krate":0,"index":4308},{"krate":0,"index":4306},{"krate":0,"index":4303},{"krate":0,"index":4324},{"krate":0,"index":4332},{"krate":0,"index":4334},{"krate":0,"index":4336},{"krate":0,"index":4338},{"krate":0,"index":4340},{"krate":0,"index":4350},{"krate":0,"index":4353},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4360},{"krate":0,"index":4363},{"krate":0,"index":4365},{"krate":0,"index":4368},{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4402},{"krate":0,"index":4427},{"krate":0,"index":4425},{"krate":0,"index":4423},{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4410},{"krate":0,"index":4408},{"krate":0,"index":4405},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1480},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":4428},{"krate":0,"index":4435},{"krate":0,"index":4432},{"krate":0,"index":1505},{"krate":0,"index":4438},{"krate":0,"index":4441},{"krate":0,"index":1510},{"krate":0,"index":4443},{"krate":0,"index":4460},{"krate":0,"index":4458},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4448},{"krate":0,"index":4446},{"krate":0,"index":1515},{"krate":0,"index":4461},{"krate":0,"index":4477},{"krate":0,"index":4475},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4465},{"krate":0,"index":4463},{"krate":0,"index":1521},{"krate":0,"index":1528},{"krate":0,"index":1533},{"krate":0,"index":4479},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4482},{"krate":0,"index":1537},{"krate":0,"index":1557},{"krate":0,"index":1559}],"decl_id":null,"docs":" Asynchronous polling mechanim.","sig":null,"attributes":[{"value":"! Asynchronous polling mechanim.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":215513,"byte_end":215547,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":215548,"byte_end":215551,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See the [`Poller`] documentation to get started.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":215552,"byte_end":215604,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":215605,"byte_end":215608,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`Poller`]: struct.Poller.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":215609,"byte_end":215643,"line_start":5,"line_end":5,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4205},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":216399,"byte_end":216406,"line_start":38,"line_end":38,"column_start":16,"column_end":23},"name":"Trigger","qualname":"::poll::Trigger","value":"Trigger {  }","parent":null,"children":[{"krate":0,"index":4206}],"decl_id":null,"docs":" A bitflag used to specifies the condition for triggering an [`Event`] in the\n [`Poller`].","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4244},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":216459,"byte_end":216464,"line_start":40,"line_end":40,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::poll::Trigger::EMPTY","value":"Trigger","parent":{"krate":0,"index":4243},"children":[],"decl_id":null,"docs":" Never trigger.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4245},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":216796,"byte_end":216804,"line_start":47,"line_end":47,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::poll::Trigger::READABLE","value":"Trigger","parent":{"krate":0,"index":4243},"children":[],"decl_id":null,"docs":" Trigger an `Event` on read readiness.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4246},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217156,"byte_end":217164,"line_start":54,"line_end":54,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::poll::Trigger::WRITABLE","value":"Trigger","parent":{"krate":0,"index":4243},"children":[],"decl_id":null,"docs":" Trigger an `Event` on write readiness.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1465},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217259,"byte_end":217264,"line_start":59,"line_end":59,"column_start":11,"column_end":16},"name":"EMPTY","qualname":"::poll::EMPTY","value":"Trigger","parent":null,"children":[],"decl_id":null,"docs":" Never trigger an `Event` while polling.\n","sig":null,"attributes":[{"value":"/ Never trigger an `Event` while polling.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217205,"byte_end":217248,"line_start":58,"line_end":58,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":1466},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217563,"byte_end":217571,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"READABLE","qualname":"::poll::READABLE","value":"Trigger","parent":null,"children":[],"decl_id":null,"docs":" Trigger an `Event` on read readiness.","sig":null,"attributes":[{"value":"/ Trigger an `Event` on read readiness.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217292,"byte_end":217333,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217334,"byte_end":217337,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ For a `libzmq` socket this means that at least one message can be","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217338,"byte_end":217407,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/ received without blocking. For a standard socket, this means","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217408,"byte_end":217472,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ that at least one byte of data may be read from the fd without","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217473,"byte_end":217539,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/ blocking","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217540,"byte_end":217552,"line_start":65,"line_end":65,"column_start":1,"column_end":13}}]},{"kind":"Const","id":{"krate":0,"index":1467},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217871,"byte_end":217879,"line_start":73,"line_end":73,"column_start":11,"column_end":19},"name":"WRITABLE","qualname":"::poll::WRITABLE","value":"Trigger","parent":null,"children":[],"decl_id":null,"docs":" Trigger an `Event` on write readiness.","sig":null,"attributes":[{"value":"/ Trigger an `Event` on write readiness.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217602,"byte_end":217644,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217645,"byte_end":217648,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ For a `libzmq` socket this means that at least one message can","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217649,"byte_end":217715,"line_start":69,"line_end":69,"column_start":1,"column_end":67}},{"value":"/ be sent without blocking. For a standard socket, this means","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217716,"byte_end":217779,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/ that at lesat one bye of data may be written to the fd without","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217780,"byte_end":217846,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/ blocking.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":217847,"byte_end":217860,"line_start":72,"line_end":72,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4402},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218332,"byte_end":218338,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"PollId","qualname":"::poll::PollId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An alias to a [`Pollable`] element.","sig":null,"attributes":[{"value":"/ An alias to a [`Pollable`] element.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218172,"byte_end":218211,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218212,"byte_end":218215,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [`Pollable`]: enum.Pollable.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218216,"byte_end":218252,"line_start":86,"line_end":86,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1474},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219214,"byte_end":219220,"line_start":127,"line_end":127,"column_start":5,"column_end":11},"name":"Socket","qualname":"::poll::Pollable::Socket","value":"Pollable::Socket(&'a RawSocket)","parent":{"krate":0,"index":1472},"children":[],"decl_id":null,"docs":" A `Socket` type.\n","sig":null,"attributes":[{"value":"/ A `Socket` type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219189,"byte_end":219209,"line_start":126,"line_end":126,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1477},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219268,"byte_end":219270,"line_start":129,"line_end":129,"column_start":5,"column_end":7},"name":"Fd","qualname":"::poll::Pollable::Fd","value":"Pollable::Fd(RawFd)","parent":{"krate":0,"index":1472},"children":[],"decl_id":null,"docs":" A file descriptor.\n","sig":null,"attributes":[{"value":"/ A file descriptor.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219241,"byte_end":219263,"line_start":128,"line_end":128,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":1472},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219170,"byte_end":219178,"line_start":125,"line_end":125,"column_start":10,"column_end":18},"name":"Pollable","qualname":"::poll::Pollable","value":"Pollable::{Socket, Fd}","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1477}],"decl_id":null,"docs":" The types that can be polled by the [`Poller`].","sig":null,"attributes":[{"value":"/ The types that can be polled by the [`Poller`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218536,"byte_end":218587,"line_start":102,"line_end":102,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218588,"byte_end":218591,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218592,"byte_end":218605,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218606,"byte_end":218613,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218614,"byte_end":218660,"line_start":106,"line_end":106,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{Server, poll::*};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218661,"byte_end":218695,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218696,"byte_end":218726,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218727,"byte_end":218730,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let mut poller = Poller::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218731,"byte_end":218766,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218767,"byte_end":218770,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ // The poller can poll sockets...","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218771,"byte_end":218808,"line_start":112,"line_end":112,"column_start":1,"column_end":38}},{"value":"/ let server = Server::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218809,"byte_end":218841,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/ poller.add(&server, PollId(0), READABLE)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218842,"byte_end":218888,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218889,"byte_end":218892,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ // ...as well as any type that implements `AsRawFd`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218893,"byte_end":218949,"line_start":116,"line_end":116,"column_start":1,"column_end":57}},{"value":"/ let tcp_listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218950,"byte_end":219007,"line_start":117,"line_end":117,"column_start":1,"column_end":58}},{"value":"/ poller.add(&tcp_listener, PollId(1), READABLE | WRITABLE)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219008,"byte_end":219071,"line_start":118,"line_end":118,"column_start":1,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219072,"byte_end":219077,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219078,"byte_end":219094,"line_start":120,"line_end":120,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219095,"byte_end":219102,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219103,"byte_end":219110,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219111,"byte_end":219114,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [`Poller`]: struct.Poller.html#method.add","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219115,"byte_end":219160,"line_start":124,"line_end":124,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4428},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220655,"byte_end":220659,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"Iter","qualname":"::poll::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4430},{"krate":0,"index":4431}],"decl_id":null,"docs":" An `Iterator` over references to [`Event`].","sig":null,"attributes":[{"value":"/ An `Iterator` over references to [`Event`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220435,"byte_end":220482,"line_start":184,"line_end":184,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220483,"byte_end":220486,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Note that every event is guaranteed to be non-[`EMPTY`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220487,"byte_end":220547,"line_start":186,"line_end":186,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220548,"byte_end":220551,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [`EMPTY`]: constant.EMPTY.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220552,"byte_end":220586,"line_start":188,"line_end":188,"column_start":1,"column_end":35}},{"value":"/ [`Event`]: struct.Event.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220587,"byte_end":220619,"line_start":189,"line_end":189,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4438},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221699,"byte_end":221707,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::poll::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4439},{"krate":0,"index":4440}],"decl_id":null,"docs":" An `Iterator` over a set of [`Event`].","sig":null,"attributes":[{"value":"/ An `Iterator` over a set of [`Event`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221491,"byte_end":221533,"line_start":227,"line_end":227,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221534,"byte_end":221537,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Note that every event is guaranteed to be non-[`EMPTY`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221538,"byte_end":221598,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221599,"byte_end":221602,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [`EMPTY`]: constant.EMPTY.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221603,"byte_end":221637,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/ [`Event`]: struct.Event.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221638,"byte_end":221670,"line_start":232,"line_end":232,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4443},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222417,"byte_end":222422,"line_start":264,"line_end":264,"column_start":12,"column_end":17},"name":"Event","qualname":"::poll::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":4444},{"krate":0,"index":4445}],"decl_id":null,"docs":" An event detected by a poller.\n","sig":null,"attributes":[{"value":"/ An event detected by a poller.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222320,"byte_end":222354,"line_start":262,"line_end":262,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222520,"byte_end":222531,"line_start":271,"line_end":271,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates read readiness.\n","sig":null,"attributes":[{"value":"/ Indicates read readiness.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222479,"byte_end":222508,"line_start":270,"line_end":270,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222647,"byte_end":222658,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates write readiness.\n","sig":null,"attributes":[{"value":"/ Indicates write readiness.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222605,"byte_end":222635,"line_start":275,"line_end":275,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222851,"byte_end":222859,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that an error was received.","sig":null,"attributes":[{"value":"/ Indicates that an error was received.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222732,"byte_end":222773,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222778,"byte_end":222781,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This event can only occur if a `RawFd` is polled.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222786,"byte_end":222839,"line_start":282,"line_end":282,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223059,"byte_end":223070,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that there is urgent data to be read.","sig":null,"attributes":[{"value":"/ Indicates that there is urgent data to be read.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222930,"byte_end":222981,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222986,"byte_end":222989,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This event can only occur if a `RawFd` is polled.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222994,"byte_end":223047,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223256,"byte_end":223258,"line_start":297,"line_end":297,"column_start":12,"column_end":14},"name":"id","qualname":"<Event>::id","value":"fn (&self) -> PollId","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`PollId`] associated with the event.","sig":null,"attributes":[{"value":"/ Returns the [`PollId`] associated with the event.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223144,"byte_end":223197,"line_start":294,"line_end":294,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223202,"byte_end":223205,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ [`PollId`]: struct.PollId.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223210,"byte_end":223244,"line_start":296,"line_end":296,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4461},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223455,"byte_end":223461,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"Events","qualname":"::poll::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":4462}],"decl_id":null,"docs":" A vector of [`Event`] detected while polling.","sig":null,"attributes":[{"value":"/ A vector of [`Event`] detected while polling.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223303,"byte_end":223352,"line_start":302,"line_end":302,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223353,"byte_end":223356,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ [`Event`]: struct.Event.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223357,"byte_end":223389,"line_start":304,"line_end":304,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223575,"byte_end":223578,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"new","qualname":"<Events>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty event vector.\n","sig":null,"attributes":[{"value":"/ Creates a new empty event vector.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223526,"byte_end":223563,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223696,"byte_end":223709,"line_start":317,"line_end":317,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new event vector with the specified capacity.\n","sig":null,"attributes":[{"value":"/ Create a new event vector with the specified capacity.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223626,"byte_end":223684,"line_start":316,"line_end":316,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223879,"byte_end":223887,"line_start":324,"line_end":324,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the event vector.\n","sig":null,"attributes":[{"value":"/ Returns the capacity of the event vector.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223822,"byte_end":223867,"line_start":323,"line_end":323,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224017,"byte_end":224025,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` is the event vector contains no events.\n","sig":null,"attributes":[{"value":"/ Returns `true` is the event vector contains no events.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223947,"byte_end":224005,"line_start":328,"line_end":328,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224157,"byte_end":224161,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"fn (&self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` in the event vector.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` in the event vector.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224084,"byte_end":224145,"line_start":333,"line_end":333,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224302,"byte_end":224307,"line_start":342,"line_end":342,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empties the event vector.\n","sig":null,"attributes":[{"value":"/ Empties the event vector.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224261,"byte_end":224290,"line_start":341,"line_end":341,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4479},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226948,"byte_end":226954,"line_start":434,"line_end":434,"column_start":12,"column_end":18},"name":"Poller","qualname":"::poll::Poller","value":"Poller {  }","parent":null,"children":[{"krate":0,"index":4480},{"krate":0,"index":4481}],"decl_id":null,"docs":" A mechanism for input/output events multiplexing in a level-triggered fashion.","sig":null,"attributes":[{"value":"/ A mechanism for input/output events multiplexing in a level-triggered fashion.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224734,"byte_end":224816,"line_start":368,"line_end":368,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224817,"byte_end":224820,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ The poller is used to asynchronously detect events of a set of monitored","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224821,"byte_end":224897,"line_start":370,"line_end":370,"column_start":1,"column_end":77}},{"value":"/ [`Pollable`] elements. These elements must be registered for monitoring by","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224898,"byte_end":224976,"line_start":371,"line_end":371,"column_start":1,"column_end":79}},{"value":"/ [`adding`] them to the `Poller`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224977,"byte_end":225013,"line_start":372,"line_end":372,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225014,"byte_end":225017,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225018,"byte_end":225031,"line_start":374,"line_end":374,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225032,"byte_end":225039,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225040,"byte_end":225086,"line_start":376,"line_end":376,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *, poll::*};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225087,"byte_end":225128,"line_start":377,"line_end":377,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225129,"byte_end":225132,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ // We initialize our sockets and connect them to each other.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225133,"byte_end":225197,"line_start":379,"line_end":379,"column_start":1,"column_end":65}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225198,"byte_end":225248,"line_start":380,"line_end":380,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225249,"byte_end":225252,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ let server = Server::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225253,"byte_end":225285,"line_start":382,"line_end":382,"column_start":1,"column_end":33}},{"value":"/ server.bind(addr)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225286,"byte_end":225309,"line_start":383,"line_end":383,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225310,"byte_end":225313,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ let bound = server.last_endpoint()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225314,"byte_end":225354,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225355,"byte_end":225358,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225359,"byte_end":225391,"line_start":387,"line_end":387,"column_start":1,"column_end":33}},{"value":"/ client.connect(&bound)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225392,"byte_end":225420,"line_start":388,"line_end":388,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225421,"byte_end":225424,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ // We create our poller instance.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225425,"byte_end":225462,"line_start":390,"line_end":390,"column_start":1,"column_end":38}},{"value":"/ let mut poller = Poller::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225463,"byte_end":225498,"line_start":391,"line_end":391,"column_start":1,"column_end":36}},{"value":"/ poller.add(&server, PollId(0), READABLE)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225499,"byte_end":225545,"line_start":392,"line_end":392,"column_start":1,"column_end":47}},{"value":"/ poller.add(&client, PollId(1), READABLE)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225546,"byte_end":225592,"line_start":393,"line_end":393,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225593,"byte_end":225596,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ // Initialize the client.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225597,"byte_end":225626,"line_start":395,"line_end":395,"column_start":1,"column_end":30}},{"value":"/ client.send(\"ping\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225627,"byte_end":225652,"line_start":396,"line_end":396,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225653,"byte_end":225656,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225657,"byte_end":225692,"line_start":398,"line_end":398,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225693,"byte_end":225696,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ // Now the client and each server will send messages back and forth.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225697,"byte_end":225769,"line_start":400,"line_end":400,"column_start":1,"column_end":73}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225770,"byte_end":225791,"line_start":401,"line_end":401,"column_start":1,"column_end":22}},{"value":"/     // Wait indefinitely until at least one event is detected.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225792,"byte_end":225858,"line_start":402,"line_end":402,"column_start":1,"column_end":67}},{"value":"/     poller.poll(&mut events, Period::Infinite)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225859,"byte_end":225911,"line_start":403,"line_end":403,"column_start":1,"column_end":53}},{"value":"/     // Iterate over the detected events. Note that, since the events are","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225912,"byte_end":225988,"line_start":404,"line_end":404,"column_start":1,"column_end":77}},{"value":"/     // guaranteed to be non-empty, we don't need to protect against spurious","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":225989,"byte_end":226069,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/     // wakeups.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226070,"byte_end":226089,"line_start":406,"line_end":406,"column_start":1,"column_end":20}},{"value":"/     for event in &events {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226090,"byte_end":226120,"line_start":407,"line_end":407,"column_start":1,"column_end":31}},{"value":"/         assert!(event.is_readable());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226121,"byte_end":226162,"line_start":408,"line_end":408,"column_start":1,"column_end":42}},{"value":"/         match event.id() {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226163,"byte_end":226193,"line_start":409,"line_end":409,"column_start":1,"column_end":31}},{"value":"/             // The server is ready to receive an incoming message.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226194,"byte_end":226264,"line_start":410,"line_end":410,"column_start":1,"column_end":71}},{"value":"/             PollId(0) => {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226265,"byte_end":226295,"line_start":411,"line_end":411,"column_start":1,"column_end":31}},{"value":"/                 let msg = server.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226296,"byte_end":226345,"line_start":412,"line_end":412,"column_start":1,"column_end":50}},{"value":"/                 assert_eq!(\"ping\", msg.to_str()?);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226346,"byte_end":226400,"line_start":413,"line_end":413,"column_start":1,"column_end":55}},{"value":"/                 server.send(msg)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226401,"byte_end":226439,"line_start":414,"line_end":414,"column_start":1,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226440,"byte_end":226457,"line_start":415,"line_end":415,"column_start":1,"column_end":18}},{"value":"/             // One of the clients is ready to receive an incoming message.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226458,"byte_end":226536,"line_start":416,"line_end":416,"column_start":1,"column_end":79}},{"value":"/             PollId(1) => {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226537,"byte_end":226567,"line_start":417,"line_end":417,"column_start":1,"column_end":31}},{"value":"/                 let msg = client.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226568,"byte_end":226617,"line_start":418,"line_end":418,"column_start":1,"column_end":50}},{"value":"/                 assert_eq!(\"ping\", msg.to_str()?);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226618,"byte_end":226672,"line_start":419,"line_end":419,"column_start":1,"column_end":55}},{"value":"/                 client.send(msg)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226673,"byte_end":226711,"line_start":420,"line_end":420,"column_start":1,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226712,"byte_end":226729,"line_start":421,"line_end":421,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226730,"byte_end":226766,"line_start":422,"line_end":422,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226767,"byte_end":226780,"line_start":423,"line_end":423,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226781,"byte_end":226790,"line_start":424,"line_end":424,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226791,"byte_end":226796,"line_start":425,"line_end":425,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226797,"byte_end":226802,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226803,"byte_end":226819,"line_start":427,"line_end":427,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226820,"byte_end":226827,"line_start":428,"line_end":428,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226828,"byte_end":226835,"line_start":429,"line_end":429,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226836,"byte_end":226839,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ [`Pollable`]: enum.Pollable.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226840,"byte_end":226876,"line_start":431,"line_end":431,"column_start":1,"column_end":37}},{"value":"/ [`adding`]: #method.add","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":226877,"byte_end":226904,"line_start":432,"line_end":432,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227063,"byte_end":227066,"line_start":441,"line_end":441,"column_start":12,"column_end":15},"name":"new","qualname":"<Poller>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty poller.\n","sig":null,"attributes":[{"value":"/ Create a new empty poller.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227021,"byte_end":227051,"line_start":440,"line_end":440,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":228044,"byte_end":228047,"line_start":475,"line_end":475,"column_start":12,"column_end":15},"name":"add","qualname":"<Poller>::add","value":"fn <'a, P> (&mut self, pollable: P, id: PollId, trigger: Trigger) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Add a [`Pollable`] element for monitoring by the poller with the\n specified [`Trigger`] condition.","sig":null,"attributes":[{"value":"/ Add a [`Pollable`] element for monitoring by the poller with the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227114,"byte_end":227182,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/ specified [`Trigger`] condition.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227187,"byte_end":227223,"line_start":446,"line_end":446,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227228,"byte_end":227231,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227236,"byte_end":227257,"line_start":448,"line_end":448,"column_start":5,"column_end":26}},{"value":"/ * [`InvalidInput`] (added socket twice or invalid fd)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227262,"byte_end":227319,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227324,"byte_end":227327,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227332,"byte_end":227345,"line_start":451,"line_end":451,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227350,"byte_end":227357,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227362,"byte_end":227408,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{Server, poll::*, ErrorKind};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227413,"byte_end":227458,"line_start":454,"line_end":454,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227463,"byte_end":227466,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let server = Server::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227471,"byte_end":227503,"line_start":456,"line_end":456,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227508,"byte_end":227511,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let mut poller = Poller::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227516,"byte_end":227551,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227556,"byte_end":227559,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ poller.add(&server, PollId(0), EMPTY)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227564,"byte_end":227607,"line_start":460,"line_end":460,"column_start":5,"column_end":48}},{"value":"/ let err = poller.add(&server, PollId(1), EMPTY).unwrap_err();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227612,"byte_end":227677,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227682,"byte_end":227685,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ match err.kind() {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227690,"byte_end":227712,"line_start":463,"line_end":463,"column_start":5,"column_end":27}},{"value":"/     ErrorKind::InvalidInput { .. } => (),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227717,"byte_end":227762,"line_start":464,"line_end":464,"column_start":5,"column_end":50}},{"value":"/     _ => panic!(\"unexpected error\"),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227767,"byte_end":227807,"line_start":465,"line_end":465,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227812,"byte_end":227817,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227822,"byte_end":227827,"line_start":467,"line_end":467,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227832,"byte_end":227848,"line_start":468,"line_end":468,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227853,"byte_end":227860,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227865,"byte_end":227872,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227877,"byte_end":227880,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: ../enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227885,"byte_end":227950,"line_start":472,"line_end":472,"column_start":5,"column_end":70}},{"value":"/ [`Pollable`]: enum.Pollable.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227955,"byte_end":227991,"line_start":473,"line_end":473,"column_start":5,"column_end":41}},{"value":"/ [`Trigger`]: struct.Trigger.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227996,"byte_end":228032,"line_start":474,"line_end":474,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231242,"byte_end":231248,"line_start":589,"line_end":589,"column_start":12,"column_end":18},"name":"remove","qualname":"<Poller>::remove","value":"fn <'a, P> (&mut self, pollable: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Remove a [`Pollable`] element from monitoring by the poller.","sig":null,"attributes":[{"value":"/ Remove a [`Pollable`] element from monitoring by the poller.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230356,"byte_end":230420,"line_start":561,"line_end":561,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230425,"byte_end":230428,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230433,"byte_end":230454,"line_start":563,"line_end":563,"column_start":5,"column_end":26}},{"value":"/ * [`InvalidInput`] (element not present or invalid fd)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230459,"byte_end":230517,"line_start":564,"line_end":564,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230522,"byte_end":230525,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230530,"byte_end":230543,"line_start":566,"line_end":566,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230548,"byte_end":230555,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230560,"byte_end":230606,"line_start":568,"line_end":568,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{Server, poll::*, ErrorKind};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230611,"byte_end":230656,"line_start":569,"line_end":569,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230661,"byte_end":230664,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let server = Server::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230669,"byte_end":230701,"line_start":571,"line_end":571,"column_start":5,"column_end":37}},{"value":"/ let mut poller = Poller::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230706,"byte_end":230741,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230746,"byte_end":230749,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ poller.add(&server, PollId(0), EMPTY)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230754,"byte_end":230797,"line_start":574,"line_end":574,"column_start":5,"column_end":48}},{"value":"/ poller.remove(&server)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230802,"byte_end":230830,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230835,"byte_end":230838,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let err = poller.remove(&server).unwrap_err();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230843,"byte_end":230893,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ match err.kind() {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230898,"byte_end":230920,"line_start":578,"line_end":578,"column_start":5,"column_end":27}},{"value":"/     ErrorKind::InvalidInput { .. } => (), // cannot remove socket twice.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":230925,"byte_end":231001,"line_start":579,"line_end":579,"column_start":5,"column_end":81}},{"value":"/     _ => panic!(\"unexpected error\"),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231006,"byte_end":231046,"line_start":580,"line_end":580,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231051,"byte_end":231056,"line_start":581,"line_end":581,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231061,"byte_end":231066,"line_start":582,"line_end":582,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231071,"byte_end":231087,"line_start":583,"line_end":583,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231092,"byte_end":231099,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231104,"byte_end":231111,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231116,"byte_end":231119,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: ../enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231124,"byte_end":231189,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/ [`Pollable`]: enum.Pollable.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":231194,"byte_end":231230,"line_start":588,"line_end":588,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233334,"byte_end":233340,"line_start":657,"line_end":657,"column_start":12,"column_end":18},"name":"modify","qualname":"<Poller>::modify","value":"fn <'a, P> (&mut self, pollable: P, trigger: Trigger) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Modify the [`Trigger`] confition for the specified [`Pollable`] element\n monitored by the poller.","sig":null,"attributes":[{"value":"/ Modify the [`Trigger`] confition for the specified [`Pollable`] element","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":232957,"byte_end":233032,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ monitored by the poller.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233037,"byte_end":233065,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233070,"byte_end":233073,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233078,"byte_end":233099,"line_start":651,"line_end":651,"column_start":5,"column_end":26}},{"value":"/ * [`InvalidInput`] (element not present or invalid fd)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233104,"byte_end":233162,"line_start":652,"line_end":652,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233167,"byte_end":233170,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: ../enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233175,"byte_end":233240,"line_start":654,"line_end":654,"column_start":5,"column_end":70}},{"value":"/ [`Pollable`]: enum.Pollable.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233245,"byte_end":233281,"line_start":655,"line_end":655,"column_start":5,"column_end":41}},{"value":"/ [`Trigger`]: struct.Trigger.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":233286,"byte_end":233322,"line_start":656,"line_end":656,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236744,"byte_end":236752,"line_start":768,"line_end":768,"column_start":12,"column_end":20},"name":"try_poll","qualname":"<Poller>::try_poll","value":"fn (&mut self, events: &mut Events) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Check for events in the monitored elements, returning instantly.","sig":null,"attributes":[{"value":"/ Check for events in the monitored elements, returning instantly.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236175,"byte_end":236243,"line_start":755,"line_end":755,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236248,"byte_end":236251,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ If no events occured, returns [`WouldBlock`]. Note that in this case,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236256,"byte_end":236329,"line_start":757,"line_end":757,"column_start":5,"column_end":78}},{"value":"/ the `Events` would also be empty.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236334,"byte_end":236371,"line_start":758,"line_end":758,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236376,"byte_end":236379,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236384,"byte_end":236405,"line_start":760,"line_end":760,"column_start":5,"column_end":26}},{"value":"/ * [`WouldBlock`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236410,"byte_end":236430,"line_start":761,"line_end":761,"column_start":5,"column_end":25}},{"value":"/ * [`InvalidCtx`] (`Ctx` of a polled socket was terminated)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236435,"byte_end":236497,"line_start":762,"line_end":762,"column_start":5,"column_end":67}},{"value":"/ * [`Interrupted`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236502,"byte_end":236523,"line_start":763,"line_end":763,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236528,"byte_end":236531,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ [`Interrupted`]: ../enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236536,"byte_end":236599,"line_start":765,"line_end":765,"column_start":5,"column_end":68}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236604,"byte_end":236665,"line_start":766,"line_end":766,"column_start":5,"column_end":66}},{"value":"/ [`WouldBlock`]: ../enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236670,"byte_end":236732,"line_start":767,"line_end":767,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237517,"byte_end":237521,"line_start":787,"line_end":787,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poller>::poll","value":"fn (&mut self, events: &mut Events, timeout: Period) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The poller will wait for events in the monitored elements,\n blocking until at least one event occurs, or the specified\n timeout `Period` expires.","sig":null,"attributes":[{"value":"/ The poller will wait for events in the monitored elements,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236848,"byte_end":236910,"line_start":772,"line_end":772,"column_start":5,"column_end":67}},{"value":"/ blocking until at least one event occurs, or the specified","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236915,"byte_end":236977,"line_start":773,"line_end":773,"column_start":5,"column_end":67}},{"value":"/ timeout `Period` expires.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":236982,"byte_end":237011,"line_start":774,"line_end":774,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237016,"byte_end":237019,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ If the specified `Period` is infinite, the poller will block forever","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237024,"byte_end":237096,"line_start":776,"line_end":776,"column_start":5,"column_end":77}},{"value":"/ until an event occurs.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237101,"byte_end":237127,"line_start":777,"line_end":777,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237132,"byte_end":237135,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237140,"byte_end":237161,"line_start":779,"line_end":779,"column_start":5,"column_end":26}},{"value":"/ * [`WouldBlock`] (timeout expired)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237166,"byte_end":237204,"line_start":780,"line_end":780,"column_start":5,"column_end":43}},{"value":"/ * [`InvalidCtx`] (`Ctx` of a polled socket was terminated)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237209,"byte_end":237271,"line_start":781,"line_end":781,"column_start":5,"column_end":67}},{"value":"/ * [`Interrupted`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237276,"byte_end":237297,"line_start":782,"line_end":782,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237302,"byte_end":237305,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ [`Interrupted`]: ../enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237310,"byte_end":237373,"line_start":784,"line_end":784,"column_start":5,"column_end":68}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237378,"byte_end":237439,"line_start":785,"line_end":785,"column_start":5,"column_end":66}},{"value":"/ [`WouldBlock`]: ../enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":237444,"byte_end":237505,"line_start":786,"line_end":786,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4491},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244449,"byte_end":244455,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"Client","qualname":"::socket::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":4492}],"decl_id":null,"docs":" A `Client` socket is used for advanced request-reply messaging.","sig":null,"attributes":[{"value":"/ A `Client` socket is used for advanced request-reply messaging.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":241940,"byte_end":242007,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242008,"byte_end":242011,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Client` sockets are threadsafe and can be used from multiple threads at the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242012,"byte_end":242092,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ same time. Note that replies from a `Server` socket will go to the first","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242093,"byte_end":242169,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ client thread that calls `recv`. If you need to get replies back to the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242170,"byte_end":242245,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ originating thread, use one `Client` socket per thread.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242246,"byte_end":242305,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242306,"byte_end":242309,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When a `Client` socket is connected to multiple sockets, outgoing","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242310,"byte_end":242379,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/ messages are distributed between connected peers on a round-robin basis.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242380,"byte_end":242456,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ Likewise, the `Client` socket receives messages fairly from each connected peer.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242457,"byte_end":242541,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242542,"byte_end":242545,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Mute State","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242546,"byte_end":242562,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ When `Client` socket enters the mute state due to having reached the high water","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242563,"byte_end":242646,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/ mark, or if there are no peers at all, then any send operations on the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242647,"byte_end":242721,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ socket shall block until the mute state ends or at least one peer becomes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242722,"byte_end":242799,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ available for sending; messages are not discarded.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242800,"byte_end":242854,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242855,"byte_end":242858,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Summary of Characteristics","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242859,"byte_end":242891,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/ | Characteristic            | Value                  |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242892,"byte_end":242950,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ |:-------------------------:|:----------------------:|","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":242951,"byte_end":243009,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/ | Compatible peer sockets   | [`Server`]             |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243010,"byte_end":243068,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/ | Direction                 | Bidirectional          |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243069,"byte_end":243127,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/ | Send/receive pattern      | Unrestricted           |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243128,"byte_end":243186,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ | Outgoing routing strategy | Round-robin            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243187,"byte_end":243245,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/ | Incoming routing strategy | Fair-queued            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243246,"byte_end":243304,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ | Action in mute state      | Block                  |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243305,"byte_end":243363,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243364,"byte_end":243367,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243368,"byte_end":243381,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243382,"byte_end":243389,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243390,"byte_end":243436,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243437,"byte_end":243469,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243470,"byte_end":243473,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Use a system assigned port.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243474,"byte_end":243508,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243509,"byte_end":243559,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243560,"byte_end":243563,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let server = ServerBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243564,"byte_end":243601,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/     .bind(addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243602,"byte_end":243621,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243622,"byte_end":243640,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243641,"byte_end":243644,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Retrieve the addr that was assigned.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243645,"byte_end":243688,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/ let bound = server.last_endpoint()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243689,"byte_end":243729,"line_start":47,"line_end":47,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243730,"byte_end":243733,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let client = ClientBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243734,"byte_end":243771,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/     .connect(bound)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243772,"byte_end":243795,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243796,"byte_end":243814,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243815,"byte_end":243818,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Send a string request.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243819,"byte_end":243848,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/ client.send(\"tell me something\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243849,"byte_end":243887,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243888,"byte_end":243891,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Receive the client request.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243892,"byte_end":243926,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ let msg = server.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243927,"byte_end":243960,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ let id = msg.routing_id().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":243961,"byte_end":244000,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244001,"byte_end":244004,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Reply to the client.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244005,"byte_end":244032,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/ server.route(\"it takes 224 bits to store a i32 in java\", id)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244033,"byte_end":244099,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244100,"byte_end":244103,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // We send as much replies as we want.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244104,"byte_end":244146,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/ server.route(\"also don't talk to me\", id)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244147,"byte_end":244194,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244195,"byte_end":244198,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // Retreive the first reply.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244199,"byte_end":244231,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ let mut msg = client.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244232,"byte_end":244269,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/ // And the second.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244270,"byte_end":244292,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"/ client.recv(&mut msg)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244293,"byte_end":244320,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244321,"byte_end":244326,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244327,"byte_end":244343,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244344,"byte_end":244351,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244352,"byte_end":244359,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244360,"byte_end":244363,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244364,"byte_end":244398,"line_start":75,"line_end":75,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244861,"byte_end":244864,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<Client>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Client` socket from the [`global context`]","sig":null,"attributes":[{"value":"/ Create a `Client` socket from the [`global context`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244506,"byte_end":244562,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244567,"byte_end":244570,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244575,"byte_end":244604,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244609,"byte_end":244629,"line_start":85,"line_end":85,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244634,"byte_end":244655,"line_start":86,"line_end":86,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244660,"byte_end":244663,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244668,"byte_end":244726,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244731,"byte_end":244791,"line_start":89,"line_end":89,"column_start":5,"column_end":65}},{"value":"/ [`global context`]: struct.Ctx.html#method.global","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244796,"byte_end":244849,"line_start":90,"line_end":90,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245333,"byte_end":245341,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<Client>::with_ctx","value":"fn (handle: CtxHandle) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Client` socket associated with a specific context\n from a `CtxHandle`.","sig":null,"attributes":[{"value":"/ Create a `Client` socket associated with a specific context","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245001,"byte_end":245064,"line_start":97,"line_end":97,"column_start":5,"column_end":68}},{"value":"/ from a `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245069,"byte_end":245092,"line_start":98,"line_end":98,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245097,"byte_end":245100,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245105,"byte_end":245134,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245139,"byte_end":245159,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245164,"byte_end":245185,"line_start":102,"line_end":102,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245190,"byte_end":245193,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245198,"byte_end":245256,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245261,"byte_end":245321,"line_start":105,"line_end":105,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245582,"byte_end":245585,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Client>::ctx","value":"fn (&self) -> CtxHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the handle to the `Ctx` of the socket.\n","sig":null,"attributes":[{"value":"/ Returns the handle to the `Ctx` of the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245520,"byte_end":245570,"line_start":113,"line_end":113,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4504},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246279,"byte_end":246291,"line_start":141,"line_end":141,"column_start":12,"column_end":24},"name":"ClientConfig","qualname":"::socket::client::ClientConfig","value":"ClientConfig {  }","parent":null,"children":[{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508}],"decl_id":null,"docs":" A configuration for a `Client`.","sig":null,"attributes":[{"value":"/ A configuration for a `Client`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245919,"byte_end":245954,"line_start":133,"line_end":133,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245955,"byte_end":245958,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Especially helpfull in config files.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245959,"byte_end":245999,"line_start":135,"line_end":135,"column_start":1,"column_end":41}},{"value":"serde(into = \"FlatClientConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246196,"byte_end":246231,"line_start":139,"line_end":139,"column_start":1,"column_end":36}},{"value":"serde(from = \"FlatClientConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246232,"byte_end":246267,"line_start":140,"line_end":140,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246461,"byte_end":246464,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientConfig>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246519,"byte_end":246524,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"build","qualname":"<ClientConfig>::build","value":"fn (&self) -> Result<Client, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246614,"byte_end":246622,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<ClientConfig>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Client, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246792,"byte_end":246797,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"apply","qualname":"<ClientConfig>::apply","value":"fn (&self, client: &Client) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4610},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250050,"byte_end":250063,"line_start":284,"line_end":284,"column_start":12,"column_end":25},"name":"ClientBuilder","qualname":"::socket::client::ClientBuilder","value":"ClientBuilder {  }","parent":null,"children":[{"krate":0,"index":4611}],"decl_id":null,"docs":" A builder for a `Client`.","sig":null,"attributes":[{"value":"/ A builder for a `Client`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249871,"byte_end":249900,"line_start":280,"line_end":280,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249901,"byte_end":249904,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ Allows for ergonomic one line socket configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249905,"byte_end":249960,"line_start":282,"line_end":282,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250126,"byte_end":250129,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250184,"byte_end":250189,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"build","qualname":"<ClientBuilder>::build","value":"fn (&self) -> Result<Client, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250269,"byte_end":250277,"line_start":297,"line_end":297,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<ClientBuilder>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Client, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4675},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255785,"byte_end":255789,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Dish","qualname":"::socket::dish::Dish","value":"Dish {  }","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677}],"decl_id":null,"docs":" A `Dish` socket is used by a subscriber to subscribe to groups distributed\n by a [`Radio`].","sig":null,"attributes":[{"value":"/ A `Dish` socket is used by a subscriber to subscribe to groups distributed","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253705,"byte_end":253783,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ by a [`Radio`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253784,"byte_end":253803,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253804,"byte_end":253807,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Initially a ZMQ_DISH socket is not subscribed to any groups, use [`join`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253808,"byte_end":253885,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ to join a group.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253886,"byte_end":253906,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253907,"byte_end":253910,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Summary of Characteristics","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253911,"byte_end":253943,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/ | Characteristic            | Value          |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253944,"byte_end":253994,"line_start":69,"line_end":69,"column_start":1,"column_end":51}},{"value":"/ |:-------------------------:|:--------------:|","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":253995,"byte_end":254045,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/ | Compatible peer sockets   | [`Radio`]      |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254046,"byte_end":254096,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/ | Direction                 | Unidirectional |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254097,"byte_end":254147,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/ | Send/receive pattern      | Receive only   |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254148,"byte_end":254198,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ | Incoming routing strategy | Fair-queued    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254199,"byte_end":254249,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/ | Outgoing routing strategy | N/A            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254250,"byte_end":254300,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254301,"byte_end":254304,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254305,"byte_end":254318,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254319,"byte_end":254326,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254327,"byte_end":254373,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254374,"byte_end":254406,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254407,"byte_end":254445,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254446,"byte_end":254449,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254450,"byte_end":254500,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254501,"byte_end":254504,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let radio = RadioBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254505,"byte_end":254540,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .bind(addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254541,"byte_end":254560,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254561,"byte_end":254579,"line_start":87,"line_end":87,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254580,"byte_end":254583,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ let bound = radio.last_endpoint()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254584,"byte_end":254623,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/ let a: Group = \"group a\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254624,"byte_end":254665,"line_start":90,"line_end":90,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254666,"byte_end":254669,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ let dish = DishBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254670,"byte_end":254703,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/     .connect(bound)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254704,"byte_end":254727,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/     .join(&a)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254728,"byte_end":254745,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254746,"byte_end":254764,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254765,"byte_end":254768,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // Start the feed. It has no conceptual start nor end, thus we","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254769,"byte_end":254835,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/ // don't synchronize with the subscribers.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254836,"byte_end":254882,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254883,"byte_end":254910,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/     let a: Group = \"group a\".try_into().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254911,"byte_end":254964,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/     let b: Group = \"group b\".try_into().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":254965,"byte_end":255018,"line_start":101,"line_end":101,"column_start":1,"column_end":54}},{"value":"/     let mut count = 0;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255019,"byte_end":255045,"line_start":102,"line_end":102,"column_start":1,"column_end":27}},{"value":"/     loop {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255046,"byte_end":255060,"line_start":103,"line_end":103,"column_start":1,"column_end":15}},{"value":"/         let mut msg = Msg::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255061,"byte_end":255098,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/         // Alternate between the two groups.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255099,"byte_end":255147,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/         let group = if count % 2 == 0 {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255148,"byte_end":255191,"line_start":106,"line_end":106,"column_start":1,"column_end":44}},{"value":"/             &a","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255192,"byte_end":255210,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/         } else {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255211,"byte_end":255231,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"/             &b","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255232,"byte_end":255250,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/         };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255251,"byte_end":255265,"line_start":110,"line_end":110,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255266,"byte_end":255269,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         radio.transmit(msg, group).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255270,"byte_end":255318,"line_start":112,"line_end":112,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255319,"byte_end":255322,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/         thread::sleep(Duration::from_millis(1));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255323,"byte_end":255375,"line_start":114,"line_end":114,"column_start":1,"column_end":53}},{"value":"/         count += 1;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255376,"byte_end":255399,"line_start":115,"line_end":115,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255400,"byte_end":255409,"line_start":116,"line_end":116,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255410,"byte_end":255417,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255418,"byte_end":255421,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ // The dish exclusively receives messages from the groups it joined.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255422,"byte_end":255494,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"/ let msg = dish.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255495,"byte_end":255526,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(msg.group().unwrap(), &a);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255527,"byte_end":255568,"line_start":121,"line_end":121,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255569,"byte_end":255572,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let msg = dish.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255573,"byte_end":255604,"line_start":123,"line_end":123,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(msg.group().unwrap(), &a);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255605,"byte_end":255646,"line_start":124,"line_end":124,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255647,"byte_end":255652,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255653,"byte_end":255669,"line_start":126,"line_end":126,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255670,"byte_end":255677,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255678,"byte_end":255685,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255686,"byte_end":255689,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ [`Radio`]: struct.Radio.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255690,"byte_end":255722,"line_start":130,"line_end":130,"column_start":1,"column_end":33}},{"value":"/ [`join`]: #method.join","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255723,"byte_end":255749,"line_start":131,"line_end":131,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256227,"byte_end":256230,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<Dish>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dish` socket from the [`global context`]","sig":null,"attributes":[{"value":"/ Create a `Dish` socket from the [`global context`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255874,"byte_end":255928,"line_start":139,"line_end":139,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255933,"byte_end":255936,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255941,"byte_end":255970,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255975,"byte_end":255995,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256000,"byte_end":256021,"line_start":143,"line_end":143,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256026,"byte_end":256029,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256034,"byte_end":256092,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256097,"byte_end":256157,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ [`global context`]: struct.Ctx.html#method.global","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256162,"byte_end":256215,"line_start":147,"line_end":147,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256752,"byte_end":256760,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<Dish>::with_ctx","value":"fn (handle: CtxHandle) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dish` socket associated with a specific context\n from a `CtxHandle`.","sig":null,"attributes":[{"value":"/ Create a `Dish` socket associated with a specific context","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256422,"byte_end":256483,"line_start":157,"line_end":157,"column_start":5,"column_end":66}},{"value":"/ from a `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256488,"byte_end":256511,"line_start":158,"line_end":158,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256516,"byte_end":256519,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256524,"byte_end":256553,"line_start":160,"line_end":160,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256558,"byte_end":256578,"line_start":161,"line_end":161,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256583,"byte_end":256604,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256609,"byte_end":256612,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256617,"byte_end":256675,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256680,"byte_end":256740,"line_start":165,"line_end":165,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257047,"byte_end":257050,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Dish>::ctx","value":"fn (&self) -> CtxHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the context of the socket.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the context of the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":256982,"byte_end":257035,"line_start":175,"line_end":175,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257894,"byte_end":257898,"line_start":205,"line_end":205,"column_start":12,"column_end":16},"name":"join","qualname":"<Dish>::join","value":"fn <G> (&self, group: G) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the specified group.","sig":null,"attributes":[{"value":"/ Joins the specified group.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257108,"byte_end":257138,"line_start":179,"line_end":179,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257143,"byte_end":257146,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257151,"byte_end":257171,"line_start":181,"line_end":181,"column_start":5,"column_end":25}},{"value":"/ * A group can be joined at most once.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257176,"byte_end":257217,"line_start":182,"line_end":182,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257222,"byte_end":257225,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257230,"byte_end":257259,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257264,"byte_end":257284,"line_start":185,"line_end":185,"column_start":5,"column_end":25}},{"value":"/ * [`Interrupted`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257289,"byte_end":257310,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/ * [`InvalidInput`] (if group was already joined)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257315,"byte_end":257367,"line_start":187,"line_end":187,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257372,"byte_end":257375,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257380,"byte_end":257393,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257398,"byte_end":257405,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257410,"byte_end":257456,"line_start":191,"line_end":191,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, Dish, Group};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257461,"byte_end":257503,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257508,"byte_end":257511,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let group: Group = \"some group\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257516,"byte_end":257564,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"/ let dish = Dish::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257569,"byte_end":257597,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ dish.join(group)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257602,"byte_end":257624,"line_start":196,"line_end":196,"column_start":5,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257629,"byte_end":257634,"line_start":197,"line_end":197,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257639,"byte_end":257655,"line_start":198,"line_end":198,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257660,"byte_end":257667,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257672,"byte_end":257679,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257684,"byte_end":257687,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257692,"byte_end":257750,"line_start":202,"line_end":202,"column_start":5,"column_end":63}},{"value":"/ [`Interrupted`]: enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257755,"byte_end":257815,"line_start":203,"line_end":203,"column_start":5,"column_end":65}},{"value":"/ [`InvalidInput`]: enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":257820,"byte_end":257882,"line_start":204,"line_end":204,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258737,"byte_end":258743,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"joined","qualname":"<Dish>::joined","value":"fn (&self) -> Vec<Group>","parent":null,"children":[],"decl_id":null,"docs":" Returns a snapshot of the list of joined groups.","sig":null,"attributes":[{"value":"/ Returns a snapshot of the list of joined groups.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258175,"byte_end":258227,"line_start":216,"line_end":216,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258232,"byte_end":258235,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The list might be modified by another thread after it is returned.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258240,"byte_end":258310,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258315,"byte_end":258318,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258323,"byte_end":258336,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258341,"byte_end":258348,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258353,"byte_end":258399,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, Dish, Group};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258404,"byte_end":258446,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258451,"byte_end":258454,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ let first: Group = \"group name\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258459,"byte_end":258507,"line_start":225,"line_end":225,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258512,"byte_end":258515,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let dish = Dish::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258520,"byte_end":258548,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/ assert!(dish.joined().is_empty());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258553,"byte_end":258591,"line_start":228,"line_end":228,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258596,"byte_end":258599,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ dish.join(first)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258604,"byte_end":258626,"line_start":230,"line_end":230,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dish.joined().len(), 1);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258631,"byte_end":258670,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258675,"byte_end":258680,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258685,"byte_end":258701,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258706,"byte_end":258713,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258718,"byte_end":258725,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259796,"byte_end":259801,"line_start":272,"line_end":272,"column_start":12,"column_end":17},"name":"leave","qualname":"<Dish>::leave","value":"fn <G> (&self, group: G) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Leave the specified group.","sig":null,"attributes":[{"value":"/ Leave the specified group.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258825,"byte_end":258855,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258860,"byte_end":258863,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Usage Contract","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258868,"byte_end":258888,"line_start":242,"line_end":242,"column_start":5,"column_end":25}},{"value":"/ * The group must be already joined.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258893,"byte_end":258932,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258937,"byte_end":258940,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258945,"byte_end":258974,"line_start":245,"line_end":245,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":258979,"byte_end":258999,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/ * [`Interrupted`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259004,"byte_end":259025,"line_start":247,"line_end":247,"column_start":5,"column_end":26}},{"value":"/ * [`InvalidInput`] (if group not already joined)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259030,"byte_end":259082,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259087,"byte_end":259090,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259095,"byte_end":259108,"line_start":250,"line_end":250,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259113,"byte_end":259120,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259125,"byte_end":259171,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/ use libzmq::{prelude::*, Dish, Group};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259176,"byte_end":259218,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259223,"byte_end":259226,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let group: Group = \"some group\".to_owned().try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259231,"byte_end":259290,"line_start":255,"line_end":255,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259295,"byte_end":259298,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let dish = Dish::new()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259303,"byte_end":259331,"line_start":257,"line_end":257,"column_start":5,"column_end":33}},{"value":"/ assert!(dish.joined().is_empty());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259336,"byte_end":259374,"line_start":258,"line_end":258,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259379,"byte_end":259382,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ dish.join(&group)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259387,"byte_end":259410,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(dish.joined().len(), 1);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259415,"byte_end":259454,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259459,"byte_end":259462,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ dish.leave(&group)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259467,"byte_end":259491,"line_start":263,"line_end":263,"column_start":5,"column_end":29}},{"value":"/ assert!(dish.joined().is_empty());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259496,"byte_end":259534,"line_start":264,"line_end":264,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259539,"byte_end":259544,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259549,"byte_end":259565,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259570,"byte_end":259577,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259582,"byte_end":259589,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259594,"byte_end":259652,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/ [`Interrupted`]: enum.ErrorKind.html#variant.Interrupted","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259657,"byte_end":259717,"line_start":270,"line_end":270,"column_start":5,"column_end":65}},{"value":"/ [`InvalidInput`]: enum.ErrorKind.html#variant.InvalidInput","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":259722,"byte_end":259784,"line_start":271,"line_end":271,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4682},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260854,"byte_end":260864,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"DishConfig","qualname":"::socket::dish::DishConfig","value":"DishConfig {  }","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685}],"decl_id":null,"docs":" A configuration for a `Dish`.","sig":null,"attributes":[{"value":"/ A configuration for a `Dish`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260501,"byte_end":260534,"line_start":307,"line_end":307,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260535,"byte_end":260538,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ Especially helpfull in config files.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260539,"byte_end":260579,"line_start":309,"line_end":309,"column_start":1,"column_end":41}},{"value":"serde(from = \"FlatDishConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260775,"byte_end":260808,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"serde(into = \"FlatDishConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260809,"byte_end":260842,"line_start":314,"line_end":314,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260993,"byte_end":260996,"line_start":322,"line_end":322,"column_start":12,"column_end":15},"name":"new","qualname":"<DishConfig>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":261051,"byte_end":261056,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"build","qualname":"<DishConfig>::build","value":"fn (&self) -> Result<Dish, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":261144,"byte_end":261152,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<DishConfig>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Dish, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":261312,"byte_end":261318,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"name":"groups","qualname":"<DishConfig>::groups","value":"fn (&self) -> Option<&[Group]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":261397,"byte_end":261407,"line_start":341,"line_end":341,"column_start":12,"column_end":22},"name":"set_groups","qualname":"<DishConfig>::set_groups","value":"fn <I> (&mut self, maybe_groups: Option<I>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":261618,"byte_end":261623,"line_start":349,"line_end":349,"column_start":12,"column_end":17},"name":"apply","qualname":"<DishConfig>::apply","value":"fn (&self, dish: &Dish) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4781},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263822,"byte_end":263833,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"DishBuilder","qualname":"::socket::dish::DishBuilder","value":"DishBuilder {  }","parent":null,"children":[{"krate":0,"index":4782}],"decl_id":null,"docs":" A builder for a `Dish`.","sig":null,"attributes":[{"value":"/ A builder for a `Dish`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263645,"byte_end":263672,"line_start":429,"line_end":429,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263673,"byte_end":263676,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Allows for ergonomic one line socket configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263677,"byte_end":263732,"line_start":431,"line_end":431,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263892,"byte_end":263895,"line_start":438,"line_end":438,"column_start":12,"column_end":15},"name":"new","qualname":"<DishBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263950,"byte_end":263955,"line_start":442,"line_end":442,"column_start":12,"column_end":17},"name":"build","qualname":"<DishBuilder>::build","value":"fn (&self) -> Result<Dish, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264033,"byte_end":264041,"line_start":446,"line_end":446,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<DishBuilder>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Dish, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264147,"byte_end":264151,"line_start":450,"line_end":450,"column_start":12,"column_end":16},"name":"join","qualname":"<DishBuilder>::join","value":"fn <I, G> (&mut self, groups: I) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4846},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268529,"byte_end":268535,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"Gather","qualname":"::socket::gather::Gather","value":"Gather {  }","parent":null,"children":[{"krate":0,"index":4847}],"decl_id":null,"docs":" A `Gather` socket is used to receive pipelined messages.","sig":null,"attributes":[{"value":"/ A `Gather` socket is used to receive pipelined messages.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":266753,"byte_end":266813,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":266814,"byte_end":266817,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Messages are fair-queued from among all connected [`Scatter`] sockets.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":266818,"byte_end":266892,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":266893,"byte_end":266896,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Summary of Characteristics","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":266897,"byte_end":266929,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/ | Characteristic            | Value                  |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":266930,"byte_end":266988,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/ |:-------------------------:|:----------------------:|","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":266989,"byte_end":267047,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ | Compatible peer sockets   | [`Scatter`]            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267048,"byte_end":267106,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/ | Direction                 | Unidirectional         |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267107,"byte_end":267165,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ | Send/receive pattern      | Receive only           |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267166,"byte_end":267224,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ | Outgoing routing strategy | Round-robin            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267225,"byte_end":267283,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ | Incoming routing strategy | Fair-queued            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267284,"byte_end":267342,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ | Action in mute state      | Block                  |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267343,"byte_end":267401,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267402,"byte_end":267405,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267406,"byte_end":267419,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267420,"byte_end":267427,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267428,"byte_end":267474,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267475,"byte_end":267507,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267508,"byte_end":267511,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let addr_a = InprocAddr::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267512,"byte_end":267554,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ let addr_b = InprocAddr::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267555,"byte_end":267597,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267598,"byte_end":267601,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Create our two load balancers.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267602,"byte_end":267639,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/ let lb_a = ScatterBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267640,"byte_end":267676,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/     .bind(&addr_a)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267677,"byte_end":267699,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267700,"byte_end":267718,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ let lb_b = ScatterBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267719,"byte_end":267755,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/     .bind(&addr_b)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267756,"byte_end":267778,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267779,"byte_end":267797,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267798,"byte_end":267801,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Connect the worker to both load balancers.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267802,"byte_end":267851,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ let worker = GatherBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267852,"byte_end":267889,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/     .connect(&[addr_a, addr_b])","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267890,"byte_end":267925,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/     .recv_hwm(1)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267926,"byte_end":267946,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267947,"byte_end":267965,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267966,"byte_end":267969,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267970,"byte_end":267991,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/     lb_a.try_send(\"a\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":267992,"byte_end":268020,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268021,"byte_end":268026,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268027,"byte_end":268048,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     lb_b.try_send(\"b\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268049,"byte_end":268077,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268078,"byte_end":268083,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268084,"byte_end":268087,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // The messages received should be fair-queues from","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268088,"byte_end":268143,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/ // our two load balancers.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268144,"byte_end":268174,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ let mut msg = Msg::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268175,"byte_end":268204,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/ for i in 0..200 {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268205,"byte_end":268226,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     worker.try_recv(&mut msg)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268227,"byte_end":268262,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/     if i % 2 == 0 {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268263,"byte_end":268286,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/         assert_eq!(msg.to_str(), Ok(\"a\"));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268287,"byte_end":268333,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/     } else {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268334,"byte_end":268350,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/         assert_eq!(msg.to_str(), Ok(\"b\"));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268351,"byte_end":268397,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268398,"byte_end":268407,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268408,"byte_end":268413,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268414,"byte_end":268419,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268420,"byte_end":268436,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268437,"byte_end":268444,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268445,"byte_end":268452,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268453,"byte_end":268456,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`Scatter`]: struct.Scatter.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268457,"byte_end":268493,"line_start":66,"line_end":66,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268941,"byte_end":268944,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Gather>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Gather` socket from the [`global context`]","sig":null,"attributes":[{"value":"/ Create a `Gather` socket from the [`global context`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268586,"byte_end":268642,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268647,"byte_end":268650,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268655,"byte_end":268684,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268689,"byte_end":268709,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268714,"byte_end":268735,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268740,"byte_end":268743,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268748,"byte_end":268806,"line_start":79,"line_end":79,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268811,"byte_end":268871,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/ [`global context`]: struct.Ctx.html#method.global","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268876,"byte_end":268929,"line_start":81,"line_end":81,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269413,"byte_end":269421,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<Gather>::with_ctx","value":"fn (handle: CtxHandle) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Gather` socket associated with a specific context\n from a `CtxHandle`.","sig":null,"attributes":[{"value":"/ Create a `Gather` socket associated with a specific context","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269081,"byte_end":269144,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ from a `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269149,"byte_end":269172,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269177,"byte_end":269180,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269185,"byte_end":269214,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269219,"byte_end":269239,"line_start":92,"line_end":92,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269244,"byte_end":269265,"line_start":93,"line_end":93,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269270,"byte_end":269273,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269278,"byte_end":269336,"line_start":95,"line_end":95,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269341,"byte_end":269401,"line_start":96,"line_end":96,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269662,"byte_end":269665,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Gather>::ctx","value":"fn (&self) -> CtxHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the context of the socket.\n","sig":null,"attributes":[{"value":"/ Returns a handle to the context of the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269600,"byte_end":269650,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4852},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270467,"byte_end":270479,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"GatherConfig","qualname":"::socket::gather::GatherConfig","value":"GatherConfig {  }","parent":null,"children":[{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855}],"decl_id":null,"docs":" A configuration for a `Gather`.","sig":null,"attributes":[{"value":"/ A configuration for a `Gather`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270109,"byte_end":270144,"line_start":131,"line_end":131,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270145,"byte_end":270148,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Especially helpful in config files.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270149,"byte_end":270188,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"serde(from = \"FlatGatherConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270384,"byte_end":270419,"line_start":137,"line_end":137,"column_start":1,"column_end":36}},{"value":"serde(into = \"FlatGatherConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270420,"byte_end":270455,"line_start":138,"line_end":138,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270620,"byte_end":270623,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<GatherConfig>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270678,"byte_end":270683,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"build","qualname":"<GatherConfig>::build","value":"fn (&self) -> Result<Gather, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270773,"byte_end":270781,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<GatherConfig>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Gather, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270951,"byte_end":270956,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"apply","qualname":"<GatherConfig>::apply","value":"fn (&self, gather: &Gather) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4951},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273519,"byte_end":273532,"line_start":256,"line_end":256,"column_start":12,"column_end":25},"name":"GatherBuilder","qualname":"::socket::gather::GatherBuilder","value":"GatherBuilder {  }","parent":null,"children":[{"krate":0,"index":4952}],"decl_id":null,"docs":" A builder for a `Gather`.","sig":null,"attributes":[{"value":"/ A builder for a `Gather`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273340,"byte_end":273369,"line_start":252,"line_end":252,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273370,"byte_end":273373,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ Allows for ergonomic one line socket configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273374,"byte_end":273429,"line_start":254,"line_end":254,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273595,"byte_end":273598,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"new","qualname":"<GatherBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273653,"byte_end":273658,"line_start":265,"line_end":265,"column_start":12,"column_end":17},"name":"build","qualname":"<GatherBuilder>::build","value":"fn (&self) -> Result<Gather, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273738,"byte_end":273746,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<GatherBuilder>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Gather, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5016},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279112,"byte_end":279117,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"Radio","qualname":"::socket::radio::Radio","value":"Radio {  }","parent":null,"children":[{"krate":0,"index":5017}],"decl_id":null,"docs":" A `Radio` socket is used by a publisher to distribute data to [`Dish`]\n sockets.","sig":null,"attributes":[{"value":"/ A `Radio` socket is used by a publisher to distribute data to [`Dish`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276408,"byte_end":276482,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ sockets.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276483,"byte_end":276495,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276496,"byte_end":276499,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each message sent belong to a group. By default, the group is \"\".","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276500,"byte_end":276569,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ This group can be specified by using [`set_group`] or using the convenience","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276570,"byte_end":276649,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ method [`transmit`]. Messages are distributed to all members of a group.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276650,"byte_end":276726,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276727,"byte_end":276730,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Mute State","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276731,"byte_end":276747,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/ When a `Radio` socket enters the mute state due to having reached the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276748,"byte_end":276821,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ high water mark for a subscriber, then any messages that would be sent to","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276822,"byte_end":276899,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the subscriber in question shall instead be dropped until the mute state ends.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276900,"byte_end":276982,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276983,"byte_end":276986,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Summary of Characteristics","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":276987,"byte_end":277019,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/ | Characteristic            | Value          |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277020,"byte_end":277070,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ |:-------------------------:|:--------------:|","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277071,"byte_end":277121,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ | Compatible peer sockets   | [`Dish`]       |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277122,"byte_end":277172,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ | Direction                 | Unidirectional |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277173,"byte_end":277223,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/ | Send/receive pattern      | Send only      |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277224,"byte_end":277274,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ | Incoming routing strategy | N/A            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277275,"byte_end":277325,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ | Outgoing routing strategy | Fan out        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277326,"byte_end":277376,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/ | Action in mute state      | Drop           |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277377,"byte_end":277427,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277428,"byte_end":277431,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277432,"byte_end":277445,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277446,"byte_end":277453,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277454,"byte_end":277500,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277501,"byte_end":277533,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277534,"byte_end":277572,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277573,"byte_end":277576,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277577,"byte_end":277627,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277628,"byte_end":277631,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let radio = RadioBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277632,"byte_end":277667,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/     .bind(addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277668,"byte_end":277687,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277688,"byte_end":277706,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277707,"byte_end":277710,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let bound = radio.last_endpoint()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277711,"byte_end":277750,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ let a: Group = \"A\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277751,"byte_end":277786,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/ let b: Group = \"B\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277787,"byte_end":277822,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277823,"byte_end":277826,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let dish_a = DishBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277827,"byte_end":277862,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/     .connect(&bound)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277863,"byte_end":277887,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/     .join(&a)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277888,"byte_end":277905,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277906,"byte_end":277924,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277925,"byte_end":277928,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let dish_b = DishBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277929,"byte_end":277964,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/     .connect(bound)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277965,"byte_end":277988,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/     .join(&b)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":277989,"byte_end":278006,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278007,"byte_end":278025,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278026,"byte_end":278029,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // Start the feed. It has no conceptual start nor end, thus we","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278030,"byte_end":278096,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/ // don't synchronize with the subscribers.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278097,"byte_end":278143,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278144,"byte_end":278171,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/     let a: Group = \"A\".try_into().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278172,"byte_end":278219,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/     let b: Group = \"B\".try_into().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278220,"byte_end":278267,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/     let mut count = 0;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278268,"byte_end":278294,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/     loop {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278295,"byte_end":278309,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/         let msg = Msg::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278310,"byte_end":278343,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/         // Alternate between the two groups.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278344,"byte_end":278392,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/         let group = if count % 2 == 0 {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278393,"byte_end":278436,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/             &a","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278437,"byte_end":278455,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/         } else {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278456,"byte_end":278476,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/             &b","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278477,"byte_end":278495,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/         };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278496,"byte_end":278510,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278511,"byte_end":278514,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/         radio.transmit(msg, group).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278515,"byte_end":278563,"line_start":70,"line_end":70,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278564,"byte_end":278567,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/         thread::sleep(Duration::from_millis(1));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278568,"byte_end":278620,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"/         count += 1;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278621,"byte_end":278644,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278645,"byte_end":278654,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278655,"byte_end":278662,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278663,"byte_end":278666,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // Each dish will only receive the messages from their respective groups.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278667,"byte_end":278744,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ let msg = dish_a.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278745,"byte_end":278778,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(msg.group().unwrap(), &a);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278779,"byte_end":278820,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278821,"byte_end":278824,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let msg = dish_b.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278825,"byte_end":278858,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(msg.group().unwrap(), &b);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278859,"byte_end":278900,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278901,"byte_end":278906,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278907,"byte_end":278923,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278924,"byte_end":278931,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278932,"byte_end":278939,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278940,"byte_end":278943,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`Dish`]: struct.Dish.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278944,"byte_end":278974,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ [`set_group`]: struct.Msg.html#method.set_group","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":278975,"byte_end":279026,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"/ [`transmit`]: #method.transmit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279027,"byte_end":279061,"line_start":90,"line_end":90,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279521,"byte_end":279524,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<Radio>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Radio` socket from the [`global context`]","sig":null,"attributes":[{"value":"/ Create a `Radio` socket from the [`global context`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279167,"byte_end":279222,"line_start":97,"line_end":97,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279227,"byte_end":279230,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279235,"byte_end":279264,"line_start":99,"line_end":99,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279269,"byte_end":279289,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279294,"byte_end":279315,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279320,"byte_end":279323,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279328,"byte_end":279386,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279391,"byte_end":279451,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/ [`global context`]: struct.Ctx.html#method.global","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279456,"byte_end":279509,"line_start":105,"line_end":105,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279991,"byte_end":279999,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<Radio>::with_ctx","value":"fn (handle: CtxHandle) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Radio` socket associated with a specific context\n from a `CtxHandle`.","sig":null,"attributes":[{"value":"/ Create a `Radio` socket associated with a specific context","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279660,"byte_end":279722,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ from a `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279727,"byte_end":279750,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279755,"byte_end":279758,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279763,"byte_end":279792,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279797,"byte_end":279817,"line_start":116,"line_end":116,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279822,"byte_end":279843,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279848,"byte_end":279851,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279856,"byte_end":279914,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279919,"byte_end":279979,"line_start":120,"line_end":120,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280242,"byte_end":280245,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Radio>::ctx","value":"fn (&self) -> CtxHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the context of the socket.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the context of the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280177,"byte_end":280230,"line_start":128,"line_end":128,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280366,"byte_end":280373,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"no_drop","qualname":"<Radio>::no_drop","value":"fn (&self) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `no_drop` option is set.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `no_drop` option is set.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280304,"byte_end":280354,"line_start":133,"line_end":133,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280715,"byte_end":280726,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"set_no_drop","qualname":"<Radio>::set_no_drop","value":"fn (&self, enabled: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the socket's behaviour to block instead of drop messages when\n in the `mute state`.","sig":null,"attributes":[{"value":"/ Sets the socket's behaviour to block instead of drop messages when","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280446,"byte_end":280516,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ in the `mute state`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280521,"byte_end":280545,"line_start":139,"line_end":139,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280550,"byte_end":280553,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Default value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280558,"byte_end":280577,"line_start":141,"line_end":141,"column_start":5,"column_end":24}},{"value":"/ `false`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280582,"byte_end":280593,"line_start":142,"line_end":142,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280598,"byte_end":280601,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: enum.ErrorKind.html#variant.WouldBlock","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280606,"byte_end":280664,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ [`send_hwm`]: #method.send_hwm","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280669,"byte_end":280703,"line_start":145,"line_end":145,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281124,"byte_end":281132,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"transmit","qualname":"<Radio>::transmit","value":"fn <M, G> (&self, msg: M, group: G) -> Result<(), Error<Msg>>","parent":null,"children":[],"decl_id":null,"docs":" Push a message into the outgoing socket queue with the specified group.","sig":null,"attributes":[{"value":"/ Push a message into the outgoing socket queue with the specified group.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280823,"byte_end":280898,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280903,"byte_end":280906,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that sets the `Msg`'s group then","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280911,"byte_end":280978,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/ sends it.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":280983,"byte_end":280996,"line_start":153,"line_end":153,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281001,"byte_end":281004,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ See [`send`] for more information.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281009,"byte_end":281047,"line_start":155,"line_end":155,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281052,"byte_end":281055,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`send`]: prelude/trait.SendMsg.html#method.send","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281060,"byte_end":281112,"line_start":157,"line_end":157,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281690,"byte_end":281702,"line_start":177,"line_end":177,"column_start":12,"column_end":24},"name":"try_transmit","qualname":"<Radio>::try_transmit","value":"fn <M, G> (&self, msg: M, group: G) -> Result<(), Error<Msg>>","parent":null,"children":[],"decl_id":null,"docs":" Try to push a message into the outgoing socket queue with the specified\n group.","sig":null,"attributes":[{"value":"/ Try to push a message into the outgoing socket queue with the specified","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281356,"byte_end":281431,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ group.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281436,"byte_end":281446,"line_start":169,"line_end":169,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281451,"byte_end":281454,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that sets the `Msg`'s group then","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281459,"byte_end":281526,"line_start":171,"line_end":171,"column_start":5,"column_end":72}},{"value":"/ tries sends it.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281531,"byte_end":281550,"line_start":172,"line_end":172,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281555,"byte_end":281558,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ See [`try_send`] for more information.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281563,"byte_end":281605,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281610,"byte_end":281613,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`try_send`]: prelude/trait.SendMsg.html#method.try_send","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281618,"byte_end":281678,"line_start":176,"line_end":176,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":5029},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282380,"byte_end":282391,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"RadioConfig","qualname":"::socket::radio::RadioConfig","value":"RadioConfig {  }","parent":null,"children":[{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5032}],"decl_id":null,"docs":" A configuration for a `Radio`.","sig":null,"attributes":[{"value":"/ A configuration for a `Radio`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282141,"byte_end":282175,"line_start":200,"line_end":200,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282176,"byte_end":282179,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Especially helpfull in config files.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282180,"byte_end":282220,"line_start":202,"line_end":202,"column_start":1,"column_end":41}},{"value":"serde(from = \"FlatRadioConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282299,"byte_end":282333,"line_start":204,"line_end":204,"column_start":1,"column_end":35}},{"value":"serde(into = \"FlatRadioConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282334,"byte_end":282368,"line_start":205,"line_end":205,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282516,"byte_end":282519,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<RadioConfig>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282574,"byte_end":282579,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"name":"build","qualname":"<RadioConfig>::build","value":"fn (&self) -> Result<Radio, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282668,"byte_end":282676,"line_start":221,"line_end":221,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<RadioConfig>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Radio, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282896,"byte_end":282903,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"no_drop","qualname":"<RadioConfig>::no_drop","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `no_drop` option is set.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `no_drop` option is set.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282834,"byte_end":282884,"line_start":228,"line_end":228,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":283035,"byte_end":283046,"line_start":234,"line_end":234,"column_start":12,"column_end":23},"name":"set_no_drop","qualname":"<RadioConfig>::set_no_drop","value":"fn (&mut self, cond: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `no_drop` option is set.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `no_drop` option is set.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282973,"byte_end":283023,"line_start":233,"line_end":233,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":283125,"byte_end":283130,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"apply","qualname":"<RadioConfig>::apply","value":"fn (&self, radio: &Radio) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5126},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285419,"byte_end":285431,"line_start":324,"line_end":324,"column_start":12,"column_end":24},"name":"RadioBuilder","qualname":"::socket::radio::RadioBuilder","value":"RadioBuilder {  }","parent":null,"children":[{"krate":0,"index":5127}],"decl_id":null,"docs":" A builder for a `Radio`.","sig":null,"attributes":[{"value":"/ A builder for a `Radio`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285265,"byte_end":285293,"line_start":320,"line_end":320,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285294,"byte_end":285297,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ Allows for ergonomic one line socket configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285298,"byte_end":285353,"line_start":322,"line_end":322,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285492,"byte_end":285495,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<RadioBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285550,"byte_end":285557,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"no_drop","qualname":"<RadioBuilder>::no_drop","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285653,"byte_end":285658,"line_start":338,"line_end":338,"column_start":12,"column_end":17},"name":"build","qualname":"<RadioBuilder>::build","value":"fn (&self) -> Result<Radio, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285737,"byte_end":285745,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<RadioBuilder>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Radio, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5144},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288365,"byte_end":288372,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Scatter","qualname":"::socket::scatter::Scatter","value":"Scatter {  }","parent":null,"children":[{"krate":0,"index":5145}],"decl_id":null,"docs":" A `Scatter` socket is used to pipeline messages to workers.","sig":null,"attributes":[{"value":"/ A `Scatter` socket is used to pipeline messages to workers.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":286802,"byte_end":286865,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":286866,"byte_end":286869,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Messages are round-robined to all connected [`Gather`] sockets.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":286870,"byte_end":286937,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":286938,"byte_end":286941,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Summary of Characteristics","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":286942,"byte_end":286974,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/ | Characteristic            | Value                  |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":286975,"byte_end":287033,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/ |:-------------------------:|:----------------------:|","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287034,"byte_end":287092,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ | Compatible peer sockets   | [`Gather`]             |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287093,"byte_end":287151,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/ | Direction                 | Unidirectional         |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287152,"byte_end":287210,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ | Send/receive pattern      | Send only              |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287211,"byte_end":287269,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ | Outgoing routing strategy | Round-robin            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287270,"byte_end":287328,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ | Incoming routing strategy | Fair-queued            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287329,"byte_end":287387,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ | Action in mute state      | Block                  |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287388,"byte_end":287446,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287447,"byte_end":287450,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287451,"byte_end":287464,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287465,"byte_end":287472,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287473,"byte_end":287519,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287520,"byte_end":287552,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287553,"byte_end":287581,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287582,"byte_end":287585,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let addr = InprocAddr::new_unique();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287586,"byte_end":287626,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287627,"byte_end":287630,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Our load balancing producer.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287631,"byte_end":287666,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/ let lb = ScatterBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287667,"byte_end":287701,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/     .bind(&addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287702,"byte_end":287722,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287723,"byte_end":287741,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287742,"byte_end":287745,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let worker_a = GatherBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287746,"byte_end":287785,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/     .connect(&addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287786,"byte_end":287809,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/     .recv_hwm(1)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287810,"byte_end":287830,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/     .recv_timeout(Duration::from_millis(100))","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287831,"byte_end":287880,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287881,"byte_end":287899,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287900,"byte_end":287903,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let worker_b = GatherBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287904,"byte_end":287943,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     .connect(&addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287944,"byte_end":287967,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/     .recv_hwm(1)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287968,"byte_end":287988,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"/     .recv_timeout(Duration::from_millis(100))","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":287989,"byte_end":288038,"line_start":43,"line_end":43,"column_start":1,"column_end":50}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288039,"byte_end":288057,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288058,"byte_end":288061,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Send messages to workers in a round-robin fashion.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288062,"byte_end":288119,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ lb.send(\"\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288120,"byte_end":288137,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/ lb.send(\"\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288138,"byte_end":288155,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288156,"byte_end":288159,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ assert!(worker_a.recv_msg()?.is_empty());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288160,"byte_end":288205,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/ assert!(worker_b.recv_msg()?.is_empty());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288206,"byte_end":288251,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288252,"byte_end":288257,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288258,"byte_end":288274,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288275,"byte_end":288282,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288283,"byte_end":288290,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288291,"byte_end":288294,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Gather`]: struct.Gather.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288295,"byte_end":288329,"line_start":57,"line_end":57,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288780,"byte_end":288783,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<Scatter>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Scatter` socket from the [`global context`]","sig":null,"attributes":[{"value":"/ Create a `Scatter` socket from the [`global context`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288424,"byte_end":288481,"line_start":64,"line_end":64,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288486,"byte_end":288489,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288494,"byte_end":288523,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288528,"byte_end":288548,"line_start":67,"line_end":67,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288553,"byte_end":288574,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288579,"byte_end":288582,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288587,"byte_end":288645,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288650,"byte_end":288710,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/ [`global context`]: struct.Ctx.html#method.global","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288715,"byte_end":288768,"line_start":72,"line_end":72,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289254,"byte_end":289262,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<Scatter>::with_ctx","value":"fn (handle: CtxHandle) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Scatter` socket associated with a specific context\n from a `CtxHandle`.","sig":null,"attributes":[{"value":"/ Create a `Scatter` socket associated with a specific context","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288921,"byte_end":288985,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/ from a `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288990,"byte_end":289013,"line_start":80,"line_end":80,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289018,"byte_end":289021,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289026,"byte_end":289055,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289060,"byte_end":289080,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289085,"byte_end":289106,"line_start":84,"line_end":84,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289111,"byte_end":289114,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289119,"byte_end":289177,"line_start":86,"line_end":86,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289182,"byte_end":289242,"line_start":87,"line_end":87,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289504,"byte_end":289507,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Scatter>::ctx","value":"fn (&self) -> CtxHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the context of the socket.\n","sig":null,"attributes":[{"value":"/ Returns a handle to the context of the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289442,"byte_end":289492,"line_start":95,"line_end":95,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5150},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290322,"byte_end":290335,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"ScatterConfig","qualname":"::socket::scatter::ScatterConfig","value":"ScatterConfig {  }","parent":null,"children":[{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153}],"decl_id":null,"docs":" A configuration for a `Scatter`.","sig":null,"attributes":[{"value":"/ A configuration for a `Scatter`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289960,"byte_end":289996,"line_start":122,"line_end":122,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289997,"byte_end":290000,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Especially helpfull in config files.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290001,"byte_end":290041,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"serde(from = \"FlatScatterConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290237,"byte_end":290273,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"serde(into = \"FlatScatterConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290274,"byte_end":290310,"line_start":129,"line_end":129,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290477,"byte_end":290480,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<ScatterConfig>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290535,"byte_end":290540,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"build","qualname":"<ScatterConfig>::build","value":"fn (&self) -> Result<Scatter, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290631,"byte_end":290639,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<ScatterConfig>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Scatter, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290814,"byte_end":290819,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"apply","qualname":"<ScatterConfig>::apply","value":"fn (&self, scatter: &Scatter) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5249},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293400,"byte_end":293414,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"ScatterBuilder","qualname":"::socket::scatter::ScatterBuilder","value":"ScatterBuilder {  }","parent":null,"children":[{"krate":0,"index":5250}],"decl_id":null,"docs":" A builder for a `Scatter`.","sig":null,"attributes":[{"value":"/ A builder for a `Scatter`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293220,"byte_end":293250,"line_start":243,"line_end":243,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293251,"byte_end":293254,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ Allows for ergonomic one line socket configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293255,"byte_end":293310,"line_start":245,"line_end":245,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293479,"byte_end":293482,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"new","qualname":"<ScatterBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293537,"byte_end":293542,"line_start":256,"line_end":256,"column_start":12,"column_end":17},"name":"build","qualname":"<ScatterBuilder>::build","value":"fn (&self) -> Result<Scatter, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293623,"byte_end":293631,"line_start":260,"line_end":260,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<ScatterBuilder>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Scatter, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5314},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298810,"byte_end":298816,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Server","qualname":"::socket::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":5315}],"decl_id":null,"docs":" A `Server` socket is a socket used for advanced request-reply messaging.","sig":null,"attributes":[{"value":"/ A `Server` socket is a socket used for advanced request-reply messaging.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":295873,"byte_end":295949,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":295950,"byte_end":295953,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A `Server` socket talks to a set of [`Client`] sockets. The [`Client`] must","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":295954,"byte_end":296033,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ first initiate the conversation, which generates a [`routing_id`] associated","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296034,"byte_end":296114,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ with the connection. Each message received from a `Server` will have this","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296115,"byte_end":296192,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ [`routing_id`]. To send messages back to the server, you must associate them","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296193,"byte_end":296273,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ to a `RoutingId` either manually using [`set_routing_id`] or via the [`route`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296274,"byte_end":296356,"line_start":13,"line_end":13,"column_start":1,"column_end":83}},{"value":"/ convenience method. If the [`routing_id`] is not specified, or","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296357,"byte_end":296423,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ does not refer to a connected server peer, the send call will fail with","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296424,"byte_end":296499,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ [`HostUnreachable`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296500,"byte_end":296524,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296525,"byte_end":296528,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Mute State","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296529,"byte_end":296545,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ When a `Server` socket enters the mute state due to having reached the high","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296546,"byte_end":296625,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ water mark for all servers, or if there are no servers at","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296626,"byte_end":296687,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ all, then any `send` operations on the socket shall block until the mute","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296688,"byte_end":296764,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ state ends or at least one downstream node becomes available for sending;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296765,"byte_end":296842,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ messages are not discarded.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296843,"byte_end":296874,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296875,"byte_end":296878,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Summary of Characteristics","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296879,"byte_end":296911,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ | Characteristic            | Value                  |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296912,"byte_end":296970,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/ |:-------------------------:|:----------------------:|","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":296971,"byte_end":297029,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/ | Compatible peer sockets   | [`Server`]             |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297030,"byte_end":297088,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/ | Direction                 | Bidirectional          |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297089,"byte_end":297147,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ | Pattern                   | Unrestricted           |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297148,"byte_end":297206,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/ | Incoming routing strategy | Fair-queued            |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297207,"byte_end":297265,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ | Outgoing routing strategy | See text               |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297266,"byte_end":297324,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ | Action in mute state      | Block                  |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297325,"byte_end":297383,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297384,"byte_end":297387,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297388,"byte_end":297401,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297402,"byte_end":297409,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297410,"byte_end":297456,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297457,"byte_end":297489,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297490,"byte_end":297493,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr: TcpAddr = \"127.0.0.1:*\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297494,"byte_end":297544,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297545,"byte_end":297548,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let server = ServerBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297549,"byte_end":297586,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/     .bind(addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297587,"byte_end":297606,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297607,"byte_end":297625,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297626,"byte_end":297629,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let bound = server.last_endpoint()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297630,"byte_end":297670,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297671,"byte_end":297674,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let client = ClientBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297675,"byte_end":297712,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/     .connect(bound)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297713,"byte_end":297736,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297737,"byte_end":297755,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297756,"byte_end":297759,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // The client initiates the conversation so it is assigned a `routing_id`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297760,"byte_end":297838,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ client.send(\"request\")?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297839,"byte_end":297867,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/ let msg = server.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297868,"byte_end":297901,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(\"request\", msg.to_str()?);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297902,"byte_end":297943,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ let id = msg.routing_id().unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297944,"byte_end":297983,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297984,"byte_end":297987,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Using this `routing_id`, we can now route as many replies as we","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":297988,"byte_end":298058,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ // want to the client.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298059,"byte_end":298085,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ server.route(\"reply 1\", id)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298086,"byte_end":298119,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/ server.route(\"reply 2\", id)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298120,"byte_end":298153,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298154,"byte_end":298157,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // The `routing_id` is discarted when the message is sent to the client.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298158,"byte_end":298234,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ let mut msg = client.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298235,"byte_end":298272,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(\"reply 1\", msg.to_str()?);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298273,"byte_end":298314,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/ assert!(msg.routing_id().is_none());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298315,"byte_end":298355,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/ client.recv(&mut msg)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298356,"byte_end":298383,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(\"reply 2\", msg.to_str()?);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298384,"byte_end":298425,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ assert!(msg.routing_id().is_none());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298426,"byte_end":298466,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298467,"byte_end":298472,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298473,"byte_end":298489,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298490,"byte_end":298497,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298498,"byte_end":298505,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298506,"byte_end":298509,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`route`]: #method.route","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298510,"byte_end":298538,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ [`Client`]: struct.Client.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298539,"byte_end":298573,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ [`routing_id`]: struct.Msg.html#method.routing_id","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298574,"byte_end":298627,"line_start":77,"line_end":77,"column_start":1,"column_end":54}},{"value":"/ [`set_routing_id`]: struct.Msg.html#method.set_routing_id","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298628,"byte_end":298689,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/ [`HostUnreachable`]: enum.ErrorKind.html#variant.host-unreachable","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298690,"byte_end":298759,"line_start":79,"line_end":79,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299226,"byte_end":299229,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Server>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Server` socket from the [`global context`]","sig":null,"attributes":[{"value":"/ Create a `Server` socket from the [`global context`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298867,"byte_end":298923,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298928,"byte_end":298931,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298936,"byte_end":298965,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298970,"byte_end":298990,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298995,"byte_end":299016,"line_start":90,"line_end":90,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299021,"byte_end":299024,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299029,"byte_end":299087,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299092,"byte_end":299152,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/ [`global context`]: ctx/struct.Ctx.html#method.global","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299157,"byte_end":299214,"line_start":94,"line_end":94,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299698,"byte_end":299706,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<Server>::with_ctx","value":"fn (handle: CtxHandle) -> Result<Server, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Server` socket associated with a specific context\n from a `CtxHandle`.","sig":null,"attributes":[{"value":"/ Create a `Server` socket associated with a specific context","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299366,"byte_end":299429,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/ from a `CtxHandle`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299434,"byte_end":299457,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299462,"byte_end":299465,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Returned Error Variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299470,"byte_end":299499,"line_start":104,"line_end":104,"column_start":5,"column_end":34}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299504,"byte_end":299524,"line_start":105,"line_end":105,"column_start":5,"column_end":25}},{"value":"/ * [`SocketLimit`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299529,"byte_end":299550,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299555,"byte_end":299558,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ [`InvalidCtx`]: enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299563,"byte_end":299621,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/ [`SocketLimit`]: enum.ErrorKind.html#variant.SocketLimit","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299626,"byte_end":299686,"line_start":109,"line_end":109,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299952,"byte_end":299955,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Server>::ctx","value":"fn (&self) -> CtxHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the context of the socket.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the context of the socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":299887,"byte_end":299940,"line_start":117,"line_end":117,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300335,"byte_end":300340,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"route","qualname":"<Server>::route","value":"fn <M> (&self, msg: M, id: RoutingId) -> Result<(), Error<Msg>>","parent":null,"children":[],"decl_id":null,"docs":" Push a message into the outgoing socket queue with the specified\n `RoutingId`.","sig":null,"attributes":[{"value":"/ Push a message into the outgoing socket queue with the specified","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300014,"byte_end":300082,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"/ `RoutingId`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300087,"byte_end":300103,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300108,"byte_end":300111,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that sets the `Msg`'s `RoutingId` then","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300116,"byte_end":300189,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ sends it.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300194,"byte_end":300207,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300212,"byte_end":300215,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See [`send`] for more information.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300220,"byte_end":300258,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300263,"byte_end":300266,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ [`send`]: prelude/trait.SendMsg.html#method.send","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300271,"byte_end":300323,"line_start":130,"line_end":130,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300884,"byte_end":300893,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"try_route","qualname":"<Server>::try_route","value":"fn <M> (&self, msg: M, id: RoutingId) -> Result<(), Error<Msg>>","parent":null,"children":[],"decl_id":null,"docs":" Try to push a message into the outgoing socket queue with the specified\n `RoutingId`.","sig":null,"attributes":[{"value":"/ Try to push a message into the outgoing socket queue with the specified","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300538,"byte_end":300613,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ `RoutingId`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300618,"byte_end":300634,"line_start":141,"line_end":141,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300639,"byte_end":300642,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that sets the `Msg`'s `RoutingId` then","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300647,"byte_end":300720,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ tries sends it.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300725,"byte_end":300744,"line_start":144,"line_end":144,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300749,"byte_end":300752,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ See [`try_send`] for more information.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300757,"byte_end":300799,"line_start":146,"line_end":146,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300804,"byte_end":300807,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ [`try_send`]: prelude/trait.SendMsg.html#method.try_send","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":300812,"byte_end":300872,"line_start":148,"line_end":148,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":5327},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301612,"byte_end":301624,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"ServerConfig","qualname":"::socket::server::ServerConfig","value":"ServerConfig {  }","parent":null,"children":[{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331}],"decl_id":null,"docs":" A configuration for a `Server`.","sig":null,"attributes":[{"value":"/ A configuration for a `Server`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301370,"byte_end":301405,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301406,"byte_end":301409,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ Especially helpfull in config files.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301410,"byte_end":301450,"line_start":175,"line_end":175,"column_start":1,"column_end":41}},{"value":"serde(from = \"FlatServerConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301529,"byte_end":301564,"line_start":177,"line_end":177,"column_start":1,"column_end":36}},{"value":"serde(into = \"FlatServerConfig\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301565,"byte_end":301600,"line_start":178,"line_end":178,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301794,"byte_end":301797,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"new","qualname":"<ServerConfig>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301852,"byte_end":301857,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"build","qualname":"<ServerConfig>::build","value":"fn (&self) -> Result<Server, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301947,"byte_end":301955,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<ServerConfig>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Server, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":302125,"byte_end":302130,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"apply","qualname":"<ServerConfig>::apply","value":"fn (&self, server: &Server) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5433},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305508,"byte_end":305521,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"ServerBuilder","qualname":"::socket::server::ServerBuilder","value":"ServerBuilder {  }","parent":null,"children":[{"krate":0,"index":5434}],"decl_id":null,"docs":" A builder for a `Server`.","sig":null,"attributes":[{"value":"/ A builder for a `Server`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305353,"byte_end":305382,"line_start":321,"line_end":321,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305383,"byte_end":305386,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Allows for ergonomic one line socket configuration.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305387,"byte_end":305442,"line_start":323,"line_end":323,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305584,"byte_end":305587,"line_start":330,"line_end":330,"column_start":12,"column_end":15},"name":"new","qualname":"<ServerBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305642,"byte_end":305647,"line_start":334,"line_end":334,"column_start":12,"column_end":17},"name":"build","qualname":"<ServerBuilder>::build","value":"fn (&self) -> Result<Server, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305727,"byte_end":305735,"line_start":338,"line_end":338,"column_start":12,"column_end":20},"name":"with_ctx","qualname":"<ServerBuilder>::with_ctx","value":"fn (&self, handle: CtxHandle) -> Result<Server, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5452},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239623,"byte_end":239629,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Client","qualname":"::socket::SocketType::Client","value":"SocketType::Client(Client)","parent":{"krate":0,"index":5451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5455},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239643,"byte_end":239649,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Server","qualname":"::socket::SocketType::Server","value":"SocketType::Server(Server)","parent":{"krate":0,"index":5451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5458},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239663,"byte_end":239668,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Radio","qualname":"::socket::SocketType::Radio","value":"SocketType::Radio(Radio)","parent":{"krate":0,"index":5451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5461},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239681,"byte_end":239685,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Dish","qualname":"::socket::SocketType::Dish","value":"SocketType::Dish(Dish)","parent":{"krate":0,"index":5451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5464},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239697,"byte_end":239703,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Gather","qualname":"::socket::SocketType::Gather","value":"SocketType::Gather(Gather)","parent":{"krate":0,"index":5451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5467},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239717,"byte_end":239724,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"Scatter","qualname":"::socket::SocketType::Scatter","value":"SocketType::Scatter(Scatter)","parent":{"krate":0,"index":5451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5451},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239606,"byte_end":239616,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"name":"SocketType","qualname":"::socket::SocketType","value":"SocketType::{Client, Server, Radio, Dish, Gather, Scatter}","parent":null,"children":[{"krate":0,"index":5452},{"krate":0,"index":5455},{"krate":0,"index":5458},{"krate":0,"index":5461},{"krate":0,"index":5464},{"krate":0,"index":5467}],"decl_id":null,"docs":" An enum containing all the socket types.","sig":null,"attributes":[{"value":"/ An enum containing all the socket types.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239257,"byte_end":239301,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239302,"byte_end":239305,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239306,"byte_end":239316,"line_start":26,"line_end":26,"column_start":1,"column_end":11}},{"value":"/ This error type is non-exhaustive and could have additional variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239317,"byte_end":239389,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ added in future. Therefore, when matching against variants of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239390,"byte_end":239455,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ non-exhaustive enums, an extra wildcard arm must be added to account","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239456,"byte_end":239528,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ for any future variants.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239529,"byte_end":239557,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5482},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240655,"byte_end":240661,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Client","qualname":"::socket::ConfigType::Client","value":"ConfigType::Client(ClientConfig)","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5485},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240681,"byte_end":240687,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"Server","qualname":"::socket::ConfigType::Server","value":"ConfigType::Server(ServerConfig)","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5488},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240707,"byte_end":240712,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Radio","qualname":"::socket::ConfigType::Radio","value":"ConfigType::Radio(RadioConfig)","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5491},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240731,"byte_end":240735,"line_start":67,"line_end":67,"column_start":5,"column_end":9},"name":"Dish","qualname":"::socket::ConfigType::Dish","value":"ConfigType::Dish(DishConfig)","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5494},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240753,"byte_end":240759,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"Gather","qualname":"::socket::ConfigType::Gather","value":"ConfigType::Gather(GatherConfig)","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5497},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240779,"byte_end":240786,"line_start":69,"line_end":69,"column_start":5,"column_end":12},"name":"Scatter","qualname":"::socket::ConfigType::Scatter","value":"ConfigType::Scatter(ScatterConfig)","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5481},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240638,"byte_end":240648,"line_start":63,"line_end":63,"column_start":10,"column_end":20},"name":"ConfigType","qualname":"::socket::ConfigType","value":"ConfigType::{Client, Server, Radio, Dish, Gather, Scatter}","parent":null,"children":[{"krate":0,"index":5482},{"krate":0,"index":5485},{"krate":0,"index":5488},{"krate":0,"index":5491},{"krate":0,"index":5494},{"krate":0,"index":5497}],"decl_id":null,"docs":" An enum containing all the socket config types.","sig":null,"attributes":[{"value":"/ An enum containing all the socket config types.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240216,"byte_end":240267,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240268,"byte_end":240271,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240272,"byte_end":240282,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ This error type is non-exhaustive and could have additional variants","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240283,"byte_end":240355,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ added in future. Therefore, when matching against variants of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240356,"byte_end":240421,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/ non-exhaustive enums, an extra wildcard arm must be added to account","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240422,"byte_end":240494,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ for any future variants.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240495,"byte_end":240523,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240593,"byte_end":240628,"line_start":62,"line_end":62,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240835,"byte_end":240840,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"build","qualname":"<ConfigType>::build","value":"fn (&self) -> Result<SocketType, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1999},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307700,"byte_end":307707,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"version","qualname":"::utils::version","value":"fn () -> (i32, i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Reports the ØMQ library version.","sig":null,"attributes":[{"value":"/ Reports the ØMQ library version.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307343,"byte_end":307380,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307381,"byte_end":307384,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple in the format `(Major, Minor, Patch)`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307385,"byte_end":307443,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307444,"byte_end":307447,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [`zmq_version`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307448,"byte_end":307472,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307473,"byte_end":307476,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`zmq_version`]: http://api.zeromq.org/4-2:zmq-version","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307477,"byte_end":307535,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307536,"byte_end":307539,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307540,"byte_end":307547,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use libzmq::version;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307548,"byte_end":307572,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307573,"byte_end":307576,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(version(), (4, 3, 2));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307577,"byte_end":307614,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307615,"byte_end":307622,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2000},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309549,"byte_end":309554,"line_start":91,"line_end":91,"column_start":8,"column_end":13},"name":"proxy","qualname":"::utils::proxy","value":"fn <F, B> (frontend: F, backend: B) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Start a built-in ØMQ proxy between a frontend and a backend socket.","sig":null,"attributes":[{"value":"/ Start a built-in ØMQ proxy between a frontend and a backend socket.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":307999,"byte_end":308071,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308072,"byte_end":308075,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The two sockets must be configured before creating the proxy.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308076,"byte_end":308141,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308142,"byte_end":308145,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The proxy connects a frontend socket to a backend socket. Conceptually, data","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308146,"byte_end":308226,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ flows from frontend to backend. Depending on the socket types, replies may","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308227,"byte_end":308305,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ flow in the opposite direction. The direction is conceptual only; the proxy","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308306,"byte_end":308385,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ is fully symmetric and there is no technical difference between frontend and","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308386,"byte_end":308466,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ backend.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308467,"byte_end":308479,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308480,"byte_end":308483,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Returned Errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308484,"byte_end":308505,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/ * [`InvalidCtx`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308506,"byte_end":308526,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308527,"byte_end":308530,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308531,"byte_end":308544,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308545,"byte_end":308552,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), anyhow::Error> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308553,"byte_end":308599,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/ use libzmq::{prelude::*, *};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308600,"byte_end":308632,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/ use std::thread;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308633,"byte_end":308653,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308654,"byte_end":308657,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let radio_addr: InprocAddr = \"frontend\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308658,"byte_end":308714,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/ let dish_addr: InprocAddr = \"backend\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308715,"byte_end":308769,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/ let group: Group = \"some group\".try_into()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308770,"byte_end":308818,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308819,"byte_end":308822,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let radio = RadioBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308823,"byte_end":308858,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/     .bind(&radio_addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308859,"byte_end":308885,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308886,"byte_end":308904,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308905,"byte_end":308908,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let frontend = DishBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308909,"byte_end":308946,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/     .connect(&radio_addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308947,"byte_end":308976,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/     .join(&group)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308977,"byte_end":308998,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":308999,"byte_end":309017,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309018,"byte_end":309021,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ let backend = RadioBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309022,"byte_end":309059,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/     .bind(&dish_addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309060,"byte_end":309085,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309086,"byte_end":309104,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309105,"byte_end":309108,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let dish = DishBuilder::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309109,"byte_end":309142,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/     .connect(&dish_addr)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309143,"byte_end":309171,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/     .join(&group)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309172,"byte_end":309193,"line_start":74,"line_end":74,"column_start":1,"column_end":22}},{"value":"/     .build()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309194,"byte_end":309212,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309213,"byte_end":309216,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let proxy_handle = thread::spawn(move || proxy(frontend, backend));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309217,"byte_end":309288,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309289,"byte_end":309292,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let mut msg = Msg::new();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309293,"byte_end":309322,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/ msg.set_group(&group);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309323,"byte_end":309349,"line_start":80,"line_end":80,"column_start":1,"column_end":27}},{"value":"/ radio.send(msg)?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309350,"byte_end":309371,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309372,"byte_end":309375,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let msg = dish.recv_msg()?;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309376,"byte_end":309407,"line_start":83,"line_end":83,"column_start":1,"column_end":32}},{"value":"/ assert!(msg.is_empty());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309408,"byte_end":309436,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309437,"byte_end":309442,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309443,"byte_end":309459,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309460,"byte_end":309467,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309468,"byte_end":309475,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309476,"byte_end":309479,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`InvalidCtx`]: ../enum.ErrorKind.html#variant.InvalidCtx","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/utils.rs","byte_start":309480,"byte_end":309541,"line_start":90,"line_end":90,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":2037},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":743,"byte_end":749,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"config","qualname":"::config","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040}],"decl_id":null,"docs":" Configurations for *libzmq* types.\n","sig":null,"attributes":[{"value":"/ Configurations for *libzmq* types.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":696,"byte_end":734,"line_start":31,"line_end":31,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":2048},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1016,"byte_end":1020,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"addr","qualname":"::addr","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":2049}],"decl_id":null,"docs":" Address related types.\n","sig":null,"attributes":[{"value":"/ Address related types.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":981,"byte_end":1007,"line_start":41,"line_end":41,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":2058},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1563,"byte_end":1570,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2072}],"decl_id":null,"docs":" A \"prelude\" for users of the *libzmq* crate.","sig":null,"attributes":[{"value":"/ A \"prelude\" for users of the *libzmq* crate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1167,"byte_end":1215,"line_start":49,"line_end":49,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1216,"byte_end":1219,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1220,"byte_end":1296,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1297,"byte_end":1374,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1375,"byte_end":1427,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1428,"byte_end":1431,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1432,"byte_end":1439,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use libzmq::prelude::*;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1440,"byte_end":1467,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1468,"byte_end":1475,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1476,"byte_end":1479,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":1480,"byte_end":1554,"line_start":59,"line_end":59,"column_start":1,"column_end":75}}]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25762,"byte_end":25771,"line_start":56,"line_end":56,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27133,"byte_end":27142,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28950,"byte_end":28968,"line_start":177,"line_end":177,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29362,"byte_end":29380,"line_start":193,"line_end":193,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29925,"byte_end":29943,"line_start":214,"line_end":214,"column_start":32,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":31150,"byte_end":31155,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":35947,"byte_end":35956,"line_start":179,"line_end":179,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":43969,"byte_end":43978,"line_start":438,"line_end":438,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":44100,"byte_end":44109,"line_start":444,"line_end":444,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":44128,"byte_end":44137,"line_start":446,"line_end":446,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50386,"byte_end":50396,"line_start":192,"line_end":192,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58717,"byte_end":58727,"line_start":217,"line_end":217,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/sockopt.rs","byte_start":61815,"byte_end":61820,"line_start":49,"line_end":49,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2510,"byte_end":2522,"line_start":21,"line_end":21,"column_start":21,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2546,"byte_end":2556,"line_start":22,"line_end":22,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2580,"byte_end":2590,"line_start":23,"line_end":23,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2614,"byte_end":2632,"line_start":24,"line_end":24,"column_start":21,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2656,"byte_end":2662,"line_start":25,"line_end":25,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2686,"byte_end":2698,"line_start":26,"line_end":26,"column_start":21,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2722,"byte_end":2735,"line_start":27,"line_end":27,"column_start":21,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2759,"byte_end":2765,"line_start":28,"line_end":28,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2789,"byte_end":2801,"line_start":29,"line_end":29,"column_start":21,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2825,"byte_end":2838,"line_start":30,"line_end":30,"column_start":21,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2862,"byte_end":2867,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2891,"byte_end":2902,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2926,"byte_end":2938,"line_start":33,"line_end":33,"column_start":21,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2962,"byte_end":2966,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2990,"byte_end":3000,"line_start":35,"line_end":35,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3024,"byte_end":3035,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3059,"byte_end":3066,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3090,"byte_end":3103,"line_start":38,"line_end":38,"column_start":21,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3127,"byte_end":3141,"line_start":39,"line_end":39,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3165,"byte_end":3171,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3195,"byte_end":3207,"line_start":41,"line_end":41,"column_start":21,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3231,"byte_end":3244,"line_start":42,"line_end":42,"column_start":21,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3268,"byte_end":3278,"line_start":43,"line_end":43,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3351,"byte_end":3360,"line_start":47,"line_end":47,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3799,"byte_end":3812,"line_start":65,"line_end":65,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3905,"byte_end":3918,"line_start":71,"line_end":71,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4102,"byte_end":4115,"line_start":83,"line_end":83,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4291,"byte_end":4297,"line_start":92,"line_end":92,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4565,"byte_end":4574,"line_start":103,"line_end":103,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4670,"byte_end":4679,"line_start":109,"line_end":109,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4862,"byte_end":4871,"line_start":121,"line_end":121,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5043,"byte_end":5049,"line_start":130,"line_end":130,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5484,"byte_end":5490,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5583,"byte_end":5589,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5807,"byte_end":5813,"line_start":166,"line_end":166,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6038,"byte_end":6044,"line_start":176,"line_end":176,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6270,"byte_end":6275,"line_start":186,"line_end":186,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":18562,"byte_end":18574,"line_start":556,"line_end":556,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19407,"byte_end":19419,"line_start":584,"line_end":584,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20708,"byte_end":20720,"line_start":633,"line_end":633,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78318,"byte_end":78328,"line_start":91,"line_end":91,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":442},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":453},{"krate":0,"index":457},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86215,"byte_end":86225,"line_start":347,"line_end":347,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":476},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89125,"byte_end":89136,"line_start":443,"line_end":443,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101609,"byte_end":101623,"line_start":148,"line_end":148,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102007,"byte_end":102021,"line_start":165,"line_end":165,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102151,"byte_end":102165,"line_start":171,"line_end":171,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102371,"byte_end":102385,"line_start":179,"line_end":179,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102556,"byte_end":102570,"line_start":187,"line_end":187,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102748,"byte_end":102756,"line_start":195,"line_end":195,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102873,"byte_end":102887,"line_start":201,"line_end":201,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102996,"byte_end":103010,"line_start":207,"line_end":207,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103163,"byte_end":103177,"line_start":215,"line_end":215,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103324,"byte_end":103338,"line_start":223,"line_end":223,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103493,"byte_end":103507,"line_start":230,"line_end":230,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103666,"byte_end":103680,"line_start":237,"line_end":237,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103840,"byte_end":103854,"line_start":244,"line_end":244,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104608,"byte_end":104622,"line_start":274,"line_end":274,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105004,"byte_end":105018,"line_start":291,"line_end":291,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105224,"byte_end":105232,"line_start":299,"line_end":299,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105349,"byte_end":105363,"line_start":305,"line_end":305,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105472,"byte_end":105486,"line_start":311,"line_end":311,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105639,"byte_end":105653,"line_start":319,"line_end":319,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105800,"byte_end":105814,"line_start":327,"line_end":327,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105969,"byte_end":105983,"line_start":334,"line_end":334,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":106142,"byte_end":106156,"line_start":341,"line_end":341,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":106316,"byte_end":106330,"line_start":348,"line_end":348,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":106768,"byte_end":106776,"line_start":370,"line_end":370,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108001,"byte_end":108009,"line_start":420,"line_end":420,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108110,"byte_end":108118,"line_start":426,"line_end":426,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108273,"byte_end":108281,"line_start":433,"line_end":433,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108440,"byte_end":108448,"line_start":440,"line_end":440,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108613,"byte_end":108621,"line_start":447,"line_end":447,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108819,"byte_end":108827,"line_start":456,"line_end":456,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109016,"byte_end":109024,"line_start":465,"line_end":465,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109153,"byte_end":109161,"line_start":471,"line_end":471,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109349,"byte_end":109357,"line_start":480,"line_end":480,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109610,"byte_end":109618,"line_start":490,"line_end":490,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110346,"byte_end":110355,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":111729,"byte_end":111740,"line_start":575,"line_end":575,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":111946,"byte_end":111957,"line_start":585,"line_end":585,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112124,"byte_end":112135,"line_start":593,"line_end":593,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112304,"byte_end":112315,"line_start":601,"line_end":601,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112494,"byte_end":112505,"line_start":609,"line_end":609,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112680,"byte_end":112691,"line_start":617,"line_end":617,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112870,"byte_end":112881,"line_start":625,"line_end":625,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113505,"byte_end":113521,"line_start":651,"line_end":651,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114304,"byte_end":114320,"line_start":683,"line_end":683,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114448,"byte_end":114457,"line_start":689,"line_end":689,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114601,"byte_end":114610,"line_start":695,"line_end":695,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115101,"byte_end":115117,"line_start":716,"line_end":716,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115522,"byte_end":115538,"line_start":733,"line_end":733,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115666,"byte_end":115675,"line_start":739,"line_end":739,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115819,"byte_end":115828,"line_start":745,"line_end":745,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":119864,"byte_end":119874,"line_start":34,"line_end":34,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":120524,"byte_end":120534,"line_start":54,"line_end":54,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":121550,"byte_end":121560,"line_start":83,"line_end":83,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":122039,"byte_end":122049,"line_start":104,"line_end":104,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":122909,"byte_end":122917,"line_start":139,"line_end":139,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":123784,"byte_end":123794,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71767,"byte_end":71783,"line_start":41,"line_end":41,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72353,"byte_end":72369,"line_start":65,"line_end":65,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72497,"byte_end":72506,"line_start":71,"line_end":71,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72638,"byte_end":72647,"line_start":77,"line_end":77,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72766,"byte_end":72782,"line_start":83,"line_end":83,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74814,"byte_end":74823,"line_start":143,"line_end":143,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74929,"byte_end":74938,"line_start":149,"line_end":149,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":75242,"byte_end":75255,"line_start":166,"line_end":166,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":134515,"byte_end":134520,"line_start":30,"line_end":30,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":135072,"byte_end":135078,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136687,"byte_end":136693,"line_start":107,"line_end":107,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136718,"byte_end":136724,"line_start":108,"line_end":108,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136991,"byte_end":137000,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138111,"byte_end":138121,"line_start":171,"line_end":171,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140911,"byte_end":140920,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142653,"byte_end":142656,"line_start":333,"line_end":333,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147768,"byte_end":147771,"line_start":501,"line_end":501,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147844,"byte_end":147847,"line_start":507,"line_end":507,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148641,"byte_end":148647,"line_start":27,"line_end":27,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148802,"byte_end":148810,"line_start":34,"line_end":34,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148988,"byte_end":148996,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":149623,"byte_end":149626,"line_start":67,"line_end":67,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":150112,"byte_end":150126,"line_start":87,"line_end":87,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152387,"byte_end":152395,"line_start":173,"line_end":173,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153040,"byte_end":153048,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153193,"byte_end":153201,"line_start":207,"line_end":207,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153367,"byte_end":153375,"line_start":215,"line_end":215,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153535,"byte_end":153543,"line_start":222,"line_end":222,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153713,"byte_end":153721,"line_start":229,"line_end":229,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154313,"byte_end":154317,"line_start":257,"line_end":257,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154644,"byte_end":154648,"line_start":275,"line_end":275,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155192,"byte_end":155196,"line_start":294,"line_end":294,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155920,"byte_end":155929,"line_start":325,"line_end":325,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156423,"byte_end":156432,"line_start":343,"line_end":343,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157175,"byte_end":157185,"line_start":375,"line_end":375,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157439,"byte_end":157449,"line_start":389,"line_end":389,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158410,"byte_end":158420,"line_start":419,"line_end":419,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158613,"byte_end":158623,"line_start":427,"line_end":427,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158788,"byte_end":158798,"line_start":433,"line_end":433,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159787,"byte_end":159794,"line_start":470,"line_end":470,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160152,"byte_end":160159,"line_start":484,"line_end":484,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160444,"byte_end":160451,"line_start":495,"line_end":495,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160567,"byte_end":160574,"line_start":501,"line_end":501,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160702,"byte_end":160709,"line_start":507,"line_end":507,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161424,"byte_end":161431,"line_start":538,"line_end":538,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161918,"byte_end":161925,"line_start":565,"line_end":565,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":162392,"byte_end":162399,"line_start":583,"line_end":583,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":162698,"byte_end":162705,"line_start":595,"line_end":595,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":162812,"byte_end":162819,"line_start":601,"line_end":601,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163185,"byte_end":163193,"line_start":619,"line_end":619,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163305,"byte_end":163313,"line_start":625,"line_end":625,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164033,"byte_end":164040,"line_start":656,"line_end":656,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165654,"byte_end":165661,"line_start":716,"line_end":716,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":166128,"byte_end":166135,"line_start":734,"line_end":734,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":166434,"byte_end":166441,"line_start":746,"line_end":746,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":166548,"byte_end":166555,"line_start":752,"line_end":752,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":166921,"byte_end":166929,"line_start":770,"line_end":770,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167041,"byte_end":167049,"line_start":776,"line_end":776,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167706,"byte_end":167713,"line_start":804,"line_end":804,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":168392,"byte_end":168399,"line_start":834,"line_end":834,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":168866,"byte_end":168873,"line_start":852,"line_end":852,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169172,"byte_end":169179,"line_start":864,"line_end":864,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169286,"byte_end":169293,"line_start":870,"line_end":870,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169659,"byte_end":169667,"line_start":888,"line_end":888,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169779,"byte_end":169787,"line_start":894,"line_end":894,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170458,"byte_end":170466,"line_start":921,"line_end":921,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":171145,"byte_end":171153,"line_start":951,"line_end":951,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":171621,"byte_end":171629,"line_start":969,"line_end":969,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":171929,"byte_end":171937,"line_start":981,"line_end":981,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172044,"byte_end":172052,"line_start":987,"line_end":987,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172420,"byte_end":172428,"line_start":1005,"line_end":1005,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172543,"byte_end":172551,"line_start":1011,"line_end":1011,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173459,"byte_end":173469,"line_start":1047,"line_end":1047,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174876,"byte_end":174886,"line_start":1098,"line_end":1098,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175031,"byte_end":175041,"line_start":1105,"line_end":1105,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175199,"byte_end":175209,"line_start":1113,"line_end":1113,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175369,"byte_end":175379,"line_start":1120,"line_end":1120,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175549,"byte_end":175559,"line_start":1127,"line_end":1127,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175709,"byte_end":175719,"line_start":1134,"line_end":1134,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176091,"byte_end":176099,"line_start":1152,"line_end":1152,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176220,"byte_end":176228,"line_start":1158,"line_end":1158,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179466,"byte_end":179474,"line_start":1237,"line_end":1237,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":181869,"byte_end":181877,"line_start":1320,"line_end":1320,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":182277,"byte_end":182285,"line_start":1338,"line_end":1338,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":182382,"byte_end":182390,"line_start":1344,"line_end":1344,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184903,"byte_end":184908,"line_start":48,"line_end":48,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186453,"byte_end":186458,"line_start":105,"line_end":105,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186592,"byte_end":186597,"line_start":111,"line_end":111,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186763,"byte_end":186768,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186917,"byte_end":186922,"line_start":123,"line_end":123,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":187086,"byte_end":187091,"line_start":129,"line_end":129,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":187237,"byte_end":187242,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":187353,"byte_end":187358,"line_start":141,"line_end":141,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191161,"byte_end":191176,"line_start":28,"line_end":28,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191695,"byte_end":191705,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192198,"byte_end":192208,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192462,"byte_end":192472,"line_start":83,"line_end":83,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192641,"byte_end":192651,"line_start":93,"line_end":93,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192910,"byte_end":192920,"line_start":105,"line_end":105,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193174,"byte_end":193184,"line_start":117,"line_end":117,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193270,"byte_end":193280,"line_start":123,"line_end":123,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194322,"byte_end":194327,"line_start":170,"line_end":170,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195382,"byte_end":195387,"line_start":208,"line_end":208,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195482,"byte_end":195489,"line_start":214,"line_end":214,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195581,"byte_end":195586,"line_start":220,"line_end":220,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195681,"byte_end":195686,"line_start":226,"line_end":226,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195852,"byte_end":195857,"line_start":233,"line_end":233,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196035,"byte_end":196040,"line_start":240,"line_end":240,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196207,"byte_end":196212,"line_start":247,"line_end":247,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196370,"byte_end":196375,"line_start":255,"line_end":255,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196528,"byte_end":196533,"line_start":261,"line_end":261,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196674,"byte_end":196679,"line_start":267,"line_end":267,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196771,"byte_end":196776,"line_start":273,"line_end":273,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196927,"byte_end":196932,"line_start":282,"line_end":282,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197071,"byte_end":197076,"line_start":288,"line_end":288,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197205,"byte_end":197210,"line_start":294,"line_end":294,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197437,"byte_end":197442,"line_start":306,"line_end":306,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197563,"byte_end":197568,"line_start":312,"line_end":312,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197814,"byte_end":197819,"line_start":324,"line_end":324,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":198191,"byte_end":198196,"line_start":342,"line_end":342,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":198418,"byte_end":198423,"line_start":351,"line_end":351,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200390,"byte_end":200399,"line_start":71,"line_end":71,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200462,"byte_end":200465,"line_start":77,"line_end":77,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":206957,"byte_end":206960,"line_start":309,"line_end":309,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":207124,"byte_end":207127,"line_start":316,"line_end":316,"column_start":13,"column_end":16},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":207152,"byte_end":207155,"line_start":318,"line_end":318,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":207286,"byte_end":207289,"line_start":324,"line_end":324,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":207570,"byte_end":207573,"line_start":335,"line_end":335,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":208438,"byte_end":208441,"line_start":364,"line_end":364,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":208886,"byte_end":208889,"line_start":380,"line_end":380,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":209739,"byte_end":209742,"line_start":412,"line_end":412,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":210651,"byte_end":210654,"line_start":450,"line_end":450,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":210836,"byte_end":210839,"line_start":457,"line_end":457,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":210998,"byte_end":211001,"line_start":464,"line_end":464,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":211175,"byte_end":211178,"line_start":471,"line_end":471,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/old.rs","byte_start":213423,"byte_end":213436,"line_start":65,"line_end":65,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/old.rs","byte_start":213848,"byte_end":213857,"line_start":81,"line_end":81,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/old.rs","byte_start":215395,"byte_end":215404,"line_start":142,"line_end":142,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/old.rs","byte_start":215431,"byte_end":215440,"line_start":144,"line_end":144,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218373,"byte_end":218379,"line_start":90,"line_end":90,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219310,"byte_end":219318,"line_start":132,"line_end":132,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219464,"byte_end":219472,"line_start":141,"line_end":141,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219606,"byte_end":219614,"line_start":147,"line_end":147,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219747,"byte_end":219755,"line_start":153,"line_end":153,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219884,"byte_end":219892,"line_start":159,"line_end":159,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220020,"byte_end":220028,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220163,"byte_end":220171,"line_start":171,"line_end":171,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220326,"byte_end":220334,"line_start":178,"line_end":178,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220730,"byte_end":220734,"line_start":196,"line_end":196,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221766,"byte_end":221774,"line_start":239,"line_end":239,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222467,"byte_end":222472,"line_start":269,"line_end":269,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223513,"byte_end":223519,"line_start":310,"line_end":310,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224545,"byte_end":224551,"line_start":356,"line_end":356,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227008,"byte_end":227014,"line_start":439,"line_end":439,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":238117,"byte_end":238123,"line_start":807,"line_end":807,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":238372,"byte_end":238378,"line_start":819,"line_end":819,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244493,"byte_end":244499,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245664,"byte_end":245670,"line_start":119,"line_end":119,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245765,"byte_end":245771,"line_start":125,"line_end":125,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245791,"byte_end":245797,"line_start":126,"line_end":126,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245818,"byte_end":245824,"line_start":127,"line_end":127,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245845,"byte_end":245851,"line_start":128,"line_end":128,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245877,"byte_end":245883,"line_start":130,"line_end":130,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245908,"byte_end":245914,"line_start":131,"line_end":131,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246435,"byte_end":246447,"line_start":148,"line_end":148,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":247386,"byte_end":247402,"line_start":186,"line_end":186,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":248086,"byte_end":248098,"line_start":205,"line_end":205,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":248836,"byte_end":248848,"line_start":232,"line_end":232,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249058,"byte_end":249070,"line_start":242,"line_end":242,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249098,"byte_end":249110,"line_start":244,"line_end":244,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249306,"byte_end":249318,"line_start":254,"line_end":254,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249346,"byte_end":249358,"line_start":256,"line_end":256,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249554,"byte_end":249566,"line_start":266,"line_end":266,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249602,"byte_end":249614,"line_start":268,"line_end":268,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249854,"byte_end":249866,"line_start":278,"line_end":278,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250099,"byte_end":250112,"line_start":288,"line_end":288,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250401,"byte_end":250414,"line_start":302,"line_end":302,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250634,"byte_end":250647,"line_start":312,"line_end":312,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250675,"byte_end":250688,"line_start":314,"line_end":314,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250894,"byte_end":250907,"line_start":324,"line_end":324,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250935,"byte_end":250948,"line_start":326,"line_end":326,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1624},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":251154,"byte_end":251167,"line_start":336,"line_end":336,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":251203,"byte_end":251216,"line_start":338,"line_end":338,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":251466,"byte_end":251479,"line_start":348,"line_end":348,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255863,"byte_end":255867,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260181,"byte_end":260185,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260284,"byte_end":260288,"line_start":293,"line_end":293,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260315,"byte_end":260319,"line_start":295,"line_end":295,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260408,"byte_end":260412,"line_start":301,"line_end":301,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260433,"byte_end":260437,"line_start":302,"line_end":302,"column_start":18,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260463,"byte_end":260467,"line_start":304,"line_end":304,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260492,"byte_end":260496,"line_start":305,"line_end":305,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260969,"byte_end":260979,"line_start":321,"line_end":321,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":262197,"byte_end":262211,"line_start":372,"line_end":372,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":262677,"byte_end":262687,"line_start":387,"line_end":387,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263166,"byte_end":263176,"line_start":405,"line_end":405,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263386,"byte_end":263396,"line_start":415,"line_end":415,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263424,"byte_end":263434,"line_start":417,"line_end":417,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263630,"byte_end":263640,"line_start":427,"line_end":427,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263867,"byte_end":263878,"line_start":437,"line_end":437,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264436,"byte_end":264447,"line_start":461,"line_end":461,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264667,"byte_end":264678,"line_start":471,"line_end":471,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264706,"byte_end":264717,"line_start":473,"line_end":473,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264923,"byte_end":264934,"line_start":483,"line_end":483,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268573,"byte_end":268579,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269741,"byte_end":269747,"line_start":110,"line_end":110,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269848,"byte_end":269854,"line_start":116,"line_end":116,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269881,"byte_end":269887,"line_start":118,"line_end":118,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269982,"byte_end":269988,"line_start":124,"line_end":124,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270008,"byte_end":270014,"line_start":125,"line_end":125,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270035,"byte_end":270041,"line_start":126,"line_end":126,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270067,"byte_end":270073,"line_start":128,"line_end":128,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270098,"byte_end":270104,"line_start":129,"line_end":129,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270594,"byte_end":270606,"line_start":145,"line_end":145,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":271403,"byte_end":271419,"line_start":179,"line_end":179,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":271961,"byte_end":271973,"line_start":195,"line_end":195,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":272553,"byte_end":272565,"line_start":216,"line_end":216,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":272775,"byte_end":272787,"line_start":226,"line_end":226,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":272815,"byte_end":272827,"line_start":228,"line_end":228,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273023,"byte_end":273035,"line_start":238,"line_end":238,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273071,"byte_end":273083,"line_start":240,"line_end":240,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273323,"byte_end":273335,"line_start":250,"line_end":250,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273568,"byte_end":273581,"line_start":260,"line_end":260,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273870,"byte_end":273883,"line_start":274,"line_end":274,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274103,"byte_end":274116,"line_start":284,"line_end":284,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274144,"byte_end":274157,"line_start":286,"line_end":286,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274363,"byte_end":274376,"line_start":296,"line_end":296,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274412,"byte_end":274425,"line_start":298,"line_end":298,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274675,"byte_end":274688,"line_start":308,"line_end":308,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279155,"byte_end":279160,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281950,"byte_end":281955,"line_start":188,"line_end":188,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282044,"byte_end":282049,"line_start":194,"line_end":194,"column_start":17,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282070,"byte_end":282075,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282101,"byte_end":282106,"line_start":197,"line_end":197,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282131,"byte_end":282136,"line_start":198,"line_end":198,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282491,"byte_end":282502,"line_start":212,"line_end":212,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":283803,"byte_end":283818,"line_start":262,"line_end":262,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":284288,"byte_end":284299,"line_start":277,"line_end":277,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":284782,"byte_end":284793,"line_start":296,"line_end":296,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285003,"byte_end":285014,"line_start":306,"line_end":306,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285042,"byte_end":285053,"line_start":308,"line_end":308,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285249,"byte_end":285260,"line_start":318,"line_end":318,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285466,"byte_end":285478,"line_start":328,"line_end":328,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285868,"byte_end":285880,"line_start":347,"line_end":347,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":286100,"byte_end":286112,"line_start":357,"line_end":357,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":286140,"byte_end":286152,"line_start":359,"line_end":359,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":286358,"byte_end":286370,"line_start":369,"line_end":369,"column_start":20,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288410,"byte_end":288417,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289583,"byte_end":289590,"line_start":101,"line_end":101,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289692,"byte_end":289699,"line_start":107,"line_end":107,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289726,"byte_end":289733,"line_start":109,"line_end":109,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289828,"byte_end":289835,"line_start":115,"line_end":115,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289855,"byte_end":289862,"line_start":116,"line_end":116,"column_start":17,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289883,"byte_end":289890,"line_start":117,"line_end":117,"column_start":18,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289916,"byte_end":289923,"line_start":119,"line_end":119,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289948,"byte_end":289955,"line_start":120,"line_end":120,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290450,"byte_end":290463,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":291272,"byte_end":291289,"line_start":170,"line_end":170,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":291833,"byte_end":291846,"line_start":186,"line_end":186,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292427,"byte_end":292440,"line_start":207,"line_end":207,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292650,"byte_end":292663,"line_start":217,"line_end":217,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292691,"byte_end":292704,"line_start":219,"line_end":219,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292900,"byte_end":292913,"line_start":229,"line_end":229,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292949,"byte_end":292962,"line_start":231,"line_end":231,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293202,"byte_end":293215,"line_start":241,"line_end":241,"column_start":32,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293451,"byte_end":293465,"line_start":251,"line_end":251,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293756,"byte_end":293770,"line_start":265,"line_end":265,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293990,"byte_end":294004,"line_start":275,"line_end":275,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":294032,"byte_end":294046,"line_start":277,"line_end":277,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":294252,"byte_end":294266,"line_start":287,"line_end":287,"column_start":20,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":294302,"byte_end":294316,"line_start":289,"line_end":289,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":294566,"byte_end":294580,"line_start":299,"line_end":299,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298854,"byte_end":298860,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301115,"byte_end":301121,"line_start":159,"line_end":159,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301216,"byte_end":301222,"line_start":165,"line_end":165,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301242,"byte_end":301248,"line_start":166,"line_end":166,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301269,"byte_end":301275,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301296,"byte_end":301302,"line_start":168,"line_end":168,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301328,"byte_end":301334,"line_start":170,"line_end":170,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301359,"byte_end":301365,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301768,"byte_end":301780,"line_start":186,"line_end":186,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":302868,"byte_end":302884,"line_start":227,"line_end":227,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":303568,"byte_end":303580,"line_start":246,"line_end":246,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304318,"byte_end":304330,"line_start":273,"line_end":273,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304540,"byte_end":304552,"line_start":283,"line_end":283,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304580,"byte_end":304592,"line_start":285,"line_end":285,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304788,"byte_end":304800,"line_start":295,"line_end":295,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304828,"byte_end":304840,"line_start":297,"line_end":297,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305036,"byte_end":305048,"line_start":307,"line_end":307,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305084,"byte_end":305096,"line_start":309,"line_end":309,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305336,"byte_end":305348,"line_start":319,"line_end":319,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305557,"byte_end":305570,"line_start":329,"line_end":329,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305859,"byte_end":305872,"line_start":343,"line_end":343,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306092,"byte_end":306105,"line_start":353,"line_end":353,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306133,"byte_end":306146,"line_start":355,"line_end":355,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306352,"byte_end":306365,"line_start":365,"line_end":365,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306393,"byte_end":306406,"line_start":367,"line_end":367,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306612,"byte_end":306625,"line_start":377,"line_end":377,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306661,"byte_end":306674,"line_start":379,"line_end":379,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306924,"byte_end":306937,"line_start":389,"line_end":389,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239760,"byte_end":239770,"line_start":41,"line_end":41,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240811,"byte_end":240821,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":149,"byte_end":153,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":399}},{"kind":"Mod","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/lib.rs","byte_start":226,"byte_end":230,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1442}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":25762,"byte_end":25771,"line_start":56,"line_end":56,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":27133,"byte_end":27142,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2075},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28310,"byte_end":28322,"line_start":156,"line_end":156,"column_start":25,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":73},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":28950,"byte_end":28968,"line_start":177,"line_end":177,"column_start":6,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29196,"byte_end":29202,"line_start":187,"line_end":187,"column_start":43,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":281},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29362,"byte_end":29380,"line_start":193,"line_end":193,"column_start":32,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2171},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29640,"byte_end":29661,"line_start":204,"line_end":204,"column_start":34,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":38},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":29925,"byte_end":29943,"line_start":214,"line_end":214,"column_start":32,"column_end":50},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2171},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":30029,"byte_end":30050,"line_start":217,"line_end":217,"column_start":30,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":38},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/heartbeat.rs","byte_start":30053,"byte_end":30058,"line_start":217,"line_end":217,"column_start":54,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":30658,"byte_end":30664,"line_start":25,"line_end":25,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":281},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":31150,"byte_end":31155,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":3641},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":35947,"byte_end":35956,"line_start":179,"line_end":179,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":43969,"byte_end":43978,"line_start":438,"line_end":438,"column_start":20,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2189},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":44100,"byte_end":44109,"line_start":444,"line_end":444,"column_start":13,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2189},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/raw.rs","byte_start":44128,"byte_end":44137,"line_start":446,"line_end":446,"column_start":15,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2189},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":45807,"byte_end":45819,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":73},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50386,"byte_end":50396,"line_start":192,"line_end":192,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50656,"byte_end":50662,"line_start":202,"line_end":202,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":281},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":50881,"byte_end":50894,"line_start":209,"line_end":209,"column_start":26,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":182},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/recv.rs","byte_start":51399,"byte_end":51412,"line_start":228,"line_end":228,"column_start":22,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":182},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":53216,"byte_end":53228,"line_start":53,"line_end":53,"column_start":20,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":73},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58717,"byte_end":58727,"line_start":217,"line_end":217,"column_start":6,"column_end":16},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":58987,"byte_end":58993,"line_start":227,"line_end":227,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":281},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59210,"byte_end":59223,"line_start":234,"line_end":234,"column_start":26,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":222},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/send.rs","byte_start":59728,"byte_end":59741,"line_start":253,"line_end":253,"column_start":22,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":222},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/sockopt.rs","byte_start":61815,"byte_end":61820,"line_start":49,"line_end":49,"column_start":29,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":18,"index":39},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2510,"byte_end":2522,"line_start":21,"line_end":21,"column_start":21,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2414},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2546,"byte_end":2556,"line_start":22,"line_end":22,"column_start":21,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2215},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2580,"byte_end":2590,"line_start":23,"line_end":23,"column_start":21,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2196},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2614,"byte_end":2632,"line_start":24,"line_end":24,"column_start":21,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2171},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2656,"byte_end":2662,"line_start":25,"line_end":25,"column_start":21,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4491},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2686,"byte_end":2698,"line_start":26,"line_end":26,"column_start":21,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2722,"byte_end":2735,"line_start":27,"line_end":27,"column_start":21,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2759,"byte_end":2765,"line_start":28,"line_end":28,"column_start":21,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5314},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2789,"byte_end":2801,"line_start":29,"line_end":29,"column_start":21,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2825,"byte_end":2838,"line_start":30,"line_end":30,"column_start":21,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2862,"byte_end":2867,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":5016},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2891,"byte_end":2902,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":5029},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2926,"byte_end":2938,"line_start":33,"line_end":33,"column_start":21,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5126},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2962,"byte_end":2966,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":2990,"byte_end":3000,"line_start":35,"line_end":35,"column_start":21,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4682},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3024,"byte_end":3035,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4781},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3059,"byte_end":3066,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5144},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3090,"byte_end":3103,"line_start":38,"line_end":38,"column_start":21,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":5150},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3127,"byte_end":3141,"line_start":39,"line_end":39,"column_start":21,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3165,"byte_end":3171,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3195,"byte_end":3207,"line_start":41,"line_end":41,"column_start":21,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4852},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3231,"byte_end":3244,"line_start":42,"line_end":42,"column_start":21,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4951},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3268,"byte_end":3278,"line_start":43,"line_end":43,"column_start":21,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5451},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3351,"byte_end":3360,"line_start":47,"line_end":47,"column_start":21,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4194},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3799,"byte_end":3812,"line_start":65,"line_end":65,"column_start":18,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2318},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":3905,"byte_end":3918,"line_start":71,"line_end":71,"column_start":20,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2318},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4102,"byte_end":4115,"line_start":83,"line_end":83,"column_start":28,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2318},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4291,"byte_end":4297,"line_start":92,"line_end":92,"column_start":30,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":2,"index":29547},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4565,"byte_end":4574,"line_start":103,"line_end":103,"column_start":18,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2349},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4670,"byte_end":4679,"line_start":109,"line_end":109,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2349},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":4862,"byte_end":4871,"line_start":121,"line_end":121,"column_start":28,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2349},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5043,"byte_end":5049,"line_start":130,"line_end":130,"column_start":26,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":2,"index":29547},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5484,"byte_end":5490,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2380},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5583,"byte_end":5589,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":29547},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":5807,"byte_end":5813,"line_start":166,"line_end":166,"column_start":33,"column_end":39},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2380},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6038,"byte_end":6044,"line_start":176,"line_end":176,"column_start":40,"column_end":46},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2380},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6270,"byte_end":6275,"line_start":186,"line_end":186,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":21,"index":106},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":6884,"byte_end":6896,"line_start":204,"line_end":204,"column_start":19,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":73},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":18562,"byte_end":18574,"line_start":556,"line_end":556,"column_start":6,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19265,"byte_end":19271,"line_start":578,"line_end":578,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":281},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19407,"byte_end":19419,"line_start":584,"line_end":584,"column_start":26,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2414},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":19655,"byte_end":19670,"line_start":595,"line_end":595,"column_start":28,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":370},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20708,"byte_end":20720,"line_start":633,"line_end":633,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2414},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20800,"byte_end":20815,"line_start":636,"line_end":636,"column_start":24,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":370},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/core/mod.rs","byte_start":20818,"byte_end":20823,"line_start":636,"line_end":636,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":78318,"byte_end":78328,"line_start":91,"line_end":91,"column_start":6,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":86215,"byte_end":86225,"line_start":347,"line_end":347,"column_start":6,"column_end":16},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/client.rs","byte_start":89125,"byte_end":89136,"line_start":443,"line_end":443,"column_start":6,"column_end":17},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":101609,"byte_end":101623,"line_start":148,"line_end":148,"column_start":6,"column_end":20},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102007,"byte_end":102021,"line_start":165,"line_end":165,"column_start":23,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102151,"byte_end":102165,"line_start":171,"line_end":171,"column_start":21,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102371,"byte_end":102385,"line_start":179,"line_end":179,"column_start":31,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102556,"byte_end":102570,"line_start":187,"line_end":187,"column_start":39,"column_end":53},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102748,"byte_end":102756,"line_start":195,"line_end":195,"column_start":31,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102873,"byte_end":102887,"line_start":201,"line_end":201,"column_start":39,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":102996,"byte_end":103010,"line_start":207,"line_end":207,"column_start":28,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103163,"byte_end":103177,"line_start":215,"line_end":215,"column_start":36,"column_end":50},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103324,"byte_end":103338,"line_start":223,"line_end":223,"column_start":26,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103493,"byte_end":103507,"line_start":230,"line_end":230,"column_start":31,"column_end":45},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103666,"byte_end":103680,"line_start":237,"line_end":237,"column_start":34,"column_end":48},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":103840,"byte_end":103854,"line_start":244,"line_end":244,"column_start":23,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2768},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":104608,"byte_end":104622,"line_start":274,"line_end":274,"column_start":6,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105004,"byte_end":105018,"line_start":291,"line_end":291,"column_start":21,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105224,"byte_end":105232,"line_start":299,"line_end":299,"column_start":31,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105349,"byte_end":105363,"line_start":305,"line_end":305,"column_start":39,"column_end":53},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105472,"byte_end":105486,"line_start":311,"line_end":311,"column_start":28,"column_end":42},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105639,"byte_end":105653,"line_start":319,"line_end":319,"column_start":36,"column_end":50},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105800,"byte_end":105814,"line_start":327,"line_end":327,"column_start":26,"column_end":40},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":105969,"byte_end":105983,"line_start":334,"line_end":334,"column_start":31,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":106142,"byte_end":106156,"line_start":341,"line_end":341,"column_start":34,"column_end":48},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":106316,"byte_end":106330,"line_start":348,"line_end":348,"column_start":23,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":106768,"byte_end":106776,"line_start":370,"line_end":370,"column_start":6,"column_end":14},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108001,"byte_end":108009,"line_start":420,"line_end":420,"column_start":33,"column_end":41},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108110,"byte_end":108118,"line_start":426,"line_end":426,"column_start":26,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108273,"byte_end":108281,"line_start":433,"line_end":433,"column_start":31,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108440,"byte_end":108448,"line_start":440,"line_end":440,"column_start":34,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108613,"byte_end":108621,"line_start":447,"line_end":447,"column_start":28,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":108819,"byte_end":108827,"line_start":456,"line_end":456,"column_start":36,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109016,"byte_end":109024,"line_start":465,"line_end":465,"column_start":23,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109153,"byte_end":109161,"line_start":471,"line_end":471,"column_start":20,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2824},"to":{"krate":15,"index":1677}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109349,"byte_end":109357,"line_start":480,"line_end":480,"column_start":32,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2824},"to":{"krate":15,"index":1189}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":109610,"byte_end":109618,"line_start":490,"line_end":490,"column_start":23,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":110346,"byte_end":110355,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":111729,"byte_end":111740,"line_start":575,"line_end":575,"column_start":6,"column_end":17},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":111946,"byte_end":111957,"line_start":585,"line_end":585,"column_start":25,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2906},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112124,"byte_end":112135,"line_start":593,"line_end":593,"column_start":33,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2906},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112304,"byte_end":112315,"line_start":601,"line_end":601,"column_start":31,"column_end":42},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2906},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112494,"byte_end":112505,"line_start":609,"line_end":609,"column_start":39,"column_end":50},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2906},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112680,"byte_end":112691,"line_start":617,"line_end":617,"column_start":31,"column_end":42},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2906},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":112870,"byte_end":112881,"line_start":625,"line_end":625,"column_start":39,"column_end":50},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2906},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":113505,"byte_end":113521,"line_start":651,"line_end":651,"column_start":6,"column_end":22},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114304,"byte_end":114320,"line_start":683,"line_end":683,"column_start":41,"column_end":57},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2922},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114448,"byte_end":114457,"line_start":689,"line_end":689,"column_start":41,"column_end":50},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3205},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":114601,"byte_end":114610,"line_start":695,"line_end":695,"column_start":33,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3205},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115101,"byte_end":115117,"line_start":716,"line_end":716,"column_start":6,"column_end":22},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115522,"byte_end":115538,"line_start":733,"line_end":733,"column_start":41,"column_end":57},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2988},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115666,"byte_end":115675,"line_start":739,"line_end":739,"column_start":41,"column_end":50},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3205},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/curve.rs","byte_start":115819,"byte_end":115828,"line_start":745,"line_end":745,"column_start":33,"column_end":42},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3205},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":119864,"byte_end":119874,"line_start":34,"line_end":34,"column_start":23,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3084},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":120524,"byte_end":120534,"line_start":54,"line_end":54,"column_start":26,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3084},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":121550,"byte_end":121560,"line_start":83,"line_end":83,"column_start":32,"column_end":42},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3084},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":122039,"byte_end":122049,"line_start":104,"line_end":104,"column_start":6,"column_end":16},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":122909,"byte_end":122917,"line_start":139,"line_end":139,"column_start":23,"column_end":31},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3128},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/server.rs","byte_start":123784,"byte_end":123794,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":71767,"byte_end":71783,"line_start":41,"line_end":41,"column_start":6,"column_end":22},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72353,"byte_end":72369,"line_start":65,"line_end":65,"column_start":41,"column_end":57},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3139},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72497,"byte_end":72506,"line_start":71,"line_end":71,"column_start":41,"column_end":50},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3205},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72638,"byte_end":72647,"line_start":77,"line_end":77,"column_start":33,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3205},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":72766,"byte_end":72782,"line_start":83,"line_end":83,"column_start":23,"column_end":39},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3139},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74814,"byte_end":74823,"line_start":143,"line_end":143,"column_start":34,"column_end":43},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3205},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":74929,"byte_end":74938,"line_start":149,"line_end":149,"column_start":18,"column_end":27},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3205},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/auth/mod.rs","byte_start":75242,"byte_end":75255,"line_start":166,"line_end":166,"column_start":31,"column_end":44},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":134515,"byte_end":134520,"line_start":30,"line_end":30,"column_start":26,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":1,"index":3641},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":135072,"byte_end":135078,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136687,"byte_end":136693,"line_start":107,"line_end":107,"column_start":22,"column_end":28},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3338},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136718,"byte_end":136724,"line_start":108,"line_end":108,"column_start":22,"column_end":28},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3338},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":136991,"byte_end":137000,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":138111,"byte_end":138121,"line_start":171,"line_end":171,"column_start":6,"column_end":16},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":140911,"byte_end":140920,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":142653,"byte_end":142656,"line_start":333,"line_end":333,"column_start":6,"column_end":9},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147768,"byte_end":147771,"line_start":501,"line_end":501,"column_start":18,"column_end":21},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3495},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/ctx.rs","byte_start":147844,"byte_end":147847,"line_start":507,"line_end":507,"column_start":15,"column_end":18},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3495},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148641,"byte_end":148647,"line_start":27,"line_end":27,"column_start":22,"column_end":28},"kind":{"Impl":{"id":172}},"from":{"krate":1,"index":6691},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148802,"byte_end":148810,"line_start":34,"line_end":34,"column_start":22,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":1,"index":6721},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":148988,"byte_end":148996,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":1,"index":6724},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":149623,"byte_end":149626,"line_start":67,"line_end":67,"column_start":25,"column_end":28},"kind":{"Impl":{"id":175}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":150112,"byte_end":150126,"line_start":87,"line_end":87,"column_start":6,"column_end":20},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":152387,"byte_end":152395,"line_start":173,"line_end":173,"column_start":6,"column_end":14},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153040,"byte_end":153048,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153193,"byte_end":153201,"line_start":207,"line_end":207,"column_start":23,"column_end":31},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153367,"byte_end":153375,"line_start":215,"line_end":215,"column_start":26,"column_end":34},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153535,"byte_end":153543,"line_start":222,"line_end":222,"column_start":34,"column_end":42},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":153713,"byte_end":153721,"line_start":229,"line_end":229,"column_start":31,"column_end":39},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154313,"byte_end":154317,"line_start":257,"line_end":257,"column_start":6,"column_end":10},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":154644,"byte_end":154648,"line_start":275,"line_end":275,"column_start":18,"column_end":22},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155192,"byte_end":155196,"line_start":294,"line_end":294,"column_start":23,"column_end":27},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":155920,"byte_end":155929,"line_start":325,"line_end":325,"column_start":18,"column_end":27},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3575},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":156423,"byte_end":156432,"line_start":343,"line_end":343,"column_start":23,"column_end":32},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3575},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157175,"byte_end":157185,"line_start":375,"line_end":375,"column_start":6,"column_end":16},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":157439,"byte_end":157449,"line_start":389,"line_end":389,"column_start":18,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3614},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158410,"byte_end":158420,"line_start":419,"line_end":419,"column_start":23,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3614},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158613,"byte_end":158623,"line_start":427,"line_end":427,"column_start":32,"column_end":42},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3614},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":158788,"byte_end":158798,"line_start":433,"line_end":433,"column_start":35,"column_end":45},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3614},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":159787,"byte_end":159794,"line_start":470,"line_end":470,"column_start":18,"column_end":25},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3649},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160152,"byte_end":160159,"line_start":484,"line_end":484,"column_start":23,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3649},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160444,"byte_end":160451,"line_start":495,"line_end":495,"column_start":27,"column_end":34},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3649},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160567,"byte_end":160574,"line_start":501,"line_end":501,"column_start":35,"column_end":42},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3649},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":160702,"byte_end":160709,"line_start":507,"line_end":507,"column_start":32,"column_end":39},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3649},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161424,"byte_end":161431,"line_start":538,"line_end":538,"column_start":6,"column_end":13},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":161918,"byte_end":161925,"line_start":565,"line_end":565,"column_start":18,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3688},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":162392,"byte_end":162399,"line_start":583,"line_end":583,"column_start":23,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3688},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":162698,"byte_end":162705,"line_start":595,"line_end":595,"column_start":27,"column_end":34},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3688},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":162812,"byte_end":162819,"line_start":601,"line_end":601,"column_start":23,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3688},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163185,"byte_end":163193,"line_start":619,"line_end":619,"column_start":24,"column_end":32},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":163305,"byte_end":163313,"line_start":625,"line_end":625,"column_start":32,"column_end":40},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":164033,"byte_end":164040,"line_start":656,"line_end":656,"column_start":6,"column_end":13},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":165654,"byte_end":165661,"line_start":716,"line_end":716,"column_start":18,"column_end":25},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3723},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":166128,"byte_end":166135,"line_start":734,"line_end":734,"column_start":23,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3723},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":166434,"byte_end":166441,"line_start":746,"line_end":746,"column_start":27,"column_end":34},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3723},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":166548,"byte_end":166555,"line_start":752,"line_end":752,"column_start":23,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3723},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":166921,"byte_end":166929,"line_start":770,"line_end":770,"column_start":24,"column_end":32},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167041,"byte_end":167049,"line_start":776,"line_end":776,"column_start":32,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":167706,"byte_end":167713,"line_start":804,"line_end":804,"column_start":6,"column_end":13},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":168392,"byte_end":168399,"line_start":834,"line_end":834,"column_start":18,"column_end":25},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3758},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":168866,"byte_end":168873,"line_start":852,"line_end":852,"column_start":23,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3758},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169172,"byte_end":169179,"line_start":864,"line_end":864,"column_start":27,"column_end":34},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3758},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169286,"byte_end":169293,"line_start":870,"line_end":870,"column_start":23,"column_end":30},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3758},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169659,"byte_end":169667,"line_start":888,"line_end":888,"column_start":24,"column_end":32},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":169779,"byte_end":169787,"line_start":894,"line_end":894,"column_start":32,"column_end":40},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":170458,"byte_end":170466,"line_start":921,"line_end":921,"column_start":6,"column_end":14},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":171145,"byte_end":171153,"line_start":951,"line_end":951,"column_start":18,"column_end":26},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":171621,"byte_end":171629,"line_start":969,"line_end":969,"column_start":23,"column_end":31},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":171929,"byte_end":171937,"line_start":981,"line_end":981,"column_start":27,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172044,"byte_end":172052,"line_start":987,"line_end":987,"column_start":23,"column_end":31},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172420,"byte_end":172428,"line_start":1005,"line_end":1005,"column_start":25,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":172543,"byte_end":172551,"line_start":1011,"line_end":1011,"column_start":33,"column_end":41},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":173459,"byte_end":173469,"line_start":1047,"line_end":1047,"column_start":6,"column_end":16},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":174876,"byte_end":174886,"line_start":1098,"line_end":1098,"column_start":18,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3828},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175031,"byte_end":175041,"line_start":1105,"line_end":1105,"column_start":23,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3828},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175199,"byte_end":175209,"line_start":1113,"line_end":1113,"column_start":26,"column_end":36},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3828},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175369,"byte_end":175379,"line_start":1120,"line_end":1120,"column_start":34,"column_end":44},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3828},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175549,"byte_end":175559,"line_start":1127,"line_end":1127,"column_start":31,"column_end":41},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3828},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":175709,"byte_end":175719,"line_start":1134,"line_end":1134,"column_start":23,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3828},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176091,"byte_end":176099,"line_start":1152,"line_end":1152,"column_start":27,"column_end":35},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":176220,"byte_end":176228,"line_start":1158,"line_end":1158,"column_start":35,"column_end":43},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":179466,"byte_end":179474,"line_start":1237,"line_end":1237,"column_start":6,"column_end":14},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":181869,"byte_end":181877,"line_start":1320,"line_end":1320,"column_start":23,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":182277,"byte_end":182285,"line_start":1338,"line_end":1338,"column_start":33,"column_end":41},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/endpoint.rs","byte_start":182382,"byte_end":182390,"line_start":1344,"line_end":1344,"column_start":26,"column_end":34},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":184903,"byte_end":184908,"line_start":48,"line_end":48,"column_start":9,"column_end":14},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":1159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186453,"byte_end":186458,"line_start":105,"line_end":105,"column_start":31,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":1159},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186592,"byte_end":186597,"line_start":111,"line_end":111,"column_start":24,"column_end":29},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186763,"byte_end":186768,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":186917,"byte_end":186922,"line_start":123,"line_end":123,"column_start":35,"column_end":40},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":187086,"byte_end":187091,"line_start":129,"line_end":129,"column_start":34,"column_end":39},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":187237,"byte_end":187242,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":1159},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/error.rs","byte_start":187353,"byte_end":187358,"line_start":141,"line_end":141,"column_start":32,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":1,"index":2505},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191161,"byte_end":191176,"line_start":28,"line_end":28,"column_start":6,"column_end":21},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":191695,"byte_end":191705,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192198,"byte_end":192208,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192462,"byte_end":192472,"line_start":83,"line_end":83,"column_start":18,"column_end":28},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3991},"to":{"krate":5,"index":314}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192641,"byte_end":192651,"line_start":93,"line_end":93,"column_start":25,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":192910,"byte_end":192920,"line_start":105,"line_end":105,"column_start":27,"column_end":37},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193174,"byte_end":193184,"line_start":117,"line_end":117,"column_start":22,"column_end":32},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":193270,"byte_end":193280,"line_start":123,"line_end":123,"column_start":21,"column_end":31},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":194322,"byte_end":194327,"line_start":170,"line_end":170,"column_start":6,"column_end":11},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195382,"byte_end":195387,"line_start":208,"line_end":208,"column_start":35,"column_end":40},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195482,"byte_end":195489,"line_start":214,"line_end":214,"column_start":22,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":1,"index":6277},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195581,"byte_end":195586,"line_start":220,"line_end":220,"column_start":30,"column_end":35},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195681,"byte_end":195686,"line_start":226,"line_end":226,"column_start":26,"column_end":31},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":195852,"byte_end":195857,"line_start":233,"line_end":233,"column_start":34,"column_end":39},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196035,"byte_end":196040,"line_start":240,"line_end":240,"column_start":31,"column_end":36},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196207,"byte_end":196212,"line_start":247,"line_end":247,"column_start":23,"column_end":28},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196370,"byte_end":196375,"line_start":255,"line_end":255,"column_start":23,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196528,"byte_end":196533,"line_start":261,"line_end":261,"column_start":29,"column_end":34},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1584}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196674,"byte_end":196679,"line_start":267,"line_end":267,"column_start":28,"column_end":33},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196771,"byte_end":196776,"line_start":273,"line_end":273,"column_start":21,"column_end":26},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":196927,"byte_end":196932,"line_start":282,"line_end":282,"column_start":36,"column_end":41},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197071,"byte_end":197076,"line_start":288,"line_end":288,"column_start":37,"column_end":42},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197205,"byte_end":197210,"line_start":294,"line_end":294,"column_start":26,"column_end":31},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197437,"byte_end":197442,"line_start":306,"line_end":306,"column_start":25,"column_end":30},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197563,"byte_end":197568,"line_start":312,"line_end":312,"column_start":26,"column_end":31},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":197814,"byte_end":197819,"line_start":324,"line_end":324,"column_start":23,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":198191,"byte_end":198196,"line_start":342,"line_end":342,"column_start":20,"column_end":25},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4003},"to":{"krate":15,"index":1677}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/group.rs","byte_start":198418,"byte_end":198423,"line_start":351,"line_end":351,"column_start":32,"column_end":37},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4003},"to":{"krate":15,"index":1189}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200390,"byte_end":200399,"line_start":71,"line_end":71,"column_start":20,"column_end":29},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4019},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":200462,"byte_end":200465,"line_start":77,"line_end":77,"column_start":6,"column_end":9},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":206957,"byte_end":206960,"line_start":309,"line_end":309,"column_start":20,"column_end":23},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":207124,"byte_end":207127,"line_start":316,"line_end":316,"column_start":13,"column_end":16},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":207152,"byte_end":207155,"line_start":318,"line_end":318,"column_start":21,"column_end":24},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":207286,"byte_end":207289,"line_start":324,"line_end":324,"column_start":18,"column_end":21},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":207570,"byte_end":207573,"line_start":335,"line_end":335,"column_start":16,"column_end":19},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":208438,"byte_end":208441,"line_start":364,"line_end":364,"column_start":15,"column_end":18},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":208886,"byte_end":208889,"line_start":380,"line_end":380,"column_start":26,"column_end":29},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":209739,"byte_end":209742,"line_start":412,"line_end":412,"column_start":26,"column_end":29},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":210651,"byte_end":210654,"line_start":450,"line_end":450,"column_start":24,"column_end":27},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":210836,"byte_end":210839,"line_start":457,"line_end":457,"column_start":28,"column_end":31},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":210998,"byte_end":211001,"line_start":464,"line_end":464,"column_start":23,"column_end":26},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/msg.rs","byte_start":211175,"byte_end":211178,"line_start":471,"line_end":471,"column_start":29,"column_end":32},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/old.rs","byte_start":213423,"byte_end":213436,"line_start":65,"line_end":65,"column_start":30,"column_end":43},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/old.rs","byte_start":213848,"byte_end":213857,"line_start":81,"line_end":81,"column_start":6,"column_end":15},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/old.rs","byte_start":215395,"byte_end":215404,"line_start":142,"line_end":142,"column_start":22,"column_end":31},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4194},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/old.rs","byte_start":215431,"byte_end":215440,"line_start":144,"line_end":144,"column_start":23,"column_end":32},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4194},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":218373,"byte_end":218379,"line_start":90,"line_end":90,"column_start":22,"column_end":28},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4402},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219310,"byte_end":219318,"line_start":132,"line_end":132,"column_start":29,"column_end":37},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219464,"byte_end":219472,"line_start":141,"line_end":141,"column_start":31,"column_end":39},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219606,"byte_end":219614,"line_start":147,"line_end":147,"column_start":31,"column_end":39},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219747,"byte_end":219755,"line_start":153,"line_end":153,"column_start":30,"column_end":38},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":219884,"byte_end":219892,"line_start":159,"line_end":159,"column_start":29,"column_end":37},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220020,"byte_end":220028,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220163,"byte_end":220171,"line_start":171,"line_end":171,"column_start":32,"column_end":40},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220326,"byte_end":220334,"line_start":178,"line_end":178,"column_start":34,"column_end":42},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":220730,"byte_end":220734,"line_start":196,"line_end":196,"column_start":23,"column_end":27},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4428},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":221766,"byte_end":221774,"line_start":239,"line_end":239,"column_start":19,"column_end":27},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4438},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":222467,"byte_end":222472,"line_start":269,"line_end":269,"column_start":6,"column_end":11},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":223513,"byte_end":223519,"line_start":310,"line_end":310,"column_start":6,"column_end":12},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":224545,"byte_end":224551,"line_start":356,"line_end":356,"column_start":23,"column_end":29},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4461},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":227008,"byte_end":227014,"line_start":439,"line_end":439,"column_start":6,"column_end":12},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":238117,"byte_end":238123,"line_start":807,"line_end":807,"column_start":18,"column_end":24},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4479},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/poll.rs","byte_start":238372,"byte_end":238378,"line_start":819,"line_end":819,"column_start":15,"column_end":21},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4479},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":244493,"byte_end":244499,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245664,"byte_end":245670,"line_start":119,"line_end":119,"column_start":23,"column_end":29},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4491},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245765,"byte_end":245771,"line_start":125,"line_end":125,"column_start":23,"column_end":29},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4491},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245791,"byte_end":245797,"line_start":126,"line_end":126,"column_start":17,"column_end":23},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4491},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245818,"byte_end":245824,"line_start":127,"line_end":127,"column_start":18,"column_end":24},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4491},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245845,"byte_end":245851,"line_start":128,"line_end":128,"column_start":18,"column_end":24},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4491},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245877,"byte_end":245883,"line_start":130,"line_end":130,"column_start":22,"column_end":28},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4491},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":245908,"byte_end":245914,"line_start":131,"line_end":131,"column_start":22,"column_end":28},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4491},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":246435,"byte_end":246447,"line_start":148,"line_end":148,"column_start":6,"column_end":18},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":247386,"byte_end":247402,"line_start":186,"line_end":186,"column_start":29,"column_end":45},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":248086,"byte_end":248098,"line_start":205,"line_end":205,"column_start":33,"column_end":45},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4504},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":248836,"byte_end":248848,"line_start":232,"line_end":232,"column_start":26,"column_end":38},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249058,"byte_end":249070,"line_start":242,"line_end":242,"column_start":26,"column_end":38},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249098,"byte_end":249110,"line_start":244,"line_end":244,"column_start":24,"column_end":36},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249306,"byte_end":249318,"line_start":254,"line_end":254,"column_start":24,"column_end":36},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249346,"byte_end":249358,"line_start":256,"line_end":256,"column_start":24,"column_end":36},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249554,"byte_end":249566,"line_start":266,"line_end":266,"column_start":24,"column_end":36},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249602,"byte_end":249614,"line_start":268,"line_end":268,"column_start":32,"column_end":44},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":249854,"byte_end":249866,"line_start":278,"line_end":278,"column_start":32,"column_end":44},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250099,"byte_end":250112,"line_start":288,"line_end":288,"column_start":6,"column_end":19},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250401,"byte_end":250414,"line_start":302,"line_end":302,"column_start":26,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250634,"byte_end":250647,"line_start":312,"line_end":312,"column_start":22,"column_end":35},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250675,"byte_end":250688,"line_start":314,"line_end":314,"column_start":24,"column_end":37},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250894,"byte_end":250907,"line_start":324,"line_end":324,"column_start":20,"column_end":33},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":250935,"byte_end":250948,"line_start":326,"line_end":326,"column_start":24,"column_end":37},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":251154,"byte_end":251167,"line_start":336,"line_end":336,"column_start":20,"column_end":33},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":251203,"byte_end":251216,"line_start":338,"line_end":338,"column_start":32,"column_end":45},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/client.rs","byte_start":251466,"byte_end":251479,"line_start":348,"line_end":348,"column_start":28,"column_end":41},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":255863,"byte_end":255867,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260181,"byte_end":260185,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4675},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260284,"byte_end":260288,"line_start":293,"line_end":293,"column_start":13,"column_end":17},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4675},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260315,"byte_end":260319,"line_start":295,"line_end":295,"column_start":23,"column_end":27},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260408,"byte_end":260412,"line_start":301,"line_end":301,"column_start":17,"column_end":21},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260433,"byte_end":260437,"line_start":302,"line_end":302,"column_start":18,"column_end":22},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260463,"byte_end":260467,"line_start":304,"line_end":304,"column_start":22,"column_end":26},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4675},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260492,"byte_end":260496,"line_start":305,"line_end":305,"column_start":22,"column_end":26},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4675},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":260969,"byte_end":260979,"line_start":321,"line_end":321,"column_start":6,"column_end":16},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":262197,"byte_end":262211,"line_start":372,"line_end":372,"column_start":27,"column_end":41},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4715},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":262677,"byte_end":262687,"line_start":387,"line_end":387,"column_start":31,"column_end":41},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4682},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263166,"byte_end":263176,"line_start":405,"line_end":405,"column_start":26,"column_end":36},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":4682},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263386,"byte_end":263396,"line_start":415,"line_end":415,"column_start":26,"column_end":36},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4682},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263424,"byte_end":263434,"line_start":417,"line_end":417,"column_start":24,"column_end":34},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4682},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263630,"byte_end":263640,"line_start":427,"line_end":427,"column_start":24,"column_end":34},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4682},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":263867,"byte_end":263878,"line_start":437,"line_end":437,"column_start":6,"column_end":17},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264436,"byte_end":264447,"line_start":461,"line_end":461,"column_start":26,"column_end":37},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4781},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264667,"byte_end":264678,"line_start":471,"line_end":471,"column_start":22,"column_end":33},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":4781},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264706,"byte_end":264717,"line_start":473,"line_end":473,"column_start":24,"column_end":35},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4781},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/dish.rs","byte_start":264923,"byte_end":264934,"line_start":483,"line_end":483,"column_start":20,"column_end":31},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4781},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":268573,"byte_end":268579,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":4846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269741,"byte_end":269747,"line_start":110,"line_end":110,"column_start":20,"column_end":26},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4846},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269848,"byte_end":269854,"line_start":116,"line_end":116,"column_start":13,"column_end":19},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4846},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269881,"byte_end":269887,"line_start":118,"line_end":118,"column_start":23,"column_end":29},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":269982,"byte_end":269988,"line_start":124,"line_end":124,"column_start":23,"column_end":29},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270008,"byte_end":270014,"line_start":125,"line_end":125,"column_start":17,"column_end":23},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270035,"byte_end":270041,"line_start":126,"line_end":126,"column_start":18,"column_end":24},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270067,"byte_end":270073,"line_start":128,"line_end":128,"column_start":22,"column_end":28},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4846},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270098,"byte_end":270104,"line_start":129,"line_end":129,"column_start":22,"column_end":28},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4846},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":270594,"byte_end":270606,"line_start":145,"line_end":145,"column_start":6,"column_end":18},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":271403,"byte_end":271419,"line_start":179,"line_end":179,"column_start":29,"column_end":45},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4885},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":271961,"byte_end":271973,"line_start":195,"line_end":195,"column_start":33,"column_end":45},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4852},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":272553,"byte_end":272565,"line_start":216,"line_end":216,"column_start":26,"column_end":38},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4852},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":272775,"byte_end":272787,"line_start":226,"line_end":226,"column_start":26,"column_end":38},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4852},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":272815,"byte_end":272827,"line_start":228,"line_end":228,"column_start":24,"column_end":36},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4852},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273023,"byte_end":273035,"line_start":238,"line_end":238,"column_start":24,"column_end":36},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4852},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273071,"byte_end":273083,"line_start":240,"line_end":240,"column_start":32,"column_end":44},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4852},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273323,"byte_end":273335,"line_start":250,"line_end":250,"column_start":32,"column_end":44},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4852},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273568,"byte_end":273581,"line_start":260,"line_end":260,"column_start":6,"column_end":19},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":273870,"byte_end":273883,"line_start":274,"line_end":274,"column_start":26,"column_end":39},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4951},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274103,"byte_end":274116,"line_start":284,"line_end":284,"column_start":22,"column_end":35},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4951},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274144,"byte_end":274157,"line_start":286,"line_end":286,"column_start":24,"column_end":37},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4951},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274363,"byte_end":274376,"line_start":296,"line_end":296,"column_start":20,"column_end":33},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4951},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274412,"byte_end":274425,"line_start":298,"line_end":298,"column_start":32,"column_end":45},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4951},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/gather.rs","byte_start":274675,"byte_end":274688,"line_start":308,"line_end":308,"column_start":28,"column_end":41},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4951},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":279155,"byte_end":279160,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":281950,"byte_end":281955,"line_start":188,"line_end":188,"column_start":23,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5016},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282044,"byte_end":282049,"line_start":194,"line_end":194,"column_start":17,"column_end":22},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5016},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282070,"byte_end":282075,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5016},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282101,"byte_end":282106,"line_start":197,"line_end":197,"column_start":22,"column_end":27},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5016},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282131,"byte_end":282136,"line_start":198,"line_end":198,"column_start":22,"column_end":27},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5016},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":282491,"byte_end":282502,"line_start":212,"line_end":212,"column_start":6,"column_end":17},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":283803,"byte_end":283818,"line_start":262,"line_end":262,"column_start":28,"column_end":43},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5062},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":284288,"byte_end":284299,"line_start":277,"line_end":277,"column_start":32,"column_end":43},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5029},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":284782,"byte_end":284793,"line_start":296,"line_end":296,"column_start":26,"column_end":37},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5029},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285003,"byte_end":285014,"line_start":306,"line_end":306,"column_start":26,"column_end":37},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5029},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285042,"byte_end":285053,"line_start":308,"line_end":308,"column_start":24,"column_end":35},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5029},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285249,"byte_end":285260,"line_start":318,"line_end":318,"column_start":24,"column_end":35},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5029},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285466,"byte_end":285478,"line_start":328,"line_end":328,"column_start":6,"column_end":18},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":285868,"byte_end":285880,"line_start":347,"line_end":347,"column_start":26,"column_end":38},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5126},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":286100,"byte_end":286112,"line_start":357,"line_end":357,"column_start":22,"column_end":34},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5126},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":286140,"byte_end":286152,"line_start":359,"line_end":359,"column_start":24,"column_end":36},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5126},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/radio.rs","byte_start":286358,"byte_end":286370,"line_start":369,"line_end":369,"column_start":20,"column_end":32},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5126},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":288410,"byte_end":288417,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289583,"byte_end":289590,"line_start":101,"line_end":101,"column_start":20,"column_end":27},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5144},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289692,"byte_end":289699,"line_start":107,"line_end":107,"column_start":13,"column_end":20},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5144},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289726,"byte_end":289733,"line_start":109,"line_end":109,"column_start":23,"column_end":30},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5144},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289828,"byte_end":289835,"line_start":115,"line_end":115,"column_start":23,"column_end":30},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5144},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289855,"byte_end":289862,"line_start":116,"line_end":116,"column_start":17,"column_end":24},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5144},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289883,"byte_end":289890,"line_start":117,"line_end":117,"column_start":18,"column_end":25},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5144},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289916,"byte_end":289923,"line_start":119,"line_end":119,"column_start":22,"column_end":29},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5144},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":289948,"byte_end":289955,"line_start":120,"line_end":120,"column_start":22,"column_end":29},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5144},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":290450,"byte_end":290463,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":291272,"byte_end":291289,"line_start":170,"line_end":170,"column_start":30,"column_end":47},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5183},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":291833,"byte_end":291846,"line_start":186,"line_end":186,"column_start":34,"column_end":47},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292427,"byte_end":292440,"line_start":207,"line_end":207,"column_start":26,"column_end":39},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5150},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292650,"byte_end":292663,"line_start":217,"line_end":217,"column_start":26,"column_end":39},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5150},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292691,"byte_end":292704,"line_start":219,"line_end":219,"column_start":24,"column_end":37},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5150},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292900,"byte_end":292913,"line_start":229,"line_end":229,"column_start":24,"column_end":37},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5150},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":292949,"byte_end":292962,"line_start":231,"line_end":231,"column_start":32,"column_end":45},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5150},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293202,"byte_end":293215,"line_start":241,"line_end":241,"column_start":32,"column_end":45},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5150},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293451,"byte_end":293465,"line_start":251,"line_end":251,"column_start":6,"column_end":20},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293756,"byte_end":293770,"line_start":265,"line_end":265,"column_start":26,"column_end":40},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":293990,"byte_end":294004,"line_start":275,"line_end":275,"column_start":22,"column_end":36},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":294032,"byte_end":294046,"line_start":277,"line_end":277,"column_start":24,"column_end":38},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":294252,"byte_end":294266,"line_start":287,"line_end":287,"column_start":20,"column_end":34},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":294302,"byte_end":294316,"line_start":289,"line_end":289,"column_start":32,"column_end":46},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/scatter.rs","byte_start":294566,"byte_end":294580,"line_start":299,"line_end":299,"column_start":28,"column_end":42},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":298854,"byte_end":298860,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301115,"byte_end":301121,"line_start":159,"line_end":159,"column_start":23,"column_end":29},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5314},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301216,"byte_end":301222,"line_start":165,"line_end":165,"column_start":23,"column_end":29},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5314},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301242,"byte_end":301248,"line_start":166,"line_end":166,"column_start":17,"column_end":23},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5314},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301269,"byte_end":301275,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5314},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301296,"byte_end":301302,"line_start":168,"line_end":168,"column_start":18,"column_end":24},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5314},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301328,"byte_end":301334,"line_start":170,"line_end":170,"column_start":22,"column_end":28},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5314},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301359,"byte_end":301365,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5314},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":301768,"byte_end":301780,"line_start":186,"line_end":186,"column_start":6,"column_end":18},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":302868,"byte_end":302884,"line_start":227,"line_end":227,"column_start":29,"column_end":45},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5361},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":303568,"byte_end":303580,"line_start":246,"line_end":246,"column_start":33,"column_end":45},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5327},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304318,"byte_end":304330,"line_start":273,"line_end":273,"column_start":26,"column_end":38},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304540,"byte_end":304552,"line_start":283,"line_end":283,"column_start":26,"column_end":38},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304580,"byte_end":304592,"line_start":285,"line_end":285,"column_start":24,"column_end":36},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304788,"byte_end":304800,"line_start":295,"line_end":295,"column_start":24,"column_end":36},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":304828,"byte_end":304840,"line_start":297,"line_end":297,"column_start":24,"column_end":36},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305036,"byte_end":305048,"line_start":307,"line_end":307,"column_start":24,"column_end":36},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305084,"byte_end":305096,"line_start":309,"line_end":309,"column_start":32,"column_end":44},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305336,"byte_end":305348,"line_start":319,"line_end":319,"column_start":32,"column_end":44},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305557,"byte_end":305570,"line_start":329,"line_end":329,"column_start":6,"column_end":19},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":305859,"byte_end":305872,"line_start":343,"line_end":343,"column_start":26,"column_end":39},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306092,"byte_end":306105,"line_start":353,"line_end":353,"column_start":22,"column_end":35},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306133,"byte_end":306146,"line_start":355,"line_end":355,"column_start":24,"column_end":37},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306352,"byte_end":306365,"line_start":365,"line_end":365,"column_start":20,"column_end":33},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306393,"byte_end":306406,"line_start":367,"line_end":367,"column_start":24,"column_end":37},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306612,"byte_end":306625,"line_start":377,"line_end":377,"column_start":20,"column_end":33},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306661,"byte_end":306674,"line_start":379,"line_end":379,"column_start":32,"column_end":45},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/server.rs","byte_start":306924,"byte_end":306937,"line_start":389,"line_end":389,"column_start":28,"column_end":41},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5433},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":239760,"byte_end":239770,"line_start":41,"line_end":41,"column_start":23,"column_end":33},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5451},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/libzmq-0.2.5/src/socket/mod.rs","byte_start":240811,"byte_end":240821,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5481},"to":{"krate":4294967295,"index":4294967295}}]}