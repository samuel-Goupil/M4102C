{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0","program":"/home/iut/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","serde_with","--edition=2018","/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"macros\"","--cfg","feature=\"serde_with_macros\"","-C","metadata=24fd56ea9a82042f","-C","extra-filename=-24fd56ea9a82042f","--out-dir","/home/iut/M4102C/examples/target/rls/debug/deps","-L","dependency=/home/iut/M4102C/examples/target/rls/debug/deps","--extern","serde=/home/iut/M4102C/examples/target/rls/debug/deps/libserde-e865578d97ca0ef3.rmeta","--extern","serde_with_macros=/home/iut/M4102C/examples/target/rls/debug/deps/libserde_with_macros-53cdbc08d5f1c984.so","--cap-lints","allow","--error-format=json","--sysroot","/home/iut/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iut/M4102C/examples/target/rls/debug/deps/libserde_with-24fd56ea9a82042f.rmeta"},"prelude":{"crate_id":{"name":"serde_with","disambiguator":[7931425059763562116,12437456163914192962]},"crate_root":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src","external_crates":[{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12673765241971086519,1979875191208036248]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16221439354469382097,15565837348772828253]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15613252303691562375,4556165055238676072]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12269617896898487533,65142111397584226]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15862783141653200230,4773813417861420487]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[501305773035659233,3889300012469539238]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9126002216567348836,15610270334556716503]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9479301707518706798,13352731276321566042]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[15203654865662241151,17897348793673631766]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10290502124864695413,7672610073830174493]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14838544226648722576,13006716085524361330]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9246889555580827340,16878203682218964580]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8284748314555817558,4769950866534510046]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14671874173783541769,17969261176539820175]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":15,"id":{"name":"serde","disambiguator":[4878989833009055722,6789917710919305992]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":16,"id":{"name":"serde_derive","disambiguator":[12823798121206892568,12854773159673431200]}},{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","num":17,"id":{"name":"serde_with_macros","disambiguator":[2362856606423674936,6636692655047913762]}}],"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":0,"byte_end":45303,"line_start":1,"line_end":1205,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9157,"byte_end":9170,"line_start":261,"line_end":261,"column_start":21,"column_end":34},"alias_span":null,"name":"DeserializeAs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3526},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9178,"byte_end":9197,"line_start":261,"line_end":261,"column_start":42,"column_end":61},"alias_span":null,"name":"StringWithSeparator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9204,"byte_end":9215,"line_start":261,"line_end":261,"column_start":68,"column_end":79},"alias_span":null,"name":"SerializeAs","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":8039,"byte_end":8040,"line_start":227,"line_end":227,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":0,"byte_end":45303,"line_start":1,"line_end":1205,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":146},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":265},{"krate":0,"index":677},{"krate":0,"index":774},{"krate":0,"index":970},{"krate":0,"index":1131},{"krate":0,"index":1135},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":5278},{"krate":0,"index":5299},{"krate":0,"index":5297},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5289},{"krate":0,"index":5287},{"krate":0,"index":5284},{"krate":0,"index":5282},{"krate":0,"index":5280},{"krate":0,"index":1144},{"krate":0,"index":5300},{"krate":0,"index":5321},{"krate":0,"index":5319},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5311},{"krate":0,"index":5309},{"krate":0,"index":5306},{"krate":0,"index":5304},{"krate":0,"index":5302},{"krate":0,"index":1146},{"krate":0,"index":5322},{"krate":0,"index":5335},{"krate":0,"index":5332},{"krate":0,"index":5329},{"krate":0,"index":5326},{"krate":0,"index":1148},{"krate":0,"index":5337},{"krate":0,"index":5345},{"krate":0,"index":5343},{"krate":0,"index":5341},{"krate":0,"index":5339},{"krate":0,"index":5346},{"krate":0,"index":5354},{"krate":0,"index":5352},{"krate":0,"index":5350},{"krate":0,"index":5348},{"krate":0,"index":5355},{"krate":0,"index":5363},{"krate":0,"index":5361},{"krate":0,"index":5359},{"krate":0,"index":5357},{"krate":0,"index":5364},{"krate":0,"index":5377},{"krate":0,"index":5374},{"krate":0,"index":5371},{"krate":0,"index":5368},{"krate":0,"index":5379},{"krate":0,"index":5392},{"krate":0,"index":5389},{"krate":0,"index":5386},{"krate":0,"index":5383},{"krate":0,"index":5394},{"krate":0,"index":5402},{"krate":0,"index":5400},{"krate":0,"index":5398},{"krate":0,"index":5396},{"krate":0,"index":5403},{"krate":0,"index":5420},{"krate":0,"index":5416},{"krate":0,"index":5412},{"krate":0,"index":5408},{"krate":0,"index":5423},{"krate":0,"index":5440},{"krate":0,"index":5436},{"krate":0,"index":5432},{"krate":0,"index":5428},{"krate":0,"index":5443},{"krate":0,"index":5460},{"krate":0,"index":5456},{"krate":0,"index":5452},{"krate":0,"index":5448},{"krate":0,"index":5463},{"krate":0,"index":5480},{"krate":0,"index":5476},{"krate":0,"index":5472},{"krate":0,"index":5468}],"decl_id":null,"docs":" [![docs.rs badge](https://docs.rs/serde_with/badge.svg)](https://docs.rs/serde_with/)\n [![crates.io badge](https://img.shields.io/crates/v/serde_with.svg)](https://crates.io/crates/serde_with/)\n [![Build Status](https://github.com/jonasbb/serde_with/workflows/Rust%20CI/badge.svg)](https://github.com/jonasbb/serde_with)\n [![codecov](https://codecov.io/gh/jonasbb/serde_with/branch/master/graph/badge.svg)](https://codecov.io/gh/jonasbb/serde_with)","sig":null,"attributes":[{"value":"deny(missing_copy_implementations, missing_debug_implementations,\n       missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_qualifications,\n       variant_size_differences)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":0,"byte_end":252,"line_start":1,"line_end":11,"column_start":1,"column_end":3}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":253,"byte_end":279,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"allow(clippy :: unknown_clippy_lints)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":811,"byte_end":850,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"! [![docs.rs badge](https://docs.rs/serde_with/badge.svg)](https://docs.rs/serde_with/)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":852,"byte_end":941,"line_start":30,"line_end":30,"column_start":1,"column_end":90}},{"value":"! [![crates.io badge](https://img.shields.io/crates/v/serde_with.svg)](https://crates.io/crates/serde_with/)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":942,"byte_end":1052,"line_start":31,"line_end":31,"column_start":1,"column_end":111}},{"value":"! [![Build Status](https://github.com/jonasbb/serde_with/workflows/Rust%20CI/badge.svg)](https://github.com/jonasbb/serde_with)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1053,"byte_end":1182,"line_start":32,"line_end":32,"column_start":1,"column_end":130}},{"value":"! [![codecov](https://codecov.io/gh/jonasbb/serde_with/branch/master/graph/badge.svg)](https://codecov.io/gh/jonasbb/serde_with)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1183,"byte_end":1313,"line_start":33,"line_end":33,"column_start":1,"column_end":131}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1314,"byte_end":1317,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! ---","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1318,"byte_end":1325,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! This crate provides custom de/serialization helpers to use in combination with [serde's with-annotation][with-annotation] and with the improved [`serde_as`][user guide]-annotation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1330,"byte_end":1514,"line_start":37,"line_end":37,"column_start":1,"column_end":185}},{"value":"! Some common use cases are:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1515,"byte_end":1545,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1546,"byte_end":1549,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! * De/Serializing a type using the `Display` and `FromStr` traits, e.g., for `u8`, `url::Url`, or `mime::Mime`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1550,"byte_end":1664,"line_start":40,"line_end":40,"column_start":1,"column_end":115}},{"value":"!      Check [`DisplayFromStr`][] or [`serde_with::rust::display_fromstr`][display_fromstr] for details.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1665,"byte_end":1771,"line_start":41,"line_end":41,"column_start":1,"column_end":107}},{"value":"! * Skip serializing all empty `Option` types with [`#[skip_serializing_none]`][skip_serializing_none].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1772,"byte_end":1877,"line_start":42,"line_end":42,"column_start":1,"column_end":106}},{"value":"! * Apply a prefix to each field name of a struct, without changing the de/serialize implementations of the struct using [`with_prefix!`][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":1878,"byte_end":2020,"line_start":43,"line_end":43,"column_start":1,"column_end":143}},{"value":"! * Deserialize a comma separated list like `#hash,#tags,#are,#great` into a `Vec<String>`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2021,"byte_end":2114,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"!      Check the documentation for [`serde_with::rust::StringWithSeparator::<CommaSeparator>`][StringWithSeparator].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2115,"byte_end":2233,"line_start":45,"line_end":45,"column_start":1,"column_end":119}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2234,"byte_end":2237,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! Check out the [**user guide**][user guide] to find out more tips and tricks about this crate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2238,"byte_end":2335,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2336,"byte_end":2339,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! # Use `serde_with` in your Project","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2340,"byte_end":2378,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2379,"byte_end":2382,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Add this to your `Cargo.toml`:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2383,"byte_end":2417,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2418,"byte_end":2421,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2422,"byte_end":2433,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"! [dependencies.serde_with]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2434,"byte_end":2463,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"! version = \"1.6.0\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2464,"byte_end":2485,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"! features = [ \"...\" ]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2486,"byte_end":2510,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"! ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2511,"byte_end":2518,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! The crate contains different features for integration with other common crates.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2523,"byte_end":2606,"line_start":59,"line_end":59,"column_start":1,"column_end":84}},{"value":"! Check the [feature flags][] section for information about all available features.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2607,"byte_end":2692,"line_start":60,"line_end":60,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2693,"byte_end":2696,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2697,"byte_end":2711,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2712,"byte_end":2715,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Annotate your struct or enum to enable the custom de/serializer.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2716,"byte_end":2784,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2785,"byte_end":2788,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! ## `DisplayFromStr`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2789,"byte_end":2812,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2813,"byte_end":2816,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2817,"byte_end":2828,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"! # #[cfg(feature = \"macros\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2829,"byte_end":2861,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"! # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2862,"byte_end":2911,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"! # #[cfg(feature = \"macros\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2912,"byte_end":2944,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"! # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2945,"byte_end":2994,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"! # #[cfg(feature = \"macros\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":2995,"byte_end":3027,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"! #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3028,"byte_end":3043,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"! # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3044,"byte_end":3081,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"! #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3082,"byte_end":3119,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"! struct Foo {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3120,"byte_end":3136,"line_start":77,"line_end":77,"column_start":1,"column_end":17}},{"value":"!     // Serialize with Display, deserialize with FromStr","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3137,"byte_end":3196,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"!     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3197,"byte_end":3239,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"!     bar: u8,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3240,"byte_end":3256,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"! }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3257,"byte_end":3262,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3263,"byte_end":3266,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! # #[cfg(all(feature = \"macros\", feature = \"json\"))] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3267,"byte_end":3324,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"! // This will serialize","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3325,"byte_end":3351,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"! # let foo =","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3352,"byte_end":3367,"line_start":85,"line_end":85,"column_start":1,"column_end":16}},{"value":"! Foo {bar: 12}","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3368,"byte_end":3385,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"! # ;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3386,"byte_end":3393,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3394,"byte_end":3397,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! // into this JSON","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3398,"byte_end":3419,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"! # let json = r#\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3420,"byte_end":3440,"line_start":90,"line_end":90,"column_start":1,"column_end":21}},{"value":"! {\"bar\": \"12\"}","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3441,"byte_end":3458,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"! # \"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3459,"byte_end":3468,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"! # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3469,"byte_end":3565,"line_start":93,"line_end":93,"column_start":1,"column_end":97}},{"value":"! # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3566,"byte_end":3626,"line_start":94,"line_end":94,"column_start":1,"column_end":61}},{"value":"! # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3627,"byte_end":3634,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3635,"byte_end":3642,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3643,"byte_end":3646,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! ## `skip_serializing_none`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3647,"byte_end":3677,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3678,"byte_end":3681,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! This situation often occurs with JSON, but other formats also support optional fields.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3682,"byte_end":3772,"line_start":100,"line_end":100,"column_start":1,"column_end":91}},{"value":"! If many fields are optional, putting the annotations on the structs can become tedious.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3773,"byte_end":3864,"line_start":101,"line_end":101,"column_start":1,"column_end":92}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3865,"byte_end":3868,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3869,"byte_end":3880,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"! # #[cfg(feature = \"macros\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3881,"byte_end":3913,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"! # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3914,"byte_end":3963,"line_start":105,"line_end":105,"column_start":1,"column_end":50}},{"value":"! # #[cfg(feature = \"macros\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3964,"byte_end":3996,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"! # use serde_with::skip_serializing_none;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":3997,"byte_end":4041,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"! # #[cfg(feature = \"macros\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4042,"byte_end":4074,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"! #[skip_serializing_none]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4075,"byte_end":4103,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"! # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4104,"byte_end":4141,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"! #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4142,"byte_end":4179,"line_start":111,"line_end":111,"column_start":1,"column_end":38}},{"value":"! struct Foo {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4180,"byte_end":4196,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"!     a: Option<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4197,"byte_end":4222,"line_start":113,"line_end":113,"column_start":1,"column_end":26}},{"value":"!     b: Option<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4223,"byte_end":4248,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"!     c: Option<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4249,"byte_end":4274,"line_start":115,"line_end":115,"column_start":1,"column_end":26}},{"value":"!     d: Option<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4275,"byte_end":4300,"line_start":116,"line_end":116,"column_start":1,"column_end":26}},{"value":"!     e: Option<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4301,"byte_end":4326,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"!     f: Option<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4327,"byte_end":4352,"line_start":118,"line_end":118,"column_start":1,"column_end":26}},{"value":"!     g: Option<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4353,"byte_end":4378,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"! }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4379,"byte_end":4384,"line_start":120,"line_end":120,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4385,"byte_end":4388,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! # #[cfg(all(feature = \"macros\", feature = \"json\"))] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4389,"byte_end":4446,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"! // This will serialize","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4447,"byte_end":4473,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"! # let foo =","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4474,"byte_end":4489,"line_start":124,"line_end":124,"column_start":1,"column_end":16}},{"value":"! Foo {a: None, b: None, c: None, d: Some(4), e: None, f: None, g: Some(7)}","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4490,"byte_end":4567,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"! # ;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4568,"byte_end":4575,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4576,"byte_end":4579,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! // into this JSON","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4580,"byte_end":4601,"line_start":128,"line_end":128,"column_start":1,"column_end":22}},{"value":"! # let json = r#\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4602,"byte_end":4622,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"! {\"d\": 4, \"g\": 7}","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4623,"byte_end":4643,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"! # \"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4644,"byte_end":4653,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"! # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4654,"byte_end":4750,"line_start":132,"line_end":132,"column_start":1,"column_end":97}},{"value":"! # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4751,"byte_end":4811,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"! # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4812,"byte_end":4819,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4820,"byte_end":4827,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4828,"byte_end":4831,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! ## Advanced `serde_as` usage","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4832,"byte_end":4864,"line_start":137,"line_end":137,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! This example is mainly supposed to highlight the flexibility of the `serde_as`-annotation compared to [serde's with-annotation][with-annotation].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":4869,"byte_end":5018,"line_start":139,"line_end":139,"column_start":1,"column_end":150}},{"value":"! More details about `serde_as` can be found in the [user guide][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5019,"byte_end":5088,"line_start":140,"line_end":140,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5089,"byte_end":5092,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5093,"byte_end":5104,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"! # #[cfg(all(feature = \"macros\", feature = \"hex\"))]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5105,"byte_end":5159,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"! # use {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5160,"byte_end":5171,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"! #     serde_derive::{Deserialize, Serialize},","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5172,"byte_end":5221,"line_start":145,"line_end":145,"column_start":1,"column_end":50}},{"value":"! #     serde_with::{serde_as, DisplayFromStr, DurationSeconds, hex::Hex},","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5222,"byte_end":5298,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"! #     std::time::Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5299,"byte_end":5329,"line_start":147,"line_end":147,"column_start":1,"column_end":31}},{"value":"! #     std::collections::BTreeMap,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5330,"byte_end":5367,"line_start":148,"line_end":148,"column_start":1,"column_end":38}},{"value":"! # };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5368,"byte_end":5376,"line_start":149,"line_end":149,"column_start":1,"column_end":9}},{"value":"! # #[cfg(all(feature = \"macros\", feature = \"hex\"))]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5377,"byte_end":5431,"line_start":150,"line_end":150,"column_start":1,"column_end":55}},{"value":"! #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5432,"byte_end":5447,"line_start":151,"line_end":151,"column_start":1,"column_end":16}},{"value":"! # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5448,"byte_end":5485,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"! #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5486,"byte_end":5523,"line_start":153,"line_end":153,"column_start":1,"column_end":38}},{"value":"! struct Foo {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5524,"byte_end":5540,"line_start":154,"line_end":154,"column_start":1,"column_end":17}},{"value":"!      // Serialize them into a list of number as seconds","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5541,"byte_end":5600,"line_start":155,"line_end":155,"column_start":1,"column_end":60}},{"value":"!      #[serde_as(as = \"Vec<DurationSeconds>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5601,"byte_end":5650,"line_start":156,"line_end":156,"column_start":1,"column_end":50}},{"value":"!      durations: Vec<Duration>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5651,"byte_end":5685,"line_start":157,"line_end":157,"column_start":1,"column_end":35}},{"value":"!      // We can treat a Vec like a map with duplicates.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5686,"byte_end":5744,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"!      // JSON only allows string keys, so convert i32 to strings","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5745,"byte_end":5812,"line_start":159,"line_end":159,"column_start":1,"column_end":68}},{"value":"!      // The bytes will be hex encoded","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5813,"byte_end":5854,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"!      #[serde_as(as = \"BTreeMap<DisplayFromStr, Hex>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5855,"byte_end":5913,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"!      bytes: Vec<(i32, Vec<u8>)>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5914,"byte_end":5950,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5951,"byte_end":5956,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5957,"byte_end":5960,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! # #[cfg(all(feature = \"macros\", feature = \"json\", feature = \"hex\"))] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":5961,"byte_end":6035,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! // This will serialize","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6036,"byte_end":6062,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"! # let foo =","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6063,"byte_end":6078,"line_start":167,"line_end":167,"column_start":1,"column_end":16}},{"value":"! Foo {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6079,"byte_end":6088,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"!     durations: vec![Duration::new(5, 0), Duration::new(3600, 0), Duration::new(0, 0)],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6089,"byte_end":6179,"line_start":169,"line_end":169,"column_start":1,"column_end":91}},{"value":"!     bytes: vec![","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6180,"byte_end":6200,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"!         (1, vec![0, 1, 2]),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6201,"byte_end":6232,"line_start":171,"line_end":171,"column_start":1,"column_end":32}},{"value":"!         (-100, vec![100, 200, 255]),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6233,"byte_end":6273,"line_start":172,"line_end":172,"column_start":1,"column_end":41}},{"value":"!         (1, vec![0, 111, 222]),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6274,"byte_end":6309,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"!     ],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6310,"byte_end":6320,"line_start":174,"line_end":174,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6321,"byte_end":6326,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"! # ;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6327,"byte_end":6334,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6335,"byte_end":6338,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! // into this JSON","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6339,"byte_end":6360,"line_start":178,"line_end":178,"column_start":1,"column_end":22}},{"value":"! # let json = r#\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6361,"byte_end":6381,"line_start":179,"line_end":179,"column_start":1,"column_end":21}},{"value":"! {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6382,"byte_end":6387,"line_start":180,"line_end":180,"column_start":1,"column_end":6}},{"value":"!     \"durations\": [5, 3600, 0],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6388,"byte_end":6422,"line_start":181,"line_end":181,"column_start":1,"column_end":35}},{"value":"!     \"bytes\": {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6423,"byte_end":6441,"line_start":182,"line_end":182,"column_start":1,"column_end":19}},{"value":"!         \"1\": \"000102\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6442,"byte_end":6468,"line_start":183,"line_end":183,"column_start":1,"column_end":27}},{"value":"!         \"-100\": \"64c8ff\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6469,"byte_end":6498,"line_start":184,"line_end":184,"column_start":1,"column_end":30}},{"value":"!         \"1\": \"006fde\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6499,"byte_end":6524,"line_start":185,"line_end":185,"column_start":1,"column_end":26}},{"value":"!     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6525,"byte_end":6534,"line_start":186,"line_end":186,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6535,"byte_end":6540,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"! # \"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6541,"byte_end":6550,"line_start":188,"line_end":188,"column_start":1,"column_end":10}},{"value":"! # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6551,"byte_end":6647,"line_start":189,"line_end":189,"column_start":1,"column_end":97}},{"value":"! # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6648,"byte_end":6708,"line_start":190,"line_end":190,"column_start":1,"column_end":61}},{"value":"! # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6709,"byte_end":6716,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6717,"byte_end":6724,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6725,"byte_end":6728,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! [`DisplayFromStr`]: https://docs.rs/serde_with/1.6.0/serde_with/struct.DisplayFromStr.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6729,"byte_end":6823,"line_start":194,"line_end":194,"column_start":1,"column_end":95}},{"value":"! [`with_prefix!`]: https://docs.rs/serde_with/1.6.0/serde_with/macro.with_prefix.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6824,"byte_end":6912,"line_start":195,"line_end":195,"column_start":1,"column_end":89}},{"value":"! [display_fromstr]: https://docs.rs/serde_with/1.6.0/serde_with/rust/display_fromstr/index.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":6913,"byte_end":7011,"line_start":196,"line_end":196,"column_start":1,"column_end":99}},{"value":"! [feature flags]: https://docs.rs/serde_with/1.6.0/serde_with/guide/feature_flags/index.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7012,"byte_end":7107,"line_start":197,"line_end":197,"column_start":1,"column_end":96}},{"value":"! [skip_serializing_none]: https://docs.rs/serde_with/1.6.0/serde_with/attr.skip_serializing_none.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7108,"byte_end":7212,"line_start":198,"line_end":198,"column_start":1,"column_end":105}},{"value":"! [StringWithSeparator]: https://docs.rs/serde_with/1.6.0/serde_with/rust/struct.StringWithSeparator.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7213,"byte_end":7320,"line_start":199,"line_end":199,"column_start":1,"column_end":108}},{"value":"! [user guide]: https://docs.rs/serde_with/1.6.0/serde_with/guide/index.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7321,"byte_end":7399,"line_start":200,"line_end":200,"column_start":1,"column_end":79}},{"value":"! [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7400,"byte_end":7461,"line_start":201,"line_end":201,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":3465},{"krate":0,"index":3470},{"krate":0,"index":134},{"krate":0,"index":139}],"decl_id":null,"docs":" Module for [`DeserializeAs`][] implementations","sig":null,"attributes":[{"value":"! Module for [`DeserializeAs`][] implementations","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45305,"byte_end":45355,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45356,"byte_end":45359,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The module contains the [`DeserializeAs`][] trait and helper code.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45360,"byte_end":45430,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! Additionally, it contains implementations of [`DeserializeAs`][] for types defined in the Rust Standard Library or this crate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45431,"byte_end":45561,"line_start":4,"line_end":4,"column_start":1,"column_end":131}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45562,"byte_end":45565,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! You can find more details on how to implement this trait for your types in the documentation of the [`DeserializeAs`][] trait and details about the usage in the [user guide][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45566,"byte_end":45746,"line_start":6,"line_end":6,"column_start":1,"column_end":181}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45747,"byte_end":45750,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [user guide]: crate::guide","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45751,"byte_end":45781,"line_start":8,"line_end":8,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":129},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48180,"byte_end":48193,"line_start":66,"line_end":66,"column_start":11,"column_end":24},"name":"DeserializeAs","qualname":"::de::DeserializeAs","value":"DeserializeAs<'de, T>: Sized","parent":null,"children":[{"krate":0,"index":132}],"decl_id":null,"docs":" A **data structure** that can be deserialized from any data format supported by Serde, analogue to [`Deserialize`].","sig":null,"attributes":[{"value":"/ A **data structure** that can be deserialized from any data format supported by Serde, analogue to [`Deserialize`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45821,"byte_end":45940,"line_start":14,"line_end":14,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45941,"byte_end":45944,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The trait is analogue to the [`serde::Deserialize`][`Deserialize`] trait, with the same meaning of input and output arguments.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":45945,"byte_end":46075,"line_start":16,"line_end":16,"column_start":1,"column_end":131}},{"value":"/ It can and should the implemented using the same code structure as the [`Deserialize`] trait.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46076,"byte_end":46173,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ As such, the same advice for [implementing `Deserialize`][impl-deserialize] applies here.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46174,"byte_end":46267,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46268,"byte_end":46271,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Differences to [`Deserialize`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46272,"byte_end":46308,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46309,"byte_end":46312,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The trait is only required for container-like types or types implementing specific conversion functions.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46313,"byte_end":46421,"line_start":22,"line_end":22,"column_start":1,"column_end":109}},{"value":"/ Container-like types are [`Vec`][], [`BTreeMap`][], but also [`Option`][] and [`Box`][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46422,"byte_end":46514,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ Conversion types deserialize into a different Rust type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46515,"byte_end":46575,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/ For example, [`DisplayFromStr`] uses the [`FromStr`] trait after deserializing a string and [`DurationSeconds`] creates a [`Duration`] from either String or integer values.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46576,"byte_end":46752,"line_start":25,"line_end":25,"column_start":1,"column_end":177}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46753,"byte_end":46756,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This code shows how to implement [`Deserialize`] for [`Box`]:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46757,"byte_end":46822,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46823,"byte_end":46826,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46827,"byte_end":46845,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ impl<'de, T: Deserialize<'de>> Deserialize<'de> for Box<T> {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46846,"byte_end":46910,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/     fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46911,"byte_end":46979,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/     where","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46980,"byte_end":46993,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":46994,"byte_end":47027,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47028,"byte_end":47037,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/         Ok(Box::new(Deserialize::deserialize(deserializer)?))","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47038,"byte_end":47103,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47104,"byte_end":47113,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47114,"byte_end":47119,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47120,"byte_end":47127,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47128,"byte_end":47131,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ and this code shows how to do the same using [`DeserializeAs`][]:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47132,"byte_end":47201,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47202,"byte_end":47205,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47206,"byte_end":47224,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ impl<'de, T, U> DeserializeAs<'de, Box<T>> for Box<U>","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47225,"byte_end":47282,"line_start":43,"line_end":43,"column_start":1,"column_end":58}},{"value":"/ where","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47283,"byte_end":47292,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/     U: DeserializeAs<'de, T>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47293,"byte_end":47326,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47327,"byte_end":47332,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/     fn deserialize_as<D>(deserializer: D) -> Result<Box<T>, D::Error>","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47333,"byte_end":47406,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/     where","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47407,"byte_end":47420,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47421,"byte_end":47454,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47455,"byte_end":47464,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/         Ok(Box::new(","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47465,"byte_end":47489,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/             DeserializeAsWrap::<T, U>::deserialize(deserializer)?.into_inner(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47490,"byte_end":47573,"line_start":52,"line_end":52,"column_start":1,"column_end":84}},{"value":"/         ))","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47574,"byte_end":47588,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47589,"byte_end":47598,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47599,"byte_end":47604,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47605,"byte_end":47612,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47613,"byte_end":47616,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ It uses two type parameters, `T` and `U` instead of only one and performs the deserialization step using the `DeserializeAsWrap` type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47617,"byte_end":47755,"line_start":58,"line_end":58,"column_start":1,"column_end":139}},{"value":"/ The `T` type is the on the Rust side after deserialization, whereas the `U` type determines how the value will be deserialized.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47756,"byte_end":47887,"line_start":59,"line_end":59,"column_start":1,"column_end":132}},{"value":"/ These two changes are usually enough to make a container type implement [`DeserializeAs`][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47888,"byte_end":47984,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47985,"byte_end":47988,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: std::collections::BTreeMap","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":47989,"byte_end":48033,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/ [`Duration`]: std::time::Duration","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48034,"byte_end":48071,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48072,"byte_end":48106,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [impl-deserialize]: https://serde.rs/impl-deserialize.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48107,"byte_end":48169,"line_start":65,"line_end":65,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48284,"byte_end":48298,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"deserialize_as","qualname":"::de::DeserializeAs::deserialize_as","value":"fn <D> (deserializer: D) -> Result<T, D::Error>","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Deserialize this value from the given Serde deserializer.\n","sig":null,"attributes":[{"value":"/ Deserialize this value from the given Serde deserializer.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48215,"byte_end":48276,"line_start":67,"line_end":67,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3465},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48486,"byte_end":48503,"line_start":75,"line_end":75,"column_start":12,"column_end":29},"name":"DeserializeAsWrap","qualname":"::de::DeserializeAsWrap","value":"DeserializeAsWrap {  }","parent":null,"children":[{"krate":0,"index":3468},{"krate":0,"index":3469}],"decl_id":null,"docs":" Helper type to implement [`DeserializeAs`] for container-like types.\n","sig":null,"attributes":[{"value":"/ Helper type to implement [`DeserializeAs`] for container-like types.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48385,"byte_end":48457,"line_start":73,"line_end":73,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48654,"byte_end":48664,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeserializeAsWrap<T, U>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value of type `T`.\n","sig":null,"attributes":[{"value":"/ Return the inner value of type `T`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48603,"byte_end":48642,"line_start":81,"line_end":81,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76073,"byte_end":76099,"line_start":6,"line_end":6,"column_start":11,"column_end":37},"name":"PreventDuplicateInsertsSet","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet","value":"PreventDuplicateInsertsSet<T>","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76112,"byte_end":76115,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76247,"byte_end":76253,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet::insert","value":"fn (&mut self, value: T) -> bool","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Return true if the insert was successful and the value did not exist in the set\n","sig":null,"attributes":[{"value":"/ Return true if the insert was successful and the value did not exist in the set","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76156,"byte_end":76239,"line_start":9,"line_end":9,"column_start":5,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":161},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76297,"byte_end":76323,"line_start":13,"line_end":13,"column_start":11,"column_end":37},"name":"PreventDuplicateInsertsMap","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap","value":"PreventDuplicateInsertsMap<K, V>","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76339,"byte_end":76342,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76472,"byte_end":76478,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap::insert","value":"fn (&mut self, key: K, value: V) -> bool","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Return true if the insert was successful and the key did not exist in the map\n","sig":null,"attributes":[{"value":"/ Return true if the insert was successful and the key did not exist in the map","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76383,"byte_end":76464,"line_start":16,"line_end":16,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":196},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78155,"byte_end":78183,"line_start":7,"line_end":7,"column_start":11,"column_end":39},"name":"DuplicateInsertsFirstWinsSet","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet","value":"DuplicateInsertsFirstWinsSet<T>","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"This is serde's default behavior.\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78093,"byte_end":78144,"line_start":6,"line_end":6,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78196,"byte_end":78199,"line_start":8,"line_end":8,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78324,"byte_end":78330,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet::insert","value":"fn (&mut self, value: T) -> ()","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" Insert the value into the set, if there is not already an existing value\n","sig":null,"attributes":[{"value":"/ Insert the value into the set, if there is not already an existing value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78240,"byte_end":78316,"line_start":10,"line_end":10,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":200},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78366,"byte_end":78394,"line_start":14,"line_end":14,"column_start":11,"column_end":39},"name":"DuplicateInsertsFirstWinsMap","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap","value":"DuplicateInsertsFirstWinsMap<K, V>","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78410,"byte_end":78413,"line_start":15,"line_end":15,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78538,"byte_end":78544,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap::insert","value":"fn (&mut self, key: K, value: V) -> ()","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" Insert the value into the map, if there is not already an existing value\n","sig":null,"attributes":[{"value":"/ Insert the value into the map, if there is not already an existing value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78454,"byte_end":78530,"line_start":17,"line_end":17,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":235},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/last_value_wins.rs","byte_start":80802,"byte_end":80829,"line_start":6,"line_end":6,"column_start":11,"column_end":38},"name":"DuplicateInsertsLastWinsSet","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet","value":"DuplicateInsertsLastWinsSet<T>","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/last_value_wins.rs","byte_start":80842,"byte_end":80845,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet::new","value":"fn (size_hint: Option<usize>) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/last_value_wins.rs","byte_start":80934,"byte_end":80941,"line_start":10,"line_end":10,"column_start":8,"column_end":15},"name":"replace","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet::replace","value":"fn (&mut self, value: T) -> ()","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Insert or replace the existing value\n","sig":null,"attributes":[{"value":"/ Insert or replace the existing value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/last_value_wins.rs","byte_start":80886,"byte_end":80926,"line_start":9,"line_end":9,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":258},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formats","qualname":"::formats","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3496},{"krate":0,"index":3494},{"krate":0,"index":3492},{"krate":0,"index":3490},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3506},{"krate":0,"index":3504},{"krate":0,"index":3502},{"krate":0,"index":3500},{"krate":0,"index":3507},{"krate":0,"index":262},{"krate":0,"index":3508},{"krate":0,"index":3516},{"krate":0,"index":3514},{"krate":0,"index":3512},{"krate":0,"index":3510},{"krate":0,"index":263},{"krate":0,"index":3517},{"krate":0,"index":3525},{"krate":0,"index":3523},{"krate":0,"index":3521},{"krate":0,"index":3519},{"krate":0,"index":264}],"decl_id":null,"docs":" Specify the format and how lenient the deserialization is\n","sig":null,"attributes":[{"value":"! Specify the format and how lenient the deserialization is","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":84953,"byte_end":85014,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":259},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":85442,"byte_end":85448,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Format","qualname":"::formats::Format","value":"Format","parent":null,"children":[],"decl_id":null,"docs":" Specify how to serialize/deserialize a type","sig":null,"attributes":[{"value":"/ Specify how to serialize/deserialize a type","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":85016,"byte_end":85063,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":85064,"byte_end":85067,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The format specifier allows to configure how a value is serialized/deserialized.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":85068,"byte_end":85152,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ For example, you can serialize a timestamp as an integer using the UNIX epoch, as a string containing an integer, or as a string using ISO 8601.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":85153,"byte_end":85301,"line_start":6,"line_end":6,"column_start":1,"column_end":149}},{"value":"/ This [`Format`] traits allows more flexibility in configuring the format without the need to create a new type for each case.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":85302,"byte_end":85431,"line_start":7,"line_end":7,"column_start":1,"column_end":130}}]},{"kind":"Struct","id":{"krate":0,"index":3488},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86489,"byte_end":86498,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Uppercase","qualname":"::formats::Uppercase","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use uppercase characters\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3498},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86536,"byte_end":86545,"line_start":68,"line_end":68,"column_start":5,"column_end":14},"name":"Lowercase","qualname":"::formats::Lowercase","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use lowercase characters\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":262},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86727,"byte_end":86737,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"Strictness","qualname":"::formats::Strictness","value":"Strictness","parent":null,"children":[],"decl_id":null,"docs":" Specify how lenient the deserialization process should be","sig":null,"attributes":[{"value":"/ Specify how lenient the deserialization process should be","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86550,"byte_end":86611,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86612,"byte_end":86615,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Formats which make use of this trait should specify how it affects the deserialization behavior.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86616,"byte_end":86716,"line_start":73,"line_end":73,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":3508},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86853,"byte_end":86859,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Strict","qualname":"::formats::Strict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use strict deserialization behavior, see [`Strictness`].\n","sig":null,"attributes":[{"value":"/ Use strict deserialization behavior, see [`Strictness`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86742,"byte_end":86802,"line_start":76,"line_end":76,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3517},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":87007,"byte_end":87015,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"Flexible","qualname":"::formats::Flexible","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use a flexible deserialization behavior, see [`Strictness`].\n","sig":null,"attributes":[{"value":"/ Use a flexible deserialization behavior, see [`Strictness`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86892,"byte_end":86956,"line_start":81,"line_end":81,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":265},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rust","qualname":"::rust","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":281},{"krate":0,"index":295},{"krate":0,"index":316},{"krate":0,"index":3526},{"krate":0,"index":3575},{"krate":0,"index":3571},{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3556},{"krate":0,"index":3559},{"krate":0,"index":3552},{"krate":0,"index":3544},{"krate":0,"index":3539},{"krate":0,"index":3535},{"krate":0,"index":3531},{"krate":0,"index":356},{"krate":0,"index":367},{"krate":0,"index":376},{"krate":0,"index":385},{"krate":0,"index":409},{"krate":0,"index":437},{"krate":0,"index":461},{"krate":0,"index":485},{"krate":0,"index":513},{"krate":0,"index":537},{"krate":0,"index":567},{"krate":0,"index":591},{"krate":0,"index":638},{"krate":0,"index":659},{"krate":0,"index":668}],"decl_id":null,"docs":" De/Serialization for Rust's builtin and std types\n","sig":null,"attributes":[{"value":"! De/Serialization for Rust's builtin and std types","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87050,"byte_end":87103,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":295},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89416,"byte_end":89431,"line_start":76,"line_end":76,"column_start":9,"column_end":24},"name":"display_fromstr","qualname":"::rust::display_fromstr","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":313}],"decl_id":null,"docs":" De/Serialize using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize using [`Display`] and [`FromStr`] implementation","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87488,"byte_end":87553,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87554,"byte_end":87557,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This allows to deserialize a string as a number.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87558,"byte_end":87610,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ It can be very useful for serialization formats like JSON, which do not support integer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87611,"byte_end":87702,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ numbers and have to resort to strings to represent them.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87703,"byte_end":87763,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87764,"byte_end":87767,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If you control the type you want to de/serialize, you can instead use the two derive macros, [`SerializeDisplay`] and [`DeserializeFromStr`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87768,"byte_end":87913,"line_start":24,"line_end":24,"column_start":1,"column_end":146}},{"value":"/ They properly implement the traits [`Serialize`] and [`Deserialize`] such that user of the type no longer have to use the with-attribute.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":87914,"byte_end":88055,"line_start":25,"line_end":25,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88056,"byte_end":88059,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88060,"byte_end":88091,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88092,"byte_end":88095,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DisplayFromStr`] and using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88096,"byte_end":88209,"line_start":29,"line_end":29,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88210,"byte_end":88213,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88214,"byte_end":88225,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88226,"byte_end":88260,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88261,"byte_end":88297,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88298,"byte_end":88347,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88348,"byte_end":88353,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88354,"byte_end":88369,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88370,"byte_end":88396,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88397,"byte_end":88411,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88412,"byte_end":88454,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/     value: mime::Mime,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88455,"byte_end":88481,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88482,"byte_end":88487,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88488,"byte_end":88495,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88496,"byte_end":88503,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88504,"byte_end":88507,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88508,"byte_end":88522,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88523,"byte_end":88526,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88527,"byte_end":88538,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88539,"byte_end":88588,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88589,"byte_end":88594,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88595,"byte_end":88632,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88633,"byte_end":88647,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88648,"byte_end":88708,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/     mime: mime::Mime,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88709,"byte_end":88734,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88735,"byte_end":88795,"line_start":54,"line_end":54,"column_start":1,"column_end":61}},{"value":"/     number: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88796,"byte_end":88816,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88817,"byte_end":88822,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88823,"byte_end":88826,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r#\"{","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88827,"byte_end":88867,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     \"mime\": \"text/plain\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88868,"byte_end":88897,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/     \"number\": \"159\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88898,"byte_end":88921,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/ }\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88922,"byte_end":88940,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(mime::TEXT_PLAIN, v.mime);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88941,"byte_end":88982,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(159, v.number);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":88983,"byte_end":89013,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89014,"byte_end":89017,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89018,"byte_end":89033,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/     mime: mime::STAR_STAR,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89034,"byte_end":89064,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/     number: 777,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89065,"byte_end":89085,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89086,"byte_end":89092,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"mime\":\"*/*\",\"number\":\"777\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89093,"byte_end":89180,"line_start":69,"line_end":69,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89181,"byte_end":89188,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89189,"byte_end":89192,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`DeserializeFromStr`]: serde_with_macros::DeserializeFromStr","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89193,"byte_end":89258,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/ [`DisplayFromStr`]: crate::DisplayFromStr","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89259,"byte_end":89304,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89305,"byte_end":89345,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/ [`SerializeDisplay`]: serde_with_macros::SerializeDisplay","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89346,"byte_end":89407,"line_start":75,"line_end":75,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":298},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89531,"byte_end":89542,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::display_fromstr::deserialize","value":"fn <'de, D, T> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T using [`FromStr`]\n","sig":null,"attributes":[{"value":"/ Deserialize T using [`FromStr`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89484,"byte_end":89519,"line_start":80,"line_end":80,"column_start":5,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90377,"byte_end":90386,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::display_fromstr::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize T using [Display]\n","sig":null,"attributes":[{"value":"/ Serialize T using [Display]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90334,"byte_end":90365,"line_start":111,"line_end":111,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92799,"byte_end":92818,"line_start":187,"line_end":187,"column_start":9,"column_end":28},"name":"seq_display_fromstr","qualname":"::rust::seq_display_fromstr","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":326},{"krate":0,"index":335},{"krate":0,"index":351}],"decl_id":null,"docs":" De/Serialize sequences using [`FromIterator`] and [`IntoIterator`] implementation for it and [`Display`] and [`FromStr`] implementation for each element","sig":null,"attributes":[{"value":"/ De/Serialize sequences using [`FromIterator`] and [`IntoIterator`] implementation for it and [`Display`] and [`FromStr`] implementation for each element","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90568,"byte_end":90724,"line_start":121,"line_end":121,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90725,"byte_end":90728,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This allows to serialize and deserialize collections with elements which can be represented as strings.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90729,"byte_end":90836,"line_start":123,"line_end":123,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90837,"byte_end":90840,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90841,"byte_end":90872,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90873,"byte_end":90876,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DisplayFromStr`] and using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90877,"byte_end":90990,"line_start":127,"line_end":127,"column_start":1,"column_end":114}},{"value":"/ Instead of","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":90991,"byte_end":91005,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91006,"byte_end":91009,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91010,"byte_end":91028,"line_start":130,"line_end":130,"column_start":1,"column_end":19}},{"value":"/ #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91029,"byte_end":91089,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/ addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91090,"byte_end":91124,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91125,"byte_end":91132,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ you can write:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91133,"byte_end":91151,"line_start":134,"line_end":134,"column_start":1,"column_end":19}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91152,"byte_end":91170,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ #[serde_as(as = \"BTreeSet<DisplayFromStr>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91171,"byte_end":91219,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/ addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91220,"byte_end":91254,"line_start":137,"line_end":137,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91255,"byte_end":91262,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91263,"byte_end":91266,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This works for any container type, so also for `Vec`:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91267,"byte_end":91324,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91325,"byte_end":91343,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ #[serde_as(as = \"Vec<DisplayFromStr>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91344,"byte_end":91387,"line_start":142,"line_end":142,"column_start":1,"column_end":44}},{"value":"/ bs: Vec<bool>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91388,"byte_end":91406,"line_start":143,"line_end":143,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91407,"byte_end":91414,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91415,"byte_end":91418,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91419,"byte_end":91433,"line_start":146,"line_end":146,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91434,"byte_end":91437,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91438,"byte_end":91445,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91446,"byte_end":91495,"line_start":149,"line_end":149,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91496,"byte_end":91501,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91502,"byte_end":91537,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91538,"byte_end":91565,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91566,"byte_end":91569,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91570,"byte_end":91607,"line_start":154,"line_end":154,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91608,"byte_end":91622,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91623,"byte_end":91687,"line_start":156,"line_end":156,"column_start":1,"column_end":65}},{"value":"/     addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91688,"byte_end":91726,"line_start":157,"line_end":157,"column_start":1,"column_end":39}},{"value":"/     #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91727,"byte_end":91791,"line_start":158,"line_end":158,"column_start":1,"column_end":65}},{"value":"/     bs: Vec<bool>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91792,"byte_end":91814,"line_start":159,"line_end":159,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91815,"byte_end":91820,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91821,"byte_end":91824,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r#\"{","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91825,"byte_end":91865,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/     \"addresses\": [\"192.168.2.1\", \"192.168.2.2\", \"192.168.1.1\", \"192.168.2.2\"],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91866,"byte_end":91948,"line_start":163,"line_end":163,"column_start":1,"column_end":83}},{"value":"/     \"bs\": [\"true\", \"false\"]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91949,"byte_end":91980,"line_start":164,"line_end":164,"column_start":1,"column_end":32}},{"value":"/ }\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":91981,"byte_end":91999,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(v.addresses.len(), 3);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92000,"byte_end":92037,"line_start":166,"line_end":166,"column_start":1,"column_end":38}},{"value":"/ assert!(v.addresses.contains(&Ipv4Addr::new(192, 168, 2, 1)));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92038,"byte_end":92104,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/ assert!(v.addresses.contains(&Ipv4Addr::new(192, 168, 2, 2)));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92105,"byte_end":92171,"line_start":168,"line_end":168,"column_start":1,"column_end":67}},{"value":"/ assert!(!v.addresses.contains(&Ipv4Addr::new(192, 168, 1, 2)));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92172,"byte_end":92239,"line_start":169,"line_end":169,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(v.bs.len(), 2);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92240,"byte_end":92270,"line_start":170,"line_end":170,"column_start":1,"column_end":31}},{"value":"/ assert!(v.bs[0]);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92271,"byte_end":92292,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/ assert!(!v.bs[1]);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92293,"byte_end":92315,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92316,"byte_end":92319,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92320,"byte_end":92335,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/     addresses: vec![","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92336,"byte_end":92360,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/         Ipv4Addr::new(127, 53, 0, 1),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92361,"byte_end":92402,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/         Ipv4Addr::new(127, 53, 1, 1),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92403,"byte_end":92444,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/         Ipv4Addr::new(127, 53, 0, 2)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92445,"byte_end":92485,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/     ].into_iter().collect(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92486,"byte_end":92518,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/     bs: vec![false, true],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92519,"byte_end":92549,"line_start":180,"line_end":180,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92550,"byte_end":92556,"line_start":181,"line_end":181,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"addresses\":[\"127.53.0.1\",\"127.53.0.2\",\"127.53.1.1\"],\"bs\":[\"false\",\"true\"]}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92557,"byte_end":92691,"line_start":182,"line_end":182,"column_start":1,"column_end":135}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92692,"byte_end":92699,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92700,"byte_end":92703,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`DisplayFromStr`]: crate::DisplayFromStr","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92704,"byte_end":92749,"line_start":185,"line_end":185,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":92750,"byte_end":92790,"line_start":186,"line_end":186,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":93185,"byte_end":93196,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::seq_display_fromstr::deserialize","value":"fn <'de, D, T, I> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize collection T using [FromIterator] and [FromStr] for each element\n","sig":null,"attributes":[{"value":"/ Deserialize collection T using [FromIterator] and [FromStr] for each element","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":93093,"byte_end":93173,"line_start":199,"line_end":199,"column_start":5,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":94496,"byte_end":94505,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::seq_display_fromstr::serialize","value":"fn <S, T, I> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize collection T using [IntoIterator] and [Display] for each element\n","sig":null,"attributes":[{"value":"/ Serialize collection T using [IntoIterator] and [Display] for each element","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":94406,"byte_end":94484,"line_start":242,"line_end":242,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3526},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96990,"byte_end":97009,"line_start":318,"line_end":318,"column_start":12,"column_end":31},"name":"StringWithSeparator","qualname":"::rust::StringWithSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize a delimited collection using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize a delimited collection using [`Display`] and [`FromStr`] implementation","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":94928,"byte_end":95016,"line_start":259,"line_end":259,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95017,"byte_end":95020,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ You can define an arbitrary separator, by specifying a type which implements [`Separator`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95021,"byte_end":95116,"line_start":261,"line_end":261,"column_start":1,"column_end":96}},{"value":"/ Some common ones, like space and comma are already predefined and you can find them [here][Separator].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95117,"byte_end":95223,"line_start":262,"line_end":262,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95224,"byte_end":95227,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ An empty string deserializes as an empty collection.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95228,"byte_end":95284,"line_start":264,"line_end":264,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95285,"byte_end":95288,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95289,"byte_end":95320,"line_start":266,"line_end":266,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95321,"byte_end":95324,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The same functionality can also be expressed using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95325,"byte_end":95403,"line_start":268,"line_end":268,"column_start":1,"column_end":79}},{"value":"/ The usage is slightly different.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95404,"byte_end":95440,"line_start":269,"line_end":269,"column_start":1,"column_end":37}},{"value":"/ `StringWithSeparator` takes a second type, which needs to implement [`Display`]+[`FromStr`] and constitutes the inner type of the collection.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95441,"byte_end":95586,"line_start":270,"line_end":270,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95587,"byte_end":95590,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95591,"byte_end":95602,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95603,"byte_end":95637,"line_start":273,"line_end":273,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95638,"byte_end":95674,"line_start":274,"line_end":274,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, SpaceSeparator, StringWithSeparator};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95675,"byte_end":95745,"line_start":275,"line_end":275,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95746,"byte_end":95751,"line_start":276,"line_end":276,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95752,"byte_end":95767,"line_start":277,"line_end":277,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95768,"byte_end":95794,"line_start":278,"line_end":278,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95795,"byte_end":95809,"line_start":279,"line_end":279,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"StringWithSeparator::<SpaceSeparator, String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95810,"byte_end":95883,"line_start":280,"line_end":280,"column_start":1,"column_end":74}},{"value":"/     tags: Vec<String>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95884,"byte_end":95910,"line_start":281,"line_end":281,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95911,"byte_end":95916,"line_start":282,"line_end":282,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95917,"byte_end":95924,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95925,"byte_end":95932,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95933,"byte_end":95936,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95937,"byte_end":95951,"line_start":286,"line_end":286,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95952,"byte_end":95955,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95956,"byte_end":95963,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":95964,"byte_end":96013,"line_start":289,"line_end":289,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96014,"byte_end":96019,"line_start":290,"line_end":290,"column_start":1,"column_end":6}},{"value":"/ use serde_with::{CommaSeparator, SpaceSeparator};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96020,"byte_end":96073,"line_start":291,"line_end":291,"column_start":1,"column_end":54}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96074,"byte_end":96109,"line_start":292,"line_end":292,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96110,"byte_end":96113,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96114,"byte_end":96151,"line_start":294,"line_end":294,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96152,"byte_end":96166,"line_start":295,"line_end":295,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::StringWithSeparator::<SpaceSeparator>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96167,"byte_end":96249,"line_start":296,"line_end":296,"column_start":1,"column_end":83}},{"value":"/     tags: Vec<String>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96250,"byte_end":96276,"line_start":297,"line_end":297,"column_start":1,"column_end":27}},{"value":"/     #[serde(with = \"serde_with::rust::StringWithSeparator::<CommaSeparator>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96277,"byte_end":96359,"line_start":298,"line_end":298,"column_start":1,"column_end":83}},{"value":"/     more_tags: BTreeSet<String>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96360,"byte_end":96396,"line_start":299,"line_end":299,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96397,"byte_end":96402,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96403,"byte_end":96406,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r##\"{","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96407,"byte_end":96448,"line_start":302,"line_end":302,"column_start":1,"column_end":42}},{"value":"/     \"tags\": \"#hello #world\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96449,"byte_end":96481,"line_start":303,"line_end":303,"column_start":1,"column_end":33}},{"value":"/     \"more_tags\": \"foo,bar,bar\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96482,"byte_end":96516,"line_start":304,"line_end":304,"column_start":1,"column_end":35}},{"value":"/ }\"##).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96517,"byte_end":96536,"line_start":305,"line_end":305,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(vec![\"#hello\", \"#world\"], v.tags);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96537,"byte_end":96586,"line_start":306,"line_end":306,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(2, v.more_tags.len());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96587,"byte_end":96624,"line_start":307,"line_end":307,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96625,"byte_end":96628,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96629,"byte_end":96644,"line_start":309,"line_end":309,"column_start":1,"column_end":16}},{"value":"/     tags: vec![\"1\".to_string(), \"2\".to_string(), \"3\".to_string()],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96645,"byte_end":96715,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"/     more_tags: BTreeSet::new(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96716,"byte_end":96751,"line_start":311,"line_end":311,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96752,"byte_end":96758,"line_start":312,"line_end":312,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"tags\":\"1 2 3\",\"more_tags\":\"\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96759,"byte_end":96848,"line_start":313,"line_end":313,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96849,"byte_end":96856,"line_start":314,"line_end":314,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96857,"byte_end":96860,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":96861,"byte_end":96901,"line_start":316,"line_end":316,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":97187,"byte_end":97196,"line_start":325,"line_end":325,"column_start":12,"column_end":21},"name":"serialize","qualname":"<StringWithSeparator<Sep>>::serialize","value":"fn <S, T, V> (values: T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize collection into a string with separator symbol\n","sig":null,"attributes":[{"value":"/ Serialize collection into a string with separator symbol","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":97115,"byte_end":97175,"line_start":324,"line_end":324,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":97796,"byte_end":97807,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<StringWithSeparator<Sep>>::deserialize","value":"fn <'de, D, T, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a collection from a string with separator symbol\n","sig":null,"attributes":[{"value":"/ Deserialize a collection from a string with separator symbol","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":97720,"byte_end":97784,"line_start":344,"line_end":344,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":367},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100011,"byte_end":100024,"line_start":406,"line_end":406,"column_start":9,"column_end":22},"name":"double_option","qualname":"::rust::double_option","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":373}],"decl_id":null,"docs":" Makes a distinction between a missing, unset, or existing value","sig":null,"attributes":[{"value":"/ Makes a distinction between a missing, unset, or existing value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98299,"byte_end":98366,"line_start":364,"line_end":364,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98367,"byte_end":98370,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Some serialization formats make a distinction between missing fields, fields with a `null`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98371,"byte_end":98465,"line_start":366,"line_end":366,"column_start":1,"column_end":95}},{"value":"/ value, and existing values. One such format is JSON. By default it is not easily possible to","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98466,"byte_end":98562,"line_start":367,"line_end":367,"column_start":1,"column_end":97}},{"value":"/ differentiate between a missing value and a field which is `null`, as they deserialize to the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98563,"byte_end":98660,"line_start":368,"line_end":368,"column_start":1,"column_end":98}},{"value":"/ same value. This helper changes it, by using an `Option<Option<T>>` to deserialize into.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98661,"byte_end":98753,"line_start":369,"line_end":369,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98754,"byte_end":98757,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ * `None`: Represents a missing value.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98758,"byte_end":98799,"line_start":371,"line_end":371,"column_start":1,"column_end":42}},{"value":"/ * `Some(None)`: Represents a `null` value.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98800,"byte_end":98846,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ * `Some(Some(value))`: Represents an existing value.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98847,"byte_end":98903,"line_start":373,"line_end":373,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98904,"byte_end":98907,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98908,"byte_end":98922,"line_start":375,"line_end":375,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98923,"byte_end":98926,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98927,"byte_end":98938,"line_start":377,"line_end":377,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98939,"byte_end":98988,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98989,"byte_end":98994,"line_start":379,"line_end":379,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, PartialEq, Eq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":98995,"byte_end":99032,"line_start":380,"line_end":380,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99033,"byte_end":99070,"line_start":381,"line_end":381,"column_start":1,"column_end":38}},{"value":"/ struct Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99071,"byte_end":99087,"line_start":382,"line_end":382,"column_start":1,"column_end":17}},{"value":"/     #[serde(","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99088,"byte_end":99104,"line_start":383,"line_end":383,"column_start":1,"column_end":17}},{"value":"/         default,                                    // <- important for deserialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99105,"byte_end":99196,"line_start":384,"line_end":384,"column_start":1,"column_end":92}},{"value":"/         skip_serializing_if = \"Option::is_none\",    // <- important for serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99197,"byte_end":99286,"line_start":385,"line_end":385,"column_start":1,"column_end":90}},{"value":"/         with = \"::serde_with::rust::double_option\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99287,"byte_end":99342,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/     )]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99343,"byte_end":99353,"line_start":387,"line_end":387,"column_start":1,"column_end":11}},{"value":"/     a: Option<Option<u8>>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99354,"byte_end":99384,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99385,"byte_end":99390,"line_start":389,"line_end":389,"column_start":1,"column_end":6}},{"value":"/ // Missing Value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99391,"byte_end":99411,"line_start":390,"line_end":390,"column_start":1,"column_end":21}},{"value":"/ let s = r#\"{}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99412,"byte_end":99432,"line_start":391,"line_end":391,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(Doc {a: None}, serde_json::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99433,"byte_end":99497,"line_start":392,"line_end":392,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: None}).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99498,"byte_end":99564,"line_start":393,"line_end":393,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99565,"byte_end":99568,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ // Unset Value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99569,"byte_end":99587,"line_start":395,"line_end":395,"column_start":1,"column_end":19}},{"value":"/ let s = r#\"{\"a\":null}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99588,"byte_end":99616,"line_start":396,"line_end":396,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(Doc {a: Some(None)}, serde_json::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99617,"byte_end":99687,"line_start":397,"line_end":397,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: Some(None)}).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99688,"byte_end":99760,"line_start":398,"line_end":398,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99761,"byte_end":99764,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ // Existing Value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99765,"byte_end":99786,"line_start":400,"line_end":400,"column_start":1,"column_end":22}},{"value":"/ let s = r#\"{\"a\":5}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99787,"byte_end":99812,"line_start":401,"line_end":401,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(Doc {a: Some(Some(5))}, serde_json::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99813,"byte_end":99886,"line_start":402,"line_end":402,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: Some(Some(5))}).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99887,"byte_end":99962,"line_start":403,"line_end":403,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99963,"byte_end":99970,"line_start":404,"line_end":404,"column_start":1,"column_end":8}},{"value":"allow(clippy :: option_option)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":99971,"byte_end":100002,"line_start":405,"line_end":405,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":369},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100117,"byte_end":100128,"line_start":410,"line_end":410,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::double_option::deserialize","value":"fn <'de, T, D> (deserializer: D) -> Result<Option<Option<T>>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize potentially non-existing optional value\n","sig":null,"attributes":[{"value":"/ Deserialize potentially non-existing optional value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100050,"byte_end":100105,"line_start":409,"line_end":409,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":373},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100379,"byte_end":100388,"line_start":419,"line_end":419,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::double_option::serialize","value":"fn <S, T> (values: &Option<Option<T>>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize optional value\n","sig":null,"attributes":[{"value":"/ Serialize optional value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100339,"byte_end":100367,"line_start":418,"line_end":418,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":376},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102853,"byte_end":102867,"line_start":491,"line_end":491,"column_start":9,"column_end":23},"name":"unwrap_or_skip","qualname":"::rust::unwrap_or_skip","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":382}],"decl_id":null,"docs":" Serialize inner value if [`Some`]`(T)`. If [`None`], serialize the unit struct `()`.","sig":null,"attributes":[{"value":"/ Serialize inner value if [`Some`]`(T)`. If [`None`], serialize the unit struct `()`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100732,"byte_end":100820,"line_start":432,"line_end":432,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100821,"byte_end":100824,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ When used in conjunction with `skip_serializing_if = \"Option::is_none\"` and","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100825,"byte_end":100904,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/ `default`, you can build an optional value by skipping if it is [`None`], or serializing its","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":100905,"byte_end":101001,"line_start":435,"line_end":435,"column_start":1,"column_end":97}},{"value":"/ inner value if [`Some`]`(T)`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101002,"byte_end":101035,"line_start":436,"line_end":436,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101036,"byte_end":101039,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ Not all serialization formats easily support optional values.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101040,"byte_end":101105,"line_start":438,"line_end":438,"column_start":1,"column_end":66}},{"value":"/ While JSON uses the [`Option`] type to represent optional values and only serializes the inner","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101106,"byte_end":101204,"line_start":439,"line_end":439,"column_start":1,"column_end":99}},{"value":"/ part of the [`Some`]`()`, other serialization formats, such as [RON][], choose to serialize the","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101205,"byte_end":101304,"line_start":440,"line_end":440,"column_start":1,"column_end":100}},{"value":"/ [`Some`] around a value.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101305,"byte_end":101333,"line_start":441,"line_end":441,"column_start":1,"column_end":29}},{"value":"/ This helper helps building a truly optional value for such serializers.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101334,"byte_end":101409,"line_start":442,"line_end":442,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101410,"byte_end":101413,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ [RON]: https://github.com/ron-rs/ron","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101414,"byte_end":101454,"line_start":444,"line_end":444,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101455,"byte_end":101458,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101459,"byte_end":101472,"line_start":446,"line_end":446,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101473,"byte_end":101476,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101477,"byte_end":101488,"line_start":448,"line_end":448,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101489,"byte_end":101538,"line_start":449,"line_end":449,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101539,"byte_end":101544,"line_start":450,"line_end":450,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101545,"byte_end":101582,"line_start":451,"line_end":451,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101583,"byte_end":101620,"line_start":452,"line_end":452,"column_start":1,"column_end":38}},{"value":"/ struct Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101621,"byte_end":101637,"line_start":453,"line_end":453,"column_start":1,"column_end":17}},{"value":"/     mandatory: usize,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101638,"byte_end":101663,"line_start":454,"line_end":454,"column_start":1,"column_end":26}},{"value":"/     #[serde(","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101664,"byte_end":101680,"line_start":455,"line_end":455,"column_start":1,"column_end":17}},{"value":"/         default,                                    // <- important for deserialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101681,"byte_end":101772,"line_start":456,"line_end":456,"column_start":1,"column_end":92}},{"value":"/         skip_serializing_if = \"Option::is_none\",    // <- important for serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101773,"byte_end":101862,"line_start":457,"line_end":457,"column_start":1,"column_end":90}},{"value":"/         with = \"::serde_with::rust::unwrap_or_skip\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101863,"byte_end":101919,"line_start":458,"line_end":458,"column_start":1,"column_end":57}},{"value":"/     )]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101920,"byte_end":101930,"line_start":459,"line_end":459,"column_start":1,"column_end":11}},{"value":"/     optional: Option<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101931,"byte_end":101963,"line_start":460,"line_end":460,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101964,"byte_end":101969,"line_start":461,"line_end":461,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101970,"byte_end":101973,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ // Transparently add/remove Some() wrapper","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":101974,"byte_end":102020,"line_start":463,"line_end":463,"column_start":1,"column_end":47}},{"value":"/ # let pretty_config = ron::ser::PrettyConfig::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102021,"byte_end":102076,"line_start":464,"line_end":464,"column_start":1,"column_end":56}},{"value":"/ #     .with_new_line(\"\\n\".into());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102077,"byte_end":102115,"line_start":465,"line_end":465,"column_start":1,"column_end":39}},{"value":"/ let s = r#\"(","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102116,"byte_end":102132,"line_start":466,"line_end":466,"column_start":1,"column_end":17}},{"value":"/     mandatory: 1,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102133,"byte_end":102154,"line_start":467,"line_end":467,"column_start":1,"column_end":22}},{"value":"/     optional: 2,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102155,"byte_end":102175,"line_start":468,"line_end":468,"column_start":1,"column_end":21}},{"value":"/ )\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102176,"byte_end":102184,"line_start":469,"line_end":469,"column_start":1,"column_end":9}},{"value":"/ let v = Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102185,"byte_end":102202,"line_start":470,"line_end":470,"column_start":1,"column_end":18}},{"value":"/     mandatory: 1,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102203,"byte_end":102224,"line_start":471,"line_end":471,"column_start":1,"column_end":22}},{"value":"/     optional: Some(2),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102225,"byte_end":102251,"line_start":472,"line_end":472,"column_start":1,"column_end":27}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102252,"byte_end":102258,"line_start":473,"line_end":473,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, ron::de::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102259,"byte_end":102308,"line_start":474,"line_end":474,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, ron::ser::to_string_pretty(&v, pretty_config).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102309,"byte_end":102383,"line_start":475,"line_end":475,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102384,"byte_end":102387,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ // Missing values are deserialized as `None`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102388,"byte_end":102436,"line_start":477,"line_end":477,"column_start":1,"column_end":49}},{"value":"/ // while `None` values are skipped during serialization.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102437,"byte_end":102497,"line_start":478,"line_end":478,"column_start":1,"column_end":61}},{"value":"/ # let pretty_config = ron::ser::PrettyConfig::new()","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102498,"byte_end":102553,"line_start":479,"line_end":479,"column_start":1,"column_end":56}},{"value":"/ #     .with_new_line(\"\\n\".into());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102554,"byte_end":102592,"line_start":480,"line_end":480,"column_start":1,"column_end":39}},{"value":"/ let s = r#\"(","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102593,"byte_end":102609,"line_start":481,"line_end":481,"column_start":1,"column_end":17}},{"value":"/     mandatory: 1,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102610,"byte_end":102631,"line_start":482,"line_end":482,"column_start":1,"column_end":22}},{"value":"/ )\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102632,"byte_end":102640,"line_start":483,"line_end":483,"column_start":1,"column_end":9}},{"value":"/ let v = Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102641,"byte_end":102658,"line_start":484,"line_end":484,"column_start":1,"column_end":18}},{"value":"/     mandatory: 1,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102659,"byte_end":102680,"line_start":485,"line_end":485,"column_start":1,"column_end":22}},{"value":"/     optional: None,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102681,"byte_end":102704,"line_start":486,"line_end":486,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102705,"byte_end":102711,"line_start":487,"line_end":487,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, ron::de::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102712,"byte_end":102761,"line_start":488,"line_end":488,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, ron::ser::to_string_pretty(&v, pretty_config).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102762,"byte_end":102836,"line_start":489,"line_end":489,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102837,"byte_end":102844,"line_start":490,"line_end":490,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":378},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102945,"byte_end":102956,"line_start":495,"line_end":495,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::unwrap_or_skip::deserialize","value":"fn <'de, D, T> (deserializer: D) -> Result<Option<T>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize value wrapped in Some(T)\n","sig":null,"attributes":[{"value":"/ Deserialize value wrapped in Some(T)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":102893,"byte_end":102933,"line_start":494,"line_end":494,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103212,"byte_end":103221,"line_start":504,"line_end":504,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::unwrap_or_skip::serialize","value":"fn <T, S> (option: &Option<T>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize value if Some(T), unit struct if None\n","sig":null,"attributes":[{"value":"/ Serialize value if Some(T), unit struct if None","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103149,"byte_end":103200,"line_start":503,"line_end":503,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":385},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104833,"byte_end":104862,"line_start":555,"line_end":555,"column_start":9,"column_end":38},"name":"sets_duplicate_value_is_error","qualname":"::rust::sets_duplicate_value_is_error","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":406}],"decl_id":null,"docs":" Ensure no duplicate values exist in a set.","sig":null,"attributes":[{"value":"/ Ensure no duplicate values exist in a set.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103502,"byte_end":103548,"line_start":517,"line_end":517,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103549,"byte_end":103552,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate values for a set exist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103553,"byte_end":103648,"line_start":519,"line_end":519,"column_start":1,"column_end":96}},{"value":"/ Sometimes it is desirable to know when such an event happens, as the first value is overwritten","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103649,"byte_end":103748,"line_start":520,"line_end":520,"column_start":1,"column_end":100}},{"value":"/ and it can indicate an error in the serialized data.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103749,"byte_end":103805,"line_start":521,"line_end":521,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103806,"byte_end":103809,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ This helper returns an error if two identical values exist in a set.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103810,"byte_end":103882,"line_start":523,"line_end":523,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103883,"byte_end":103886,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashSet`] and the [`BTreeSet`] from the standard library.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103887,"byte_end":103987,"line_start":525,"line_end":525,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103988,"byte_end":103991,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: std::collections::HashSet","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":103992,"byte_end":104034,"line_start":527,"line_end":527,"column_start":1,"column_end":43}},{"value":"/ [`BTreeSet`]: std::collections::HashSet","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104035,"byte_end":104078,"line_start":528,"line_end":528,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104079,"byte_end":104082,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104083,"byte_end":104096,"line_start":530,"line_end":530,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104097,"byte_end":104100,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104101,"byte_end":104112,"line_start":532,"line_end":532,"column_start":1,"column_end":12}},{"value":"/ # use std::{collections::HashSet, iter::FromIterator};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104113,"byte_end":104171,"line_start":533,"line_end":533,"column_start":1,"column_end":59}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104172,"byte_end":104208,"line_start":534,"line_end":534,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104209,"byte_end":104214,"line_start":535,"line_end":535,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104215,"byte_end":104252,"line_start":536,"line_end":536,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104253,"byte_end":104279,"line_start":537,"line_end":537,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104280,"byte_end":104296,"line_start":538,"line_end":538,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::sets_duplicate_value_is_error\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104297,"byte_end":104373,"line_start":539,"line_end":539,"column_start":1,"column_end":77}},{"value":"/     set: HashSet<usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104374,"byte_end":104402,"line_start":540,"line_end":540,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104403,"byte_end":104408,"line_start":541,"line_end":541,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104409,"byte_end":104412,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ // Sets are serialized normally,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104413,"byte_end":104449,"line_start":543,"line_end":543,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"set\": [1, 2, 3, 4]}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104450,"byte_end":104489,"line_start":544,"line_end":544,"column_start":1,"column_end":40}},{"value":"/ let v = Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104490,"byte_end":104507,"line_start":545,"line_end":545,"column_start":1,"column_end":18}},{"value":"/     set: HashSet::from_iter(vec![1, 2, 3, 4]),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104508,"byte_end":104558,"line_start":546,"line_end":546,"column_start":1,"column_end":51}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104559,"byte_end":104565,"line_start":547,"line_end":547,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104566,"byte_end":104618,"line_start":548,"line_end":548,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104619,"byte_end":104622,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate values, like the `1`, exist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104623,"byte_end":104691,"line_start":550,"line_end":550,"column_start":1,"column_end":69}},{"value":"/ let s = r#\"{\"set\": [1, 2, 3, 4, 1]}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104692,"byte_end":104734,"line_start":551,"line_end":551,"column_start":1,"column_end":43}},{"value":"/ let res: Result<Doc, _> = serde_json::from_str(s);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104735,"byte_end":104789,"line_start":552,"line_end":552,"column_start":1,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104790,"byte_end":104816,"line_start":553,"line_end":553,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104817,"byte_end":104824,"line_start":554,"line_end":554,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":388},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":105025,"byte_end":105036,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_duplicate_value_is_error::deserialize","value":"fn <'de, D, T, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and return an error on duplicate values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and return an error on duplicate values","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":104952,"byte_end":105013,"line_start":559,"line_end":559,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106450,"byte_end":106459,"line_start":607,"line_end":607,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_duplicate_value_is_error::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106389,"byte_end":106438,"line_start":606,"line_end":606,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":409},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":108006,"byte_end":108033,"line_start":657,"line_end":657,"column_start":9,"column_end":36},"name":"maps_duplicate_key_is_error","qualname":"::rust::maps_duplicate_key_is_error","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":434}],"decl_id":null,"docs":" Ensure no duplicate keys exist in a map.","sig":null,"attributes":[{"value":"/ Ensure no duplicate keys exist in a map.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106625,"byte_end":106669,"line_start":616,"line_end":616,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106670,"byte_end":106673,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate keys for a map exist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106674,"byte_end":106767,"line_start":618,"line_end":618,"column_start":1,"column_end":94}},{"value":"/ Sometimes it is desirable to know when such an event happens, as the first value is overwritten","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106768,"byte_end":106867,"line_start":619,"line_end":619,"column_start":1,"column_end":100}},{"value":"/ and it can indicate an error in the serialized data.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106868,"byte_end":106924,"line_start":620,"line_end":620,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106925,"byte_end":106928,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ This helper returns an error if two identical keys exist in a map.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":106929,"byte_end":106999,"line_start":622,"line_end":622,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107000,"byte_end":107003,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashMap`] and the [`BTreeMap`] from the standard library.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107004,"byte_end":107104,"line_start":624,"line_end":624,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107105,"byte_end":107108,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107109,"byte_end":107151,"line_start":626,"line_end":626,"column_start":1,"column_end":43}},{"value":"/ [`BTreeMap`]: std::collections::HashMap","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107152,"byte_end":107195,"line_start":627,"line_end":627,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107196,"byte_end":107199,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107200,"byte_end":107213,"line_start":629,"line_end":629,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107214,"byte_end":107217,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107218,"byte_end":107229,"line_start":631,"line_end":631,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107230,"byte_end":107266,"line_start":632,"line_end":632,"column_start":1,"column_end":37}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107267,"byte_end":107303,"line_start":633,"line_end":633,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107304,"byte_end":107309,"line_start":634,"line_end":634,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107310,"byte_end":107347,"line_start":635,"line_end":635,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107348,"byte_end":107374,"line_start":636,"line_end":636,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107375,"byte_end":107391,"line_start":637,"line_end":637,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::maps_duplicate_key_is_error\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107392,"byte_end":107466,"line_start":638,"line_end":638,"column_start":1,"column_end":75}},{"value":"/     map: HashMap<usize, usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107467,"byte_end":107502,"line_start":639,"line_end":639,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107503,"byte_end":107508,"line_start":640,"line_end":640,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107509,"byte_end":107512,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ // Maps are serialized normally,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107513,"byte_end":107549,"line_start":642,"line_end":642,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"3\": 3}}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107550,"byte_end":107601,"line_start":643,"line_end":643,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107602,"byte_end":107623,"line_start":644,"line_end":644,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107624,"byte_end":107652,"line_start":645,"line_end":645,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107653,"byte_end":107659,"line_start":646,"line_end":646,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107660,"byte_end":107683,"line_start":647,"line_end":647,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107684,"byte_end":107707,"line_start":648,"line_end":648,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(3, 3);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107708,"byte_end":107731,"line_start":649,"line_end":649,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107732,"byte_end":107784,"line_start":650,"line_end":650,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107785,"byte_end":107788,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate keys, like the `1`, exist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107789,"byte_end":107855,"line_start":652,"line_end":652,"column_start":1,"column_end":67}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"1\": 3}}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107856,"byte_end":107907,"line_start":653,"line_end":653,"column_start":1,"column_end":52}},{"value":"/ let res: Result<Doc, _> = serde_json::from_str(s);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107908,"byte_end":107962,"line_start":654,"line_end":654,"column_start":1,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107963,"byte_end":107989,"line_start":655,"line_end":655,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":107990,"byte_end":107997,"line_start":656,"line_end":656,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":412},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":108194,"byte_end":108205,"line_start":662,"line_end":662,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::maps_duplicate_key_is_error::deserialize","value":"fn <'de, D, T, K, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map and return an error on duplicate keys\n","sig":null,"attributes":[{"value":"/ Deserialize a map and return an error on duplicate keys","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":108123,"byte_end":108182,"line_start":661,"line_end":661,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":109785,"byte_end":109794,"line_start":713,"line_end":713,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::maps_duplicate_key_is_error::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the map with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the map with the default serializer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":109724,"byte_end":109773,"line_start":712,"line_end":712,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":437},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110275,"byte_end":110296,"line_start":727,"line_end":727,"column_start":9,"column_end":30},"name":"sets_first_value_wins","qualname":"::rust::sets_first_value_wins","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":458}],"decl_id":null,"docs":" *DEPRECATED* Ensure that the first value is taken, if duplicate values exist","sig":null,"attributes":[{"value":"/ *DEPRECATED* Ensure that the first value is taken, if duplicate values exist","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":109960,"byte_end":110040,"line_start":722,"line_end":722,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110041,"byte_end":110044,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ This module implements the default behavior in serde.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110045,"byte_end":110102,"line_start":724,"line_end":724,"column_start":1,"column_end":58}},{"value":"deprecated =\n  \"This module does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110103,"byte_end":110245,"line_start":725,"line_end":725,"column_start":1,"column_end":143}},{"value":"allow(deprecated)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110246,"byte_end":110266,"line_start":726,"line_end":726,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":440},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110605,"byte_end":110616,"line_start":733,"line_end":733,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_first_value_wins::deserialize","value":"fn <'de, D, T, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and keep the first of equal values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and keep the first of equal values","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110388,"byte_end":110444,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"deprecated =\n  \"This function does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110449,"byte_end":110593,"line_start":732,"line_end":732,"column_start":5,"column_end":149}}]},{"kind":"Function","id":{"krate":0,"index":458},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112064,"byte_end":112073,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_first_value_wins::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":111854,"byte_end":111903,"line_start":777,"line_end":777,"column_start":5,"column_end":54}},{"value":"deprecated =\n  \"This function does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":111908,"byte_end":112052,"line_start":778,"line_end":778,"column_start":5,"column_end":149}}]},{"kind":"Mod","id":{"krate":0,"index":461},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112709,"byte_end":112729,"line_start":797,"line_end":797,"column_start":9,"column_end":29},"name":"sets_last_value_wins","qualname":"::rust::sets_last_value_wins","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":482}],"decl_id":null,"docs":" Ensure that the last value is taken, if duplicate values exist","sig":null,"attributes":[{"value":"/ Ensure that the last value is taken, if duplicate values exist","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112239,"byte_end":112305,"line_start":788,"line_end":788,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112306,"byte_end":112309,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ By default serde has a first-value-wins implementation, if duplicate keys for a set exist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112310,"byte_end":112404,"line_start":790,"line_end":790,"column_start":1,"column_end":95}},{"value":"/ Sometimes the opposite strategy is desired. This helper implements a first-value-wins strategy.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112405,"byte_end":112504,"line_start":791,"line_end":791,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112505,"byte_end":112508,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashSet`] and the [`BTreeSet`] from the standard library.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112509,"byte_end":112609,"line_start":793,"line_end":793,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112610,"byte_end":112613,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: std::collections::HashSet","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112614,"byte_end":112656,"line_start":795,"line_end":795,"column_start":1,"column_end":43}},{"value":"/ [`BTreeSet`]: std::collections::HashSet","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112657,"byte_end":112700,"line_start":796,"line_end":796,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":464},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112887,"byte_end":112898,"line_start":802,"line_end":802,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_last_value_wins::deserialize","value":"fn <'de, D, T, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and keep the last of equal values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and keep the last of equal values","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":112820,"byte_end":112875,"line_start":801,"line_end":801,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":482},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114196,"byte_end":114205,"line_start":847,"line_end":847,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_last_value_wins::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114135,"byte_end":114184,"line_start":846,"line_end":846,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":485},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115704,"byte_end":115723,"line_start":898,"line_end":898,"column_start":9,"column_end":28},"name":"maps_first_key_wins","qualname":"::rust::maps_first_key_wins","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":510}],"decl_id":null,"docs":" Ensure that the first key is taken, if duplicate keys exist","sig":null,"attributes":[{"value":"/ Ensure that the first key is taken, if duplicate keys exist","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114371,"byte_end":114434,"line_start":856,"line_end":856,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114435,"byte_end":114438,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-key-wins implementation, if duplicate keys for a map exist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114439,"byte_end":114530,"line_start":858,"line_end":858,"column_start":1,"column_end":92}},{"value":"/ Sometimes the opposite strategy is desired. This helper implements a first-key-wins strategy.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114531,"byte_end":114628,"line_start":859,"line_end":859,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114629,"byte_end":114632,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashMap`] and the [`BTreeMap`] from the standard library.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114633,"byte_end":114733,"line_start":861,"line_end":861,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114734,"byte_end":114737,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114738,"byte_end":114780,"line_start":863,"line_end":863,"column_start":1,"column_end":43}},{"value":"/ [`BTreeMap`]: std::collections::HashMap","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114781,"byte_end":114824,"line_start":864,"line_end":864,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114825,"byte_end":114828,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114829,"byte_end":114842,"line_start":866,"line_end":866,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114843,"byte_end":114846,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114847,"byte_end":114858,"line_start":868,"line_end":868,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114859,"byte_end":114895,"line_start":869,"line_end":869,"column_start":1,"column_end":37}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114896,"byte_end":114932,"line_start":870,"line_end":870,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114933,"byte_end":114938,"line_start":871,"line_end":871,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114939,"byte_end":114976,"line_start":872,"line_end":872,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":114977,"byte_end":115003,"line_start":873,"line_end":873,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115004,"byte_end":115020,"line_start":874,"line_end":874,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::maps_first_key_wins\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115021,"byte_end":115087,"line_start":875,"line_end":875,"column_start":1,"column_end":67}},{"value":"/     map: HashMap<usize, usize>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115088,"byte_end":115123,"line_start":876,"line_end":876,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115124,"byte_end":115129,"line_start":877,"line_end":877,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115130,"byte_end":115133,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ // Maps are serialized normally,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115134,"byte_end":115170,"line_start":879,"line_end":879,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"3\": 3}}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115171,"byte_end":115222,"line_start":880,"line_end":880,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115223,"byte_end":115244,"line_start":881,"line_end":881,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115245,"byte_end":115273,"line_start":882,"line_end":882,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115274,"byte_end":115280,"line_start":883,"line_end":883,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115281,"byte_end":115304,"line_start":884,"line_end":884,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115305,"byte_end":115328,"line_start":885,"line_end":885,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(3, 3);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115329,"byte_end":115352,"line_start":886,"line_end":886,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115353,"byte_end":115405,"line_start":887,"line_end":887,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115406,"byte_end":115409,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate keys, like the `1`, exist.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115410,"byte_end":115476,"line_start":889,"line_end":889,"column_start":1,"column_end":67}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"1\": 3}}\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115477,"byte_end":115528,"line_start":890,"line_end":890,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115529,"byte_end":115550,"line_start":891,"line_end":891,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115551,"byte_end":115579,"line_start":892,"line_end":892,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115580,"byte_end":115586,"line_start":893,"line_end":893,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115587,"byte_end":115610,"line_start":894,"line_end":894,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115611,"byte_end":115634,"line_start":895,"line_end":895,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115635,"byte_end":115687,"line_start":896,"line_end":896,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115688,"byte_end":115695,"line_start":897,"line_end":897,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115886,"byte_end":115897,"line_start":903,"line_end":903,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::maps_first_key_wins::deserialize","value":"fn <'de, D, T, K, V> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map and return an error on duplicate keys\n","sig":null,"attributes":[{"value":"/ Deserialize a map and return an error on duplicate keys","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":115815,"byte_end":115874,"line_start":902,"line_end":902,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117364,"byte_end":117373,"line_start":952,"line_end":952,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::maps_first_key_wins::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the map with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the map with the default serializer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117303,"byte_end":117352,"line_start":951,"line_end":951,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":513},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119213,"byte_end":119233,"line_start":1016,"line_end":1016,"column_start":9,"column_end":29},"name":"string_empty_as_none","qualname":"::rust::string_empty_as_none","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":534}],"decl_id":null,"docs":" De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","sig":null,"attributes":[{"value":"/ De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117539,"byte_end":117637,"line_start":961,"line_end":961,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117638,"byte_end":117641,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ Convert an [`Option`]`<T>` from/to string using [`FromStr`] and [`AsRef`]`<`[`str`]`>` implementations.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117642,"byte_end":117749,"line_start":963,"line_end":963,"column_start":1,"column_end":108}},{"value":"/ An empty string is deserialized as [`None`] and a [`None`] vice versa.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117750,"byte_end":117824,"line_start":964,"line_end":964,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117825,"byte_end":117828,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117829,"byte_end":117860,"line_start":966,"line_end":966,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117861,"byte_end":117864,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`NoneAsEmptyString`] and using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117865,"byte_end":117981,"line_start":968,"line_end":968,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117982,"byte_end":117985,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117986,"byte_end":117997,"line_start":970,"line_end":970,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":117998,"byte_end":118032,"line_start":971,"line_end":971,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118033,"byte_end":118069,"line_start":972,"line_end":972,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, NoneAsEmptyString};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118070,"byte_end":118122,"line_start":973,"line_end":973,"column_start":1,"column_end":53}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118123,"byte_end":118128,"line_start":974,"line_end":974,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118129,"byte_end":118144,"line_start":975,"line_end":975,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118145,"byte_end":118171,"line_start":976,"line_end":976,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118172,"byte_end":118186,"line_start":977,"line_end":977,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"NoneAsEmptyString\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118187,"byte_end":118232,"line_start":978,"line_end":978,"column_start":1,"column_end":46}},{"value":"/     value: Option<String>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118233,"byte_end":118263,"line_start":979,"line_end":979,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118264,"byte_end":118269,"line_start":980,"line_end":980,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118270,"byte_end":118277,"line_start":981,"line_end":981,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118278,"byte_end":118285,"line_start":982,"line_end":982,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118286,"byte_end":118289,"line_start":983,"line_end":983,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118290,"byte_end":118304,"line_start":984,"line_end":984,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118305,"byte_end":118308,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118309,"byte_end":118316,"line_start":986,"line_end":986,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118317,"byte_end":118366,"line_start":987,"line_end":987,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118367,"byte_end":118394,"line_start":988,"line_end":988,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::rust::string_empty_as_none;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118395,"byte_end":118444,"line_start":989,"line_end":989,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118445,"byte_end":118450,"line_start":990,"line_end":990,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118451,"byte_end":118488,"line_start":991,"line_end":991,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118489,"byte_end":118503,"line_start":992,"line_end":992,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"string_empty_as_none\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118504,"byte_end":118551,"line_start":993,"line_end":993,"column_start":1,"column_end":48}},{"value":"/     tags: Option<String>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118552,"byte_end":118581,"line_start":994,"line_end":994,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118582,"byte_end":118587,"line_start":995,"line_end":995,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118588,"byte_end":118591,"line_start":996,"line_end":996,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"\" })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118592,"byte_end":118662,"line_start":997,"line_end":997,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(None, v.tags);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118663,"byte_end":118692,"line_start":998,"line_end":998,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118693,"byte_end":118696,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"Hi\" })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118697,"byte_end":118769,"line_start":1000,"line_end":1000,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(Some(\"Hi\".to_string()), v.tags);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118770,"byte_end":118817,"line_start":1001,"line_end":1001,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118818,"byte_end":118821,"line_start":1002,"line_end":1002,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118822,"byte_end":118837,"line_start":1003,"line_end":1003,"column_start":1,"column_end":16}},{"value":"/     tags: Some(\"This is text\".to_string()),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118838,"byte_end":118885,"line_start":1004,"line_end":1004,"column_start":1,"column_end":48}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118886,"byte_end":118892,"line_start":1005,"line_end":1005,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"This is text\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118893,"byte_end":118978,"line_start":1006,"line_end":1006,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118979,"byte_end":118982,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118983,"byte_end":118998,"line_start":1008,"line_end":1008,"column_start":1,"column_end":16}},{"value":"/     tags: None,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":118999,"byte_end":119018,"line_start":1009,"line_end":1009,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119019,"byte_end":119025,"line_start":1010,"line_end":1010,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119026,"byte_end":119099,"line_start":1011,"line_end":1011,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119100,"byte_end":119107,"line_start":1012,"line_end":1012,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119108,"byte_end":119111,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ [`NoneAsEmptyString`]: crate::NoneAsEmptyString","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119112,"byte_end":119163,"line_start":1014,"line_end":1014,"column_start":1,"column_end":52}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119164,"byte_end":119204,"line_start":1015,"line_end":1015,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119331,"byte_end":119342,"line_start":1020,"line_end":1020,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::string_empty_as_none::deserialize","value":"fn <'de, D, S> (deserializer: D) -> Result<Option<S>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an `Option<T>` from a string using `FromStr`\n","sig":null,"attributes":[{"value":"/ Deserialize an `Option<T>` from a string using `FromStr`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119259,"byte_end":119319,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":534},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":120891,"byte_end":120900,"line_start":1071,"line_end":1071,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::string_empty_as_none::serialize","value":"fn <T, S> (option: &Option<T>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a string from `Option<T>` using `AsRef<str>` or using the empty string if `None`.\n","sig":null,"attributes":[{"value":"/ Serialize a string from `Option<T>` using `AsRef<str>` or using the empty string if `None`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":120784,"byte_end":120879,"line_start":1070,"line_end":1070,"column_start":5,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":537},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123535,"byte_end":123556,"line_start":1164,"line_end":1164,"column_start":9,"column_end":30},"name":"hashmap_as_tuple_list","qualname":"::rust::hashmap_as_tuple_list","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":546},{"krate":0,"index":552},{"krate":0,"index":558}],"decl_id":null,"docs":" De/Serialize a [`HashMap`] into a list of tuples","sig":null,"attributes":[{"value":"/ De/Serialize a [`HashMap`] into a list of tuples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121191,"byte_end":121243,"line_start":1084,"line_end":1084,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121244,"byte_end":121247,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ Some formats, like JSON, have limitations on the type of keys for maps.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121248,"byte_end":121323,"line_start":1086,"line_end":1086,"column_start":1,"column_end":76}},{"value":"/ In case of JSON, keys are restricted to strings.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121324,"byte_end":121376,"line_start":1087,"line_end":1087,"column_start":1,"column_end":53}},{"value":"/ Rust features more powerful keys, for example tuple, which can not be serialized to JSON.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121377,"byte_end":121470,"line_start":1088,"line_end":1088,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121471,"byte_end":121474,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ This helper serializes the [`HashMap`] into a list of tuples, which does not have the same type restrictions.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121475,"byte_end":121588,"line_start":1090,"line_end":1090,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121589,"byte_end":121592,"line_start":1091,"line_end":1091,"column_start":1,"column_end":4}},{"value":"/ If you need to de/serialize a [`BTreeMap`] then use [`btreemap_as_tuple_list`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121593,"byte_end":121676,"line_start":1092,"line_end":1092,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121677,"byte_end":121680,"line_start":1093,"line_end":1093,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121681,"byte_end":121712,"line_start":1094,"line_end":1094,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121713,"byte_end":121716,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121717,"byte_end":121803,"line_start":1096,"line_end":1096,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121804,"byte_end":121939,"line_start":1097,"line_end":1097,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121940,"byte_end":121943,"line_start":1098,"line_end":1098,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121944,"byte_end":121955,"line_start":1099,"line_end":1099,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121956,"byte_end":121990,"line_start":1100,"line_end":1100,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":121991,"byte_end":122040,"line_start":1101,"line_end":1101,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122041,"byte_end":122072,"line_start":1102,"line_end":1102,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122073,"byte_end":122109,"line_start":1103,"line_end":1103,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122110,"byte_end":122115,"line_start":1104,"line_end":1104,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122116,"byte_end":122131,"line_start":1105,"line_end":1105,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122132,"byte_end":122169,"line_start":1106,"line_end":1106,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122170,"byte_end":122184,"line_start":1107,"line_end":1107,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<(_, _)>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122185,"byte_end":122224,"line_start":1108,"line_end":1108,"column_start":1,"column_end":40}},{"value":"/     s: HashMap<(String, u32), u32>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122225,"byte_end":122264,"line_start":1109,"line_end":1109,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122265,"byte_end":122270,"line_start":1110,"line_end":1110,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122271,"byte_end":122278,"line_start":1111,"line_end":1111,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122279,"byte_end":122286,"line_start":1112,"line_end":1112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122287,"byte_end":122290,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122291,"byte_end":122305,"line_start":1114,"line_end":1114,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122306,"byte_end":122309,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122310,"byte_end":122317,"line_start":1116,"line_end":1116,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122318,"byte_end":122367,"line_start":1117,"line_end":1117,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122368,"byte_end":122395,"line_start":1118,"line_end":1118,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122396,"byte_end":122432,"line_start":1119,"line_end":1119,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122433,"byte_end":122438,"line_start":1120,"line_end":1120,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122439,"byte_end":122476,"line_start":1121,"line_end":1121,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122477,"byte_end":122491,"line_start":1122,"line_end":1122,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::hashmap_as_tuple_list\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122492,"byte_end":122558,"line_start":1123,"line_end":1123,"column_start":1,"column_end":67}},{"value":"/     s: HashMap<(String, u32), u32>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122559,"byte_end":122598,"line_start":1124,"line_end":1124,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122599,"byte_end":122604,"line_start":1125,"line_end":1125,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122605,"byte_end":122608,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122609,"byte_end":122654,"line_start":1127,"line_end":1127,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122655,"byte_end":122669,"line_start":1128,"line_end":1128,"column_start":1,"column_end":15}},{"value":"/         [[\"Hello\", 123], 0],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122670,"byte_end":122702,"line_start":1129,"line_end":1129,"column_start":1,"column_end":33}},{"value":"/         [[\"World\", 456], 1]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122703,"byte_end":122734,"line_start":1130,"line_end":1130,"column_start":1,"column_end":32}},{"value":"/     ]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122735,"byte_end":122744,"line_start":1131,"line_end":1131,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122745,"byte_end":122762,"line_start":1132,"line_end":1132,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122763,"byte_end":122766,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122767,"byte_end":122796,"line_start":1134,"line_end":1134,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(1, v.s[&(\"World\".to_string(), 456)]);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122797,"byte_end":122849,"line_start":1135,"line_end":1135,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122850,"byte_end":122857,"line_start":1136,"line_end":1136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122858,"byte_end":122861,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ The helper is generic over the hasher type of the [`HashMap`] and works with different variants, such as `FnvHashMap`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122862,"byte_end":122984,"line_start":1138,"line_end":1138,"column_start":1,"column_end":123}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122985,"byte_end":122988,"line_start":1139,"line_end":1139,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122989,"byte_end":122996,"line_start":1140,"line_end":1140,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":122997,"byte_end":123046,"line_start":1141,"line_end":1141,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123047,"byte_end":123074,"line_start":1142,"line_end":1142,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123075,"byte_end":123080,"line_start":1143,"line_end":1143,"column_start":1,"column_end":6}},{"value":"/ use fnv::FnvHashMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123081,"byte_end":123105,"line_start":1144,"line_end":1144,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123106,"byte_end":123109,"line_start":1145,"line_end":1145,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123110,"byte_end":123147,"line_start":1146,"line_end":1146,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123148,"byte_end":123162,"line_start":1147,"line_end":1147,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::hashmap_as_tuple_list\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123163,"byte_end":123229,"line_start":1148,"line_end":1148,"column_start":1,"column_end":67}},{"value":"/     s: FnvHashMap<u32, bool>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123230,"byte_end":123263,"line_start":1149,"line_end":1149,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123264,"byte_end":123269,"line_start":1150,"line_end":1150,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123270,"byte_end":123273,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123274,"byte_end":123319,"line_start":1152,"line_end":1152,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123320,"byte_end":123334,"line_start":1153,"line_end":1153,"column_start":1,"column_end":15}},{"value":"/         [0, false],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123335,"byte_end":123358,"line_start":1154,"line_end":1154,"column_start":1,"column_end":24}},{"value":"/         [1, true]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123359,"byte_end":123380,"line_start":1155,"line_end":1155,"column_start":1,"column_end":22}},{"value":"/     ]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123381,"byte_end":123390,"line_start":1156,"line_end":1156,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123391,"byte_end":123408,"line_start":1157,"line_end":1157,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123409,"byte_end":123412,"line_start":1158,"line_end":1158,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123413,"byte_end":123442,"line_start":1159,"line_end":1159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(true, v.s[&1]);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123443,"byte_end":123473,"line_start":1160,"line_end":1160,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123474,"byte_end":123481,"line_start":1161,"line_end":1161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123482,"byte_end":123485,"line_start":1162,"line_end":1162,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123486,"byte_end":123526,"line_start":1163,"line_end":1163,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123725,"byte_end":123734,"line_start":1168,"line_end":1168,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::hashmap_as_tuple_list::serialize","value":"fn <K, V, S, BH> (map: &HashMap<K, V, BH>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`HashMap`] as a list of tuples\n","sig":null,"attributes":[{"value":"/ Serialize the [`HashMap`] as a list of tuples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":123664,"byte_end":123713,"line_start":1167,"line_end":1167,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":546},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":124179,"byte_end":124190,"line_start":1183,"line_end":1183,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::hashmap_as_tuple_list::deserialize","value":"fn <'de, K, V, BH, D> (deserializer: D) -> Result<HashMap<K, V, BH>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`HashMap`] from a list of tuples\n","sig":null,"attributes":[{"value":"/ Deserialize a [`HashMap`] from a list of tuples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":124116,"byte_end":124167,"line_start":1182,"line_end":1182,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":567},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127121,"byte_end":127143,"line_start":1277,"line_end":1277,"column_start":9,"column_end":31},"name":"btreemap_as_tuple_list","qualname":"::rust::btreemap_as_tuple_list","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":578},{"krate":0,"index":583}],"decl_id":null,"docs":" De/Serialize a [`BTreeMap`] into a list of tuples","sig":null,"attributes":[{"value":"/ De/Serialize a [`BTreeMap`] into a list of tuples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125396,"byte_end":125449,"line_start":1222,"line_end":1222,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125450,"byte_end":125453,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ Some formats, like JSON, have limitations on the type of keys for maps.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125454,"byte_end":125529,"line_start":1224,"line_end":1224,"column_start":1,"column_end":76}},{"value":"/ In case of JSON, keys are restricted to strings.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125530,"byte_end":125582,"line_start":1225,"line_end":1225,"column_start":1,"column_end":53}},{"value":"/ Rust features more powerful keys, for example tuple, which can not be serialized to JSON.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125583,"byte_end":125676,"line_start":1226,"line_end":1226,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125677,"byte_end":125680,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ This helper serializes the [`BTreeMap`] into a list of tuples, which does not have the same type restrictions.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125681,"byte_end":125795,"line_start":1228,"line_end":1228,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125796,"byte_end":125799,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ If you need to de/serialize a [`HashMap`] then use [`hashmap_as_tuple_list`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125800,"byte_end":125881,"line_start":1230,"line_end":1230,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125882,"byte_end":125885,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125886,"byte_end":125917,"line_start":1232,"line_end":1232,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125918,"byte_end":125921,"line_start":1233,"line_end":1233,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":125922,"byte_end":126008,"line_start":1234,"line_end":1234,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126009,"byte_end":126144,"line_start":1235,"line_end":1235,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126145,"byte_end":126148,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126149,"byte_end":126160,"line_start":1237,"line_end":1237,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126161,"byte_end":126195,"line_start":1238,"line_end":1238,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126196,"byte_end":126245,"line_start":1239,"line_end":1239,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126246,"byte_end":126277,"line_start":1240,"line_end":1240,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126278,"byte_end":126315,"line_start":1241,"line_end":1241,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126316,"byte_end":126321,"line_start":1242,"line_end":1242,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126322,"byte_end":126337,"line_start":1243,"line_end":1243,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126338,"byte_end":126375,"line_start":1244,"line_end":1244,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126376,"byte_end":126390,"line_start":1245,"line_end":1245,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<(_, _)>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126391,"byte_end":126430,"line_start":1246,"line_end":1246,"column_start":1,"column_end":40}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126431,"byte_end":126471,"line_start":1247,"line_end":1247,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126472,"byte_end":126477,"line_start":1248,"line_end":1248,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126478,"byte_end":126485,"line_start":1249,"line_end":1249,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126486,"byte_end":126493,"line_start":1250,"line_end":1250,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126494,"byte_end":126497,"line_start":1251,"line_end":1251,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126498,"byte_end":126512,"line_start":1252,"line_end":1252,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126513,"byte_end":126516,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126517,"byte_end":126524,"line_start":1254,"line_end":1254,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126525,"byte_end":126574,"line_start":1255,"line_end":1255,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126575,"byte_end":126602,"line_start":1256,"line_end":1256,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126603,"byte_end":126640,"line_start":1257,"line_end":1257,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126641,"byte_end":126646,"line_start":1258,"line_end":1258,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126647,"byte_end":126684,"line_start":1259,"line_end":1259,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126685,"byte_end":126699,"line_start":1260,"line_end":1260,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::btreemap_as_tuple_list\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126700,"byte_end":126767,"line_start":1261,"line_end":1261,"column_start":1,"column_end":68}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126768,"byte_end":126808,"line_start":1262,"line_end":1262,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126809,"byte_end":126814,"line_start":1263,"line_end":1263,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126815,"byte_end":126818,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126819,"byte_end":126864,"line_start":1265,"line_end":1265,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126865,"byte_end":126879,"line_start":1266,"line_end":1266,"column_start":1,"column_end":15}},{"value":"/         [[\"Hello\", 123], 0],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126880,"byte_end":126912,"line_start":1267,"line_end":1267,"column_start":1,"column_end":33}},{"value":"/         [[\"World\", 456], 1]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126913,"byte_end":126944,"line_start":1268,"line_end":1268,"column_start":1,"column_end":32}},{"value":"/     ]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126945,"byte_end":126954,"line_start":1269,"line_end":1269,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126955,"byte_end":126972,"line_start":1270,"line_end":1270,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126973,"byte_end":126976,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":126977,"byte_end":127006,"line_start":1272,"line_end":1272,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(1, v.s[&(\"World\".to_string(), 456)]);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127007,"byte_end":127059,"line_start":1273,"line_end":1273,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127060,"byte_end":127067,"line_start":1274,"line_end":1274,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127068,"byte_end":127071,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127072,"byte_end":127112,"line_start":1276,"line_end":1276,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":569},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127231,"byte_end":127240,"line_start":1281,"line_end":1281,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::btreemap_as_tuple_list::serialize","value":"fn <K, V, S> (map: &BTreeMap<K, V>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`BTreeMap`] as a list of tuples\n","sig":null,"attributes":[{"value":"/ Serialize the [`BTreeMap`] as a list of tuples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127169,"byte_end":127219,"line_start":1280,"line_end":1280,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":573},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127654,"byte_end":127665,"line_start":1295,"line_end":1295,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::btreemap_as_tuple_list::deserialize","value":"fn <'de, K, V, D> (deserializer: D) -> Result<BTreeMap<K, V>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`BTreeMap`] from a list of tuples\n","sig":null,"attributes":[{"value":"/ Deserialize a [`BTreeMap`] from a list of tuples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":127590,"byte_end":127642,"line_start":1294,"line_end":1294,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":591},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131957,"byte_end":131974,"line_start":1427,"line_end":1427,"column_start":9,"column_end":26},"name":"tuple_list_as_map","qualname":"::rust::tuple_list_as_map","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":601},{"krate":0,"index":607},{"krate":0,"index":613},{"krate":0,"index":622},{"krate":0,"index":630}],"decl_id":null,"docs":" This serializes a list of tuples into a map and back","sig":null,"attributes":[{"value":"/ This serializes a list of tuples into a map and back","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":128692,"byte_end":128748,"line_start":1331,"line_end":1331,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":128749,"byte_end":128752,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/ Normally, you want to use a [`HashMap`] or a [`BTreeMap`] when deserializing a map.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":128753,"byte_end":128840,"line_start":1333,"line_end":1333,"column_start":1,"column_end":88}},{"value":"/ However, sometimes this is not possible due to type contains, e.g., if the type implements neither [`Hash`] nor [`Ord`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":128841,"byte_end":128965,"line_start":1334,"line_end":1334,"column_start":1,"column_end":125}},{"value":"/ Another use case is deserializing a map with duplicate keys.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":128966,"byte_end":129030,"line_start":1335,"line_end":1335,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129031,"byte_end":129034,"line_start":1336,"line_end":1336,"column_start":1,"column_end":4}},{"value":"/ The implementation is generic using the [`FromIterator`] and [`IntoIterator`] traits.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129035,"byte_end":129124,"line_start":1337,"line_end":1337,"column_start":1,"column_end":90}},{"value":"/ Therefore, all of [`Vec`], [`VecDeque`](std::collections::VecDeque), and [`LinkedList`](std::collections::LinkedList) and anything which implements those are supported.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129125,"byte_end":129297,"line_start":1338,"line_end":1338,"column_start":1,"column_end":173}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129298,"byte_end":129301,"line_start":1339,"line_end":1339,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129302,"byte_end":129333,"line_start":1340,"line_end":1340,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129334,"byte_end":129337,"line_start":1341,"line_end":1341,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129338,"byte_end":129424,"line_start":1342,"line_end":1342,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129425,"byte_end":129560,"line_start":1343,"line_end":1343,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129561,"byte_end":129564,"line_start":1344,"line_end":1344,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129565,"byte_end":129576,"line_start":1345,"line_end":1345,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129577,"byte_end":129611,"line_start":1346,"line_end":1346,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129612,"byte_end":129661,"line_start":1347,"line_end":1347,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129662,"byte_end":129693,"line_start":1348,"line_end":1348,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129694,"byte_end":129731,"line_start":1349,"line_end":1349,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129732,"byte_end":129737,"line_start":1350,"line_end":1350,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129738,"byte_end":129753,"line_start":1351,"line_end":1351,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129754,"byte_end":129791,"line_start":1352,"line_end":1352,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129792,"byte_end":129806,"line_start":1353,"line_end":1353,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BTreeMap<_, _>\")] // HashMap will also work","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129807,"byte_end":129875,"line_start":1354,"line_end":1354,"column_start":1,"column_end":69}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129876,"byte_end":129916,"line_start":1355,"line_end":1355,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129917,"byte_end":129922,"line_start":1356,"line_end":1356,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129923,"byte_end":129930,"line_start":1357,"line_end":1357,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129931,"byte_end":129938,"line_start":1358,"line_end":1358,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129939,"byte_end":129942,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129943,"byte_end":129957,"line_start":1360,"line_end":1360,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129958,"byte_end":129961,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ `Wrapper` does not implement [`Hash`] nor [`Ord`], thus prohibiting the use [`HashMap`] or [`BTreeMap`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":129962,"byte_end":130070,"line_start":1362,"line_end":1362,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130071,"byte_end":130074,"line_start":1363,"line_end":1363,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130075,"byte_end":130082,"line_start":1364,"line_end":1364,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130083,"byte_end":130132,"line_start":1365,"line_end":1365,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130133,"byte_end":130138,"line_start":1366,"line_end":1366,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, Default)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130139,"byte_end":130192,"line_start":1367,"line_end":1367,"column_start":1,"column_end":54}},{"value":"/ struct S {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130193,"byte_end":130207,"line_start":1368,"line_end":1368,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::tuple_list_as_map\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130208,"byte_end":130270,"line_start":1369,"line_end":1369,"column_start":1,"column_end":63}},{"value":"/     s: Vec<(Wrapper<i32>, Wrapper<String>)>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130271,"byte_end":130319,"line_start":1370,"line_end":1370,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130320,"byte_end":130325,"line_start":1371,"line_end":1371,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130326,"byte_end":130329,"line_start":1372,"line_end":1372,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Serialize, Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130330,"byte_end":130381,"line_start":1373,"line_end":1373,"column_start":1,"column_end":52}},{"value":"/ #[serde(transparent)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130382,"byte_end":130407,"line_start":1374,"line_end":1374,"column_start":1,"column_end":26}},{"value":"/ struct Wrapper<T>(T);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130408,"byte_end":130433,"line_start":1375,"line_end":1375,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130434,"byte_end":130437,"line_start":1376,"line_end":1376,"column_start":1,"column_end":4}},{"value":"/ let from = r#\"{","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130438,"byte_end":130457,"line_start":1377,"line_end":1377,"column_start":1,"column_end":20}},{"value":"/   \"s\": {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130458,"byte_end":130470,"line_start":1378,"line_end":1378,"column_start":1,"column_end":13}},{"value":"/     \"1\": \"Hi\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130471,"byte_end":130489,"line_start":1379,"line_end":1379,"column_start":1,"column_end":19}},{"value":"/     \"2\": \"Cake\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130490,"byte_end":130510,"line_start":1380,"line_end":1380,"column_start":1,"column_end":21}},{"value":"/     \"99\": \"Lie\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130511,"byte_end":130530,"line_start":1381,"line_end":1381,"column_start":1,"column_end":20}},{"value":"/   }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130531,"byte_end":130538,"line_start":1382,"line_end":1382,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130539,"byte_end":130547,"line_start":1383,"line_end":1383,"column_start":1,"column_end":9}},{"value":"/ let mut expected = S::default();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130548,"byte_end":130584,"line_start":1384,"line_end":1384,"column_start":1,"column_end":37}},{"value":"/ expected.s.push((Wrapper(1), Wrapper(\"Hi\".into())));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130585,"byte_end":130641,"line_start":1385,"line_end":1385,"column_start":1,"column_end":57}},{"value":"/ expected.s.push((Wrapper(2), Wrapper(\"Cake\".into())));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130642,"byte_end":130700,"line_start":1386,"line_end":1386,"column_start":1,"column_end":59}},{"value":"/ expected.s.push((Wrapper(99), Wrapper(\"Lie\".into())));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130701,"byte_end":130759,"line_start":1387,"line_end":1387,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130760,"byte_end":130763,"line_start":1388,"line_end":1388,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130764,"byte_end":130817,"line_start":1389,"line_end":1389,"column_start":1,"column_end":54}},{"value":"/ for ((exp_k, exp_v), (res_k, res_v)) in expected.s.iter().zip(&res.s) {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130818,"byte_end":130893,"line_start":1390,"line_end":1390,"column_start":1,"column_end":76}},{"value":"/     assert_eq!(exp_k.0, res_k.0);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130894,"byte_end":130931,"line_start":1391,"line_end":1391,"column_start":1,"column_end":38}},{"value":"/     assert_eq!(exp_v.0, res_v.0);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130932,"byte_end":130969,"line_start":1392,"line_end":1392,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130970,"byte_end":130975,"line_start":1393,"line_end":1393,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":130976,"byte_end":131047,"line_start":1394,"line_end":1394,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131048,"byte_end":131055,"line_start":1395,"line_end":1395,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131056,"byte_end":131059,"line_start":1396,"line_end":1396,"column_start":1,"column_end":4}},{"value":"/ In this example, the serialized format contains duplicate keys, which is not supported with [`HashMap`] or [`BTreeMap`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131060,"byte_end":131184,"line_start":1397,"line_end":1397,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131185,"byte_end":131188,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131189,"byte_end":131196,"line_start":1399,"line_end":1399,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131197,"byte_end":131246,"line_start":1400,"line_end":1400,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131247,"byte_end":131252,"line_start":1401,"line_end":1401,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, PartialEq, Default)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131253,"byte_end":131317,"line_start":1402,"line_end":1402,"column_start":1,"column_end":65}},{"value":"/ struct S {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131318,"byte_end":131332,"line_start":1403,"line_end":1403,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::tuple_list_as_map\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131333,"byte_end":131395,"line_start":1404,"line_end":1404,"column_start":1,"column_end":63}},{"value":"/     s: Vec<(i32, String)>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131396,"byte_end":131426,"line_start":1405,"line_end":1405,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131427,"byte_end":131432,"line_start":1406,"line_end":1406,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131433,"byte_end":131436,"line_start":1407,"line_end":1407,"column_start":1,"column_end":4}},{"value":"/ let from = r#\"{","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131437,"byte_end":131456,"line_start":1408,"line_end":1408,"column_start":1,"column_end":20}},{"value":"/   \"s\": {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131457,"byte_end":131469,"line_start":1409,"line_end":1409,"column_start":1,"column_end":13}},{"value":"/     \"1\": \"Hi\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131470,"byte_end":131488,"line_start":1410,"line_end":1410,"column_start":1,"column_end":19}},{"value":"/     \"1\": \"Cake\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131489,"byte_end":131509,"line_start":1411,"line_end":1411,"column_start":1,"column_end":21}},{"value":"/     \"1\": \"Lie\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131510,"byte_end":131528,"line_start":1412,"line_end":1412,"column_start":1,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131529,"byte_end":131536,"line_start":1413,"line_end":1413,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131537,"byte_end":131545,"line_start":1414,"line_end":1414,"column_start":1,"column_end":9}},{"value":"/ let mut expected = S::default();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131546,"byte_end":131582,"line_start":1415,"line_end":1415,"column_start":1,"column_end":37}},{"value":"/ expected.s.push((1, \"Hi\".into()));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131583,"byte_end":131621,"line_start":1416,"line_end":1416,"column_start":1,"column_end":39}},{"value":"/ expected.s.push((1, \"Cake\".into()));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131622,"byte_end":131662,"line_start":1417,"line_end":1417,"column_start":1,"column_end":41}},{"value":"/ expected.s.push((1, \"Lie\".into()));","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131663,"byte_end":131702,"line_start":1418,"line_end":1418,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131703,"byte_end":131706,"line_start":1419,"line_end":1419,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131707,"byte_end":131760,"line_start":1420,"line_end":1420,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(3, res.s.len());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131761,"byte_end":131792,"line_start":1421,"line_end":1421,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131793,"byte_end":131823,"line_start":1422,"line_end":1422,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131824,"byte_end":131895,"line_start":1423,"line_end":1423,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131896,"byte_end":131903,"line_start":1424,"line_end":1424,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131904,"byte_end":131907,"line_start":1425,"line_end":1425,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":131908,"byte_end":131948,"line_start":1426,"line_end":1426,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":595},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":132143,"byte_end":132152,"line_start":1431,"line_end":1431,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::tuple_list_as_map::serialize","value":"fn <'a, I, K, V, S> (iter: I, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize any iteration of tuples into a map.\n","sig":null,"attributes":[{"value":"/ Serialize any iteration of tuples into a map.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":132082,"byte_end":132131,"line_start":1430,"line_end":1430,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":601},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":132684,"byte_end":132695,"line_start":1448,"line_end":1448,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::tuple_list_as_map::deserialize","value":"fn <'de, I, K, V, D> (deserializer: D) -> Result<I, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map into an iterator of tuples.\n","sig":null,"attributes":[{"value":"/ Deserialize a map into an iterator of tuples.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":132623,"byte_end":132672,"line_start":1447,"line_end":1447,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":638},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136112,"byte_end":136127,"line_start":1576,"line_end":1576,"column_start":9,"column_end":24},"name":"bytes_or_string","qualname":"::rust::bytes_or_string","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":645}],"decl_id":null,"docs":" Deserialize from bytes or string","sig":null,"attributes":[{"value":"/ Deserialize from bytes or string","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134335,"byte_end":134371,"line_start":1509,"line_end":1509,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134372,"byte_end":134375,"line_start":1510,"line_end":1510,"column_start":1,"column_end":4}},{"value":"/ Any Rust [`String`] can be converted into bytes, i.e., `Vec<u8>`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134376,"byte_end":134445,"line_start":1511,"line_end":1511,"column_start":1,"column_end":70}},{"value":"/ Accepting both as formats while deserializing can be helpful while interacting with language","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134446,"byte_end":134542,"line_start":1512,"line_end":1512,"column_start":1,"column_end":97}},{"value":"/ which have a looser definition of string than Rust.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134543,"byte_end":134598,"line_start":1513,"line_end":1513,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134599,"byte_end":134602,"line_start":1514,"line_end":1514,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134603,"byte_end":134634,"line_start":1515,"line_end":1515,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134635,"byte_end":134638,"line_start":1516,"line_end":1516,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`BytesOrString`] and using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134639,"byte_end":134751,"line_start":1517,"line_end":1517,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134752,"byte_end":134755,"line_start":1518,"line_end":1518,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134756,"byte_end":134767,"line_start":1519,"line_end":1519,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134768,"byte_end":134802,"line_start":1520,"line_end":1520,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134803,"byte_end":134839,"line_start":1521,"line_end":1521,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, BytesOrString};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134840,"byte_end":134888,"line_start":1522,"line_end":1522,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134889,"byte_end":134894,"line_start":1523,"line_end":1523,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134895,"byte_end":134910,"line_start":1524,"line_end":1524,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134911,"byte_end":134937,"line_start":1525,"line_end":1525,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134938,"byte_end":134952,"line_start":1526,"line_end":1526,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BytesOrString\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134953,"byte_end":134994,"line_start":1527,"line_end":1527,"column_start":1,"column_end":42}},{"value":"/     bos: Vec<u8>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":134995,"byte_end":135016,"line_start":1528,"line_end":1528,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135017,"byte_end":135022,"line_start":1529,"line_end":1529,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135023,"byte_end":135030,"line_start":1530,"line_end":1530,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135031,"byte_end":135038,"line_start":1531,"line_end":1531,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135039,"byte_end":135042,"line_start":1532,"line_end":1532,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135043,"byte_end":135056,"line_start":1533,"line_end":1533,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135057,"byte_end":135068,"line_start":1534,"line_end":1534,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135069,"byte_end":135118,"line_start":1535,"line_end":1535,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135119,"byte_end":135124,"line_start":1536,"line_end":1536,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, PartialEq, Default)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135125,"byte_end":135189,"line_start":1537,"line_end":1537,"column_start":1,"column_end":65}},{"value":"/ struct S {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135190,"byte_end":135204,"line_start":1538,"line_end":1538,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::bytes_or_string::deserialize\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135205,"byte_end":135290,"line_start":1539,"line_end":1539,"column_start":1,"column_end":86}},{"value":"/     bos: Vec<u8>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135291,"byte_end":135312,"line_start":1540,"line_end":1540,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135313,"byte_end":135318,"line_start":1541,"line_end":1541,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135319,"byte_end":135322,"line_start":1542,"line_end":1542,"column_start":1,"column_end":4}},{"value":"/ // Here we deserialize from a byte array ...","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135323,"byte_end":135371,"line_start":1543,"line_end":1543,"column_start":1,"column_end":49}},{"value":"/ let from = r#\"{","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135372,"byte_end":135391,"line_start":1544,"line_end":1544,"column_start":1,"column_end":20}},{"value":"/   \"bos\": [","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135392,"byte_end":135406,"line_start":1545,"line_end":1545,"column_start":1,"column_end":15}},{"value":"/     0,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135407,"byte_end":135417,"line_start":1546,"line_end":1546,"column_start":1,"column_end":11}},{"value":"/     1,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135418,"byte_end":135428,"line_start":1547,"line_end":1547,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135429,"byte_end":135439,"line_start":1548,"line_end":1548,"column_start":1,"column_end":11}},{"value":"/     3","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135440,"byte_end":135449,"line_start":1549,"line_end":1549,"column_start":1,"column_end":10}},{"value":"/   ]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135450,"byte_end":135457,"line_start":1550,"line_end":1550,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135458,"byte_end":135466,"line_start":1551,"line_end":1551,"column_start":1,"column_end":9}},{"value":"/ let expected = S {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135467,"byte_end":135489,"line_start":1552,"line_end":1552,"column_start":1,"column_end":23}},{"value":"/     bos: vec![0, 1, 2, 3],","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135490,"byte_end":135520,"line_start":1553,"line_end":1553,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135521,"byte_end":135527,"line_start":1554,"line_end":1554,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135528,"byte_end":135531,"line_start":1555,"line_end":1555,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135532,"byte_end":135585,"line_start":1556,"line_end":1556,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135586,"byte_end":135616,"line_start":1557,"line_end":1557,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135617,"byte_end":135620,"line_start":1558,"line_end":1558,"column_start":1,"column_end":4}},{"value":"/ // and serialization works too.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135621,"byte_end":135656,"line_start":1559,"line_end":1559,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135657,"byte_end":135728,"line_start":1560,"line_end":1560,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135729,"byte_end":135732,"line_start":1561,"line_end":1561,"column_start":1,"column_end":4}},{"value":"/ // But we also support deserializing from a String","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135733,"byte_end":135787,"line_start":1562,"line_end":1562,"column_start":1,"column_end":55}},{"value":"/ let from = r#\"{","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135788,"byte_end":135807,"line_start":1563,"line_end":1563,"column_start":1,"column_end":20}},{"value":"/   \"bos\": \"✨Works!\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135808,"byte_end":135832,"line_start":1564,"line_end":1564,"column_start":1,"column_end":23}},{"value":"/ }\"#;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135833,"byte_end":135841,"line_start":1565,"line_end":1565,"column_start":1,"column_end":9}},{"value":"/ let expected = S {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135842,"byte_end":135864,"line_start":1566,"line_end":1566,"column_start":1,"column_end":23}},{"value":"/     bos: \"✨Works!\".as_bytes().to_vec(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135865,"byte_end":135910,"line_start":1567,"line_end":1567,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135911,"byte_end":135917,"line_start":1568,"line_end":1568,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135918,"byte_end":135921,"line_start":1569,"line_end":1569,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135922,"byte_end":135975,"line_start":1570,"line_end":1570,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":135976,"byte_end":136006,"line_start":1571,"line_end":1571,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136007,"byte_end":136014,"line_start":1572,"line_end":1572,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136015,"byte_end":136018,"line_start":1573,"line_end":1573,"column_start":1,"column_end":4}},{"value":"/ [`BytesOrString`]: crate::BytesOrString","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136019,"byte_end":136062,"line_start":1574,"line_end":1574,"column_start":1,"column_end":44}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136063,"byte_end":136103,"line_start":1575,"line_end":1575,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":640},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136224,"byte_end":136235,"line_start":1580,"line_end":1580,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::bytes_or_string::deserialize","value":"fn <'de, D> (deserializer: D) -> Result<Vec<u8>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`Vec`]`<u8>` from either bytes or string\n","sig":null,"attributes":[{"value":"/ Deserialize a [`Vec`]`<u8>` from either bytes or string","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136153,"byte_end":136212,"line_start":1579,"line_end":1579,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":659},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139730,"byte_end":139746,"line_start":1700,"line_end":1700,"column_start":9,"column_end":25},"name":"default_on_error","qualname":"::rust::default_on_error","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":665}],"decl_id":null,"docs":" Deserialize value and return [`Default`] on error","sig":null,"attributes":[{"value":"/ Deserialize value and return [`Default`] on error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137468,"byte_end":137521,"line_start":1625,"line_end":1625,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137522,"byte_end":137525,"line_start":1626,"line_end":1626,"column_start":1,"column_end":4}},{"value":"/ The main use case is ignoring error while deserializing.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137526,"byte_end":137586,"line_start":1627,"line_end":1627,"column_start":1,"column_end":61}},{"value":"/ Instead of erroring, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137587,"byte_end":137671,"line_start":1628,"line_end":1628,"column_start":1,"column_end":85}},{"value":"/ It is not possible to find the error location, i.e., which field had a deserialization error, with this method.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137672,"byte_end":137787,"line_start":1629,"line_end":1629,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137788,"byte_end":137791,"line_start":1630,"line_end":1630,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137792,"byte_end":137823,"line_start":1631,"line_end":1631,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137824,"byte_end":137827,"line_start":1632,"line_end":1632,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DefaultOnError`] and using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137828,"byte_end":137941,"line_start":1633,"line_end":1633,"column_start":1,"column_end":114}},{"value":"/ It can be combined with other convertes as shown.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137942,"byte_end":137995,"line_start":1634,"line_end":1634,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":137996,"byte_end":137999,"line_start":1635,"line_end":1635,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138000,"byte_end":138011,"line_start":1636,"line_end":1636,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138012,"byte_end":138046,"line_start":1637,"line_end":1637,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138047,"byte_end":138083,"line_start":1638,"line_end":1638,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError, DisplayFromStr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138084,"byte_end":138149,"line_start":1639,"line_end":1639,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138150,"byte_end":138155,"line_start":1640,"line_end":1640,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138156,"byte_end":138171,"line_start":1641,"line_end":1641,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138172,"byte_end":138198,"line_start":1642,"line_end":1642,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138199,"byte_end":138213,"line_start":1643,"line_end":1643,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DefaultOnError\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138214,"byte_end":138256,"line_start":1644,"line_end":1644,"column_start":1,"column_end":43}},{"value":"/     value: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138257,"byte_end":138276,"line_start":1645,"line_end":1645,"column_start":1,"column_end":20}},{"value":"/     #[serde_as(as = \"DefaultOnError<DisplayFromStr>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138277,"byte_end":138335,"line_start":1646,"line_end":1646,"column_start":1,"column_end":59}},{"value":"/     value2: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138336,"byte_end":138356,"line_start":1647,"line_end":1647,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138357,"byte_end":138362,"line_start":1648,"line_end":1648,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138363,"byte_end":138370,"line_start":1649,"line_end":1649,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138371,"byte_end":138378,"line_start":1650,"line_end":1650,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138379,"byte_end":138382,"line_start":1651,"line_end":1651,"column_start":1,"column_end":4}},{"value":"/ [`DefaultOnError`]: crate::DefaultOnError","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138383,"byte_end":138428,"line_start":1652,"line_end":1652,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138429,"byte_end":138469,"line_start":1653,"line_end":1653,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138470,"byte_end":138473,"line_start":1654,"line_end":1654,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138474,"byte_end":138488,"line_start":1655,"line_end":1655,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138489,"byte_end":138492,"line_start":1656,"line_end":1656,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138493,"byte_end":138500,"line_start":1657,"line_end":1657,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138501,"byte_end":138537,"line_start":1658,"line_end":1658,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138538,"byte_end":138543,"line_start":1659,"line_end":1659,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138544,"byte_end":138570,"line_start":1660,"line_end":1660,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138571,"byte_end":138585,"line_start":1661,"line_end":1661,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::default_on_error::deserialize\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138586,"byte_end":138672,"line_start":1662,"line_end":1662,"column_start":1,"column_end":87}},{"value":"/     value: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138673,"byte_end":138692,"line_start":1663,"line_end":1663,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138693,"byte_end":138698,"line_start":1664,"line_end":1664,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138699,"byte_end":138702,"line_start":1665,"line_end":1665,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138703,"byte_end":138769,"line_start":1666,"line_end":1666,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138770,"byte_end":138799,"line_start":1667,"line_end":1667,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138800,"byte_end":138803,"line_start":1668,"line_end":1668,"column_start":1,"column_end":4}},{"value":"/ // null is of invalid type","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138804,"byte_end":138834,"line_start":1669,"line_end":1669,"column_start":1,"column_end":31}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138835,"byte_end":138902,"line_start":1670,"line_end":1670,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138903,"byte_end":138930,"line_start":1671,"line_end":1671,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138931,"byte_end":138934,"line_start":1672,"line_end":1672,"column_start":1,"column_end":4}},{"value":"/ // String is of invalid type","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138935,"byte_end":138967,"line_start":1673,"line_end":1673,"column_start":1,"column_end":33}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": \"123\"}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":138968,"byte_end":139036,"line_start":1674,"line_end":1674,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139037,"byte_end":139064,"line_start":1675,"line_end":1675,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139065,"byte_end":139068,"line_start":1676,"line_end":1676,"column_start":1,"column_end":4}},{"value":"/ // Map is of invalid type","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139069,"byte_end":139098,"line_start":1677,"line_end":1677,"column_start":1,"column_end":30}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": {}}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139099,"byte_end":139164,"line_start":1678,"line_end":1678,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139165,"byte_end":139192,"line_start":1679,"line_end":1679,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139193,"byte_end":139196,"line_start":1680,"line_end":1680,"column_start":1,"column_end":4}},{"value":"/ // Missing entries still cause errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139197,"byte_end":139238,"line_start":1681,"line_end":1681,"column_start":1,"column_end":42}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{  }\"#).is_err());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139239,"byte_end":139298,"line_start":1682,"line_end":1682,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139299,"byte_end":139306,"line_start":1683,"line_end":1683,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139307,"byte_end":139310,"line_start":1684,"line_end":1684,"column_start":1,"column_end":4}},{"value":"/ Deserializing missing values can be supported by adding the `default` field attribute:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139311,"byte_end":139401,"line_start":1685,"line_end":1685,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139402,"byte_end":139405,"line_start":1686,"line_end":1686,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139406,"byte_end":139413,"line_start":1687,"line_end":1687,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139414,"byte_end":139450,"line_start":1688,"line_end":1688,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139451,"byte_end":139456,"line_start":1689,"line_end":1689,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139457,"byte_end":139483,"line_start":1690,"line_end":1690,"column_start":1,"column_end":27}},{"value":"/ struct B {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139484,"byte_end":139498,"line_start":1691,"line_end":1691,"column_start":1,"column_end":15}},{"value":"/     #[serde(default, deserialize_with = \"serde_with::rust::default_on_error::deserialize\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139499,"byte_end":139594,"line_start":1692,"line_end":1692,"column_start":1,"column_end":96}},{"value":"/     value: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139595,"byte_end":139614,"line_start":1693,"line_end":1693,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139615,"byte_end":139620,"line_start":1694,"line_end":1694,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139621,"byte_end":139624,"line_start":1695,"line_end":1695,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139625,"byte_end":139628,"line_start":1696,"line_end":1696,"column_start":1,"column_end":4}},{"value":"/ let b: B = serde_json::from_str(r#\"{  }\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139629,"byte_end":139685,"line_start":1697,"line_end":1697,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(0, b.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139686,"byte_end":139713,"line_start":1698,"line_end":1698,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139714,"byte_end":139721,"line_start":1699,"line_end":1699,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":661},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139843,"byte_end":139854,"line_start":1704,"line_end":1704,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::default_on_error::deserialize","value":"fn <'de, D, T> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T and return the [`Default`] value on error\n","sig":null,"attributes":[{"value":"/ Deserialize T and return the [`Default`] value on error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":139772,"byte_end":139831,"line_start":1703,"line_end":1703,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":665},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":140634,"byte_end":140643,"line_start":1726,"line_end":1726,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::default_on_error::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize value with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize value with the default serializer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":140575,"byte_end":140622,"line_start":1725,"line_end":1725,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":668},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142274,"byte_end":142289,"line_start":1784,"line_end":1784,"column_start":9,"column_end":24},"name":"default_on_null","qualname":"::rust::default_on_null","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":674}],"decl_id":null,"docs":" Deserialize default value if encountering `null`.","sig":null,"attributes":[{"value":"/ Deserialize default value if encountering `null`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":140809,"byte_end":140862,"line_start":1735,"line_end":1735,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":140863,"byte_end":140866,"line_start":1736,"line_end":1736,"column_start":1,"column_end":4}},{"value":"/ One use case are JSON APIs in which the `null` value represents some default state.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":140867,"byte_end":140954,"line_start":1737,"line_end":1737,"column_start":1,"column_end":88}},{"value":"/ This adapter allows to turn the `null` directly into the [`Default`] value of the type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":140955,"byte_end":141046,"line_start":1738,"line_end":1738,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141047,"byte_end":141050,"line_start":1739,"line_end":1739,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141051,"byte_end":141082,"line_start":1740,"line_end":1740,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141083,"byte_end":141086,"line_start":1741,"line_end":1741,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DefaultOnNull`] and using the [`serde_as`] macro.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141087,"byte_end":141199,"line_start":1742,"line_end":1742,"column_start":1,"column_end":113}},{"value":"/ It can be combined with other convertes as shown.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141200,"byte_end":141253,"line_start":1743,"line_end":1743,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141254,"byte_end":141257,"line_start":1744,"line_end":1744,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141258,"byte_end":141269,"line_start":1745,"line_end":1745,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141270,"byte_end":141304,"line_start":1746,"line_end":1746,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141305,"byte_end":141341,"line_start":1747,"line_end":1747,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnNull, DisplayFromStr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141342,"byte_end":141406,"line_start":1748,"line_end":1748,"column_start":1,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141407,"byte_end":141412,"line_start":1749,"line_end":1749,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141413,"byte_end":141428,"line_start":1750,"line_end":1750,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141429,"byte_end":141455,"line_start":1751,"line_end":1751,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141456,"byte_end":141470,"line_start":1752,"line_end":1752,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DefaultOnNull\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141471,"byte_end":141512,"line_start":1753,"line_end":1753,"column_start":1,"column_end":42}},{"value":"/     value: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141513,"byte_end":141532,"line_start":1754,"line_end":1754,"column_start":1,"column_end":20}},{"value":"/     #[serde_as(as = \"DefaultOnNull<DisplayFromStr>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141533,"byte_end":141590,"line_start":1755,"line_end":1755,"column_start":1,"column_end":58}},{"value":"/     value2: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141591,"byte_end":141611,"line_start":1756,"line_end":1756,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141612,"byte_end":141617,"line_start":1757,"line_end":1757,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141618,"byte_end":141625,"line_start":1758,"line_end":1758,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141626,"byte_end":141633,"line_start":1759,"line_end":1759,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141634,"byte_end":141637,"line_start":1760,"line_end":1760,"column_start":1,"column_end":4}},{"value":"/ [`DefaultOnNull`]: crate::DefaultOnNull","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141638,"byte_end":141681,"line_start":1761,"line_end":1761,"column_start":1,"column_end":44}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141682,"byte_end":141722,"line_start":1762,"line_end":1762,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141723,"byte_end":141726,"line_start":1763,"line_end":1763,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141727,"byte_end":141741,"line_start":1764,"line_end":1764,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141742,"byte_end":141745,"line_start":1765,"line_end":1765,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141746,"byte_end":141753,"line_start":1766,"line_end":1766,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141754,"byte_end":141790,"line_start":1767,"line_end":1767,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141791,"byte_end":141796,"line_start":1768,"line_end":1768,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141797,"byte_end":141823,"line_start":1769,"line_end":1769,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141824,"byte_end":141838,"line_start":1770,"line_end":1770,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::default_on_null::deserialize\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141839,"byte_end":141924,"line_start":1771,"line_end":1771,"column_start":1,"column_end":86}},{"value":"/     value: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141925,"byte_end":141944,"line_start":1772,"line_end":1772,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141945,"byte_end":141950,"line_start":1773,"line_end":1773,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141951,"byte_end":141954,"line_start":1774,"line_end":1774,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":141955,"byte_end":142021,"line_start":1775,"line_end":1775,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142022,"byte_end":142051,"line_start":1776,"line_end":1776,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142052,"byte_end":142055,"line_start":1777,"line_end":1777,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142056,"byte_end":142123,"line_start":1778,"line_end":1778,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142124,"byte_end":142151,"line_start":1779,"line_end":1779,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142152,"byte_end":142155,"line_start":1780,"line_end":1780,"column_start":1,"column_end":4}},{"value":"/ // String is invalid type","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142156,"byte_end":142185,"line_start":1781,"line_end":1781,"column_start":1,"column_end":30}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{\"value\": \"123\"}\"#).is_err());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142186,"byte_end":142257,"line_start":1782,"line_end":1782,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142258,"byte_end":142265,"line_start":1783,"line_end":1783,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":670},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142405,"byte_end":142416,"line_start":1788,"line_end":1788,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::default_on_null::deserialize","value":"fn <'de, D, T> (deserializer: D) -> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T and return the [`Default`] value if original value is `null`\n","sig":null,"attributes":[{"value":"/ Deserialize T and return the [`Default`] value if original value is `null`","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142315,"byte_end":142393,"line_start":1787,"line_end":1787,"column_start":5,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142690,"byte_end":142699,"line_start":1797,"line_end":1797,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::default_on_null::serialize","value":"fn <T, S> (value: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize value with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize value with the default serializer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":142631,"byte_end":142678,"line_start":1796,"line_end":1796,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":677},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":5118},{"krate":0,"index":5124},{"krate":0,"index":758},{"krate":0,"index":763},{"krate":0,"index":769}],"decl_id":null,"docs":" Module for [`SerializeAs`][] implementations","sig":null,"attributes":[{"value":"! Module for [`SerializeAs`][] implementations","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":142865,"byte_end":142913,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":142914,"byte_end":142917,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The module contains the [`SerializeAs`][] trait and helper code.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":142918,"byte_end":142986,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! Additionally, it contains implementations of [`SerializeAs`][] for types defined in the Rust Standard Library or this crate.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":142987,"byte_end":143115,"line_start":4,"line_end":4,"column_start":1,"column_end":129}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143116,"byte_end":143119,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! You can find more details on how to implement this trait for your types in the documentation of the [`SerializeAs`][] trait and details about the usage in the [user guide][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143120,"byte_end":143298,"line_start":6,"line_end":6,"column_start":1,"column_end":179}},{"value":"!","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143299,"byte_end":143302,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [user guide]: crate::guide","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143303,"byte_end":143333,"line_start":8,"line_end":8,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":754},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145617,"byte_end":145628,"line_start":68,"line_end":68,"column_start":11,"column_end":22},"name":"SerializeAs","qualname":"::ser::SerializeAs","value":"SerializeAs<T>","parent":null,"children":[{"krate":0,"index":756}],"decl_id":null,"docs":" A **data structure** that can be serialized into any data format supported by Serde, analogue to [`Serialize`].","sig":null,"attributes":[{"value":"/ A **data structure** that can be serialized into any data format supported by Serde, analogue to [`Serialize`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143362,"byte_end":143477,"line_start":14,"line_end":14,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143478,"byte_end":143481,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The trait is analogue to the [`serde::Serialize`][`Serialize`] trait, with the same meaning of input and output arguments.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143482,"byte_end":143608,"line_start":16,"line_end":16,"column_start":1,"column_end":127}},{"value":"/ It can and should the implemented using the same code structure as the [`Serialize`] trait.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143609,"byte_end":143704,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ As such, the same advice for [implementing `Serialize`][impl-serialize] applies here.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143705,"byte_end":143794,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143795,"byte_end":143798,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Differences to [`Serialize`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143799,"byte_end":143833,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143834,"byte_end":143837,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The trait is only required for container-like types or types implementing specific conversion functions.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143838,"byte_end":143946,"line_start":22,"line_end":22,"column_start":1,"column_end":109}},{"value":"/ Container-like types are [`Vec`][], [`BTreeMap`][], but also [`Option`][] and [`Box`][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":143947,"byte_end":144039,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ Conversion types serialize into a different serde data type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144040,"byte_end":144104,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/ For example, [`DisplayFromStr`] uses the [`Display`] trait to serialize a String and [`DurationSeconds`] converts a [`Duration`] into either String or integer values.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144105,"byte_end":144275,"line_start":25,"line_end":25,"column_start":1,"column_end":171}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144276,"byte_end":144279,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This code shows how to implement [`Serialize`] for [`Box`]:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144280,"byte_end":144343,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144344,"byte_end":144347,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144348,"byte_end":144366,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ impl<T> Serialize for Box<T>","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144367,"byte_end":144399,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ where","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144400,"byte_end":144409,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/     T: Serialize,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144410,"byte_end":144431,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144432,"byte_end":144437,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/     #[inline]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144438,"byte_end":144455,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144456,"byte_end":144528,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144529,"byte_end":144542,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144543,"byte_end":144569,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144570,"byte_end":144579,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/         (**self).serialize(serializer)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144580,"byte_end":144622,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144623,"byte_end":144632,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144633,"byte_end":144638,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144639,"byte_end":144646,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144647,"byte_end":144650,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ and this code shows how to do the same using [`SerializeAs`][]:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144651,"byte_end":144718,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144719,"byte_end":144722,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144723,"byte_end":144741,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ impl<T, U> SerializeAs<Box<T>> for Box<U>","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144742,"byte_end":144787,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144788,"byte_end":144797,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/     U: SerializeAs<T>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144798,"byte_end":144824,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144825,"byte_end":144830,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/     fn serialize_as<S>(source: &Box<T>, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144831,"byte_end":144916,"line_start":51,"line_end":51,"column_start":1,"column_end":86}},{"value":"/     where","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144917,"byte_end":144930,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144931,"byte_end":144957,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144958,"byte_end":144967,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/         SerializeAsWrap::<T, U>::new(source).serialize(serializer)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":144968,"byte_end":145038,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145039,"byte_end":145048,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145049,"byte_end":145054,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145055,"byte_end":145062,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145063,"byte_end":145066,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ It uses two type parameters, `T` and `U` instead of only one and performs the serialization step using the `SerializeAsWrap` type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145067,"byte_end":145201,"line_start":60,"line_end":60,"column_start":1,"column_end":135}},{"value":"/ The `T` type is the on the Rust side before serialization, whereas the `U` type determines how the value will be serialized.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145202,"byte_end":145330,"line_start":61,"line_end":61,"column_start":1,"column_end":129}},{"value":"/ These two changes are usually enough to make a container type implement [`SerializeAs`][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145331,"byte_end":145425,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145426,"byte_end":145429,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: std::collections::BTreeMap","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145430,"byte_end":145474,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/ [`Display`]: std::fmt::Display","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145475,"byte_end":145509,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`Duration`]: std::time::Duration","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145510,"byte_end":145547,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ [impl-serialize]: https://serde.rs/impl-serialize.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145548,"byte_end":145606,"line_start":67,"line_end":67,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145703,"byte_end":145715,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"serialize_as","qualname":"::ser::SerializeAs::serialize_as","value":"fn <S> (source: &T, serializer: S) -> Result<S::Ok, S::Error>","parent":{"krate":0,"index":754},"children":[],"decl_id":null,"docs":" Serialize this value into the given Serde serializer.\n","sig":null,"attributes":[{"value":"/ Serialize this value into the given Serde serializer.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145638,"byte_end":145695,"line_start":69,"line_end":69,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5118},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145908,"byte_end":145923,"line_start":77,"line_end":77,"column_start":12,"column_end":27},"name":"SerializeAsWrap","qualname":"::ser::SerializeAsWrap","value":"SerializeAsWrap {  }","parent":null,"children":[{"krate":0,"index":5122},{"krate":0,"index":5123}],"decl_id":null,"docs":" Helper type to implement [`SerializeAs`] for container-like types.\n","sig":null,"attributes":[{"value":"/ Helper type to implement [`SerializeAs`] for container-like types.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":145809,"byte_end":145879,"line_start":75,"line_end":75,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":146088,"byte_end":146091,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<SerializeAsWrap>::new","value":"fn (value: &'a T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new instance with provided value.\n","sig":null,"attributes":[{"value":"/ Create new instance with provided value.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":146032,"byte_end":146076,"line_start":83,"line_end":83,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":970},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"with_prefix","qualname":"::with_prefix","value":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":995},{"krate":0,"index":1000},{"krate":0,"index":1043},{"krate":0,"index":1056},{"krate":0,"index":1064},{"krate":0,"index":1071},{"krate":0,"index":1082},{"krate":0,"index":1090},{"krate":0,"index":1099},{"krate":0,"index":1105},{"krate":0,"index":1115},{"krate":0,"index":1122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":990},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":181055,"byte_end":181065,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"WithPrefix","qualname":"::with_prefix::WithPrefix","value":"WithPrefix { delegate, prefix }","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":181004,"byte_end":181043,"line_start":140,"line_end":140,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":993},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":181083,"byte_end":181091,"line_start":142,"line_end":142,"column_start":9,"column_end":17},"name":"delegate","qualname":"::with_prefix::WithPrefix::delegate","value":"T","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":994},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":181104,"byte_end":181110,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"name":"prefix","qualname":"::with_prefix::WithPrefix::prefix","value":"&'a str","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1099},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":191459,"byte_end":191475,"line_start":517,"line_end":517,"column_start":12,"column_end":28},"name":"WithPrefixOption","qualname":"::with_prefix::WithPrefixOption","value":"WithPrefixOption {  }","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":191408,"byte_end":191447,"line_start":516,"line_end":516,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1142},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9539,"byte_end":9548,"line_start":270,"line_end":270,"column_start":11,"column_end":20},"name":"Separator","qualname":"::Separator","value":"Separator","parent":null,"children":[{"krate":0,"index":1143}],"decl_id":null,"docs":" Separator for string-based collection de/serialization\n","sig":null,"attributes":[{"value":"/ Separator for string-based collection de/serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9470,"byte_end":9528,"line_start":269,"line_end":269,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9639,"byte_end":9648,"line_start":272,"line_end":272,"column_start":8,"column_end":17},"name":"separator","qualname":"::Separator::separator","value":"fn () -> &'static str","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":" Return the string delimiting two elements in the string-based collection\n","sig":null,"attributes":[{"value":"/ Return the string delimiting two elements in the string-based collection","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9555,"byte_end":9631,"line_start":271,"line_end":271,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":5278},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9805,"byte_end":9819,"line_start":277,"line_end":277,"column_start":12,"column_end":26},"name":"SpaceSeparator","qualname":"::SpaceSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Predefined separator using a single space\n","sig":null,"attributes":[{"value":"/ Predefined separator using a single space","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9671,"byte_end":9716,"line_start":275,"line_end":275,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5300},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10064,"byte_end":10078,"line_start":288,"line_end":288,"column_start":12,"column_end":26},"name":"CommaSeparator","qualname":"::CommaSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Predefined separator using a single comma\n","sig":null,"attributes":[{"value":"/ Predefined separator using a single comma","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9930,"byte_end":9975,"line_start":286,"line_end":286,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5322},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12311,"byte_end":12313,"line_start":338,"line_end":338,"column_start":12,"column_end":14},"name":"As","qualname":"::As","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter to convert from `serde_as` to the serde traits.","sig":null,"attributes":[{"value":"/ Adapter to convert from `serde_as` to the serde traits.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10189,"byte_end":10248,"line_start":297,"line_end":297,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10249,"byte_end":10252,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ The `As` type adapter allows to use types implementing [`DeserializeAs`][] or [`SerializeAs`][] in place of serde's with-annotation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10253,"byte_end":10389,"line_start":299,"line_end":299,"column_start":1,"column_end":137}},{"value":"/ The with-annotation allows to run custom code when de/serializing, however it is quite inflexible.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10390,"byte_end":10492,"line_start":300,"line_end":300,"column_start":1,"column_end":103}},{"value":"/ The traits [`DeserializeAs`][]/[`SerializeAs`][] are more flexible, as they allow composition and nesting of types to create more complex de/serialization behavior.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10493,"byte_end":10661,"line_start":301,"line_end":301,"column_start":1,"column_end":169}},{"value":"/ However, they are not directly compatible with serde, as they are not provided by serde.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10662,"byte_end":10754,"line_start":302,"line_end":302,"column_start":1,"column_end":93}},{"value":"/ The `As` type adapter makes them compatible, by forwarding the function calls to `serialize`/`deserialize` to the corresponding functions `serialize_as` and `deserialize_as`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10755,"byte_end":10933,"line_start":303,"line_end":303,"column_start":1,"column_end":179}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10934,"byte_end":10937,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ It is not required to use this type directly.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10938,"byte_end":10987,"line_start":305,"line_end":305,"column_start":1,"column_end":50}},{"value":"/ Instead, it is highly encouraged to use the [`#[serde_as]`][serde_as] attribute since it includes further usability improvements.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10988,"byte_end":11121,"line_start":306,"line_end":306,"column_start":1,"column_end":134}},{"value":"/ If the use of the use of the proc-macro is not acceptable, then `As` can be used directly with serde.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11122,"byte_end":11227,"line_start":307,"line_end":307,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11228,"byte_end":11231,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11232,"byte_end":11243,"line_start":309,"line_end":309,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11244,"byte_end":11293,"line_start":310,"line_end":310,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::{As, DisplayFromStr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11294,"byte_end":11337,"line_start":311,"line_end":311,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11338,"byte_end":11343,"line_start":312,"line_end":312,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11344,"byte_end":11381,"line_start":313,"line_end":313,"column_start":1,"column_end":38}},{"value":"/ # struct S {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11382,"byte_end":11398,"line_start":314,"line_end":314,"column_start":1,"column_end":17}},{"value":"/ // Serialize numbers as sequence of strings, using Display and FromStr","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11399,"byte_end":11473,"line_start":315,"line_end":315,"column_start":1,"column_end":75}},{"value":"/ #[serde(with = \"As::<Vec<DisplayFromStr>>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11474,"byte_end":11522,"line_start":316,"line_end":316,"column_start":1,"column_end":49}},{"value":"/ field: Vec<u8>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11523,"byte_end":11542,"line_start":317,"line_end":317,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11543,"byte_end":11550,"line_start":318,"line_end":318,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11551,"byte_end":11558,"line_start":319,"line_end":319,"column_start":1,"column_end":8}},{"value":"/ If the normal `Deserialize`/`Serialize` traits should be used, the placeholder type [`Same`] can be used.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11559,"byte_end":11668,"line_start":320,"line_end":320,"column_start":1,"column_end":110}},{"value":"/ It implements [`DeserializeAs`][]/[`SerializeAs`][], when the underlying type implements `Deserialize`/`Serialize`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11669,"byte_end":11788,"line_start":321,"line_end":321,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11789,"byte_end":11792,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11793,"byte_end":11804,"line_start":323,"line_end":323,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11805,"byte_end":11854,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::{As, DisplayFromStr, Same};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11855,"byte_end":11904,"line_start":325,"line_end":325,"column_start":1,"column_end":50}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11905,"byte_end":11942,"line_start":326,"line_end":326,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11943,"byte_end":11948,"line_start":327,"line_end":327,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11949,"byte_end":11986,"line_start":328,"line_end":328,"column_start":1,"column_end":38}},{"value":"/ # struct S {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":11987,"byte_end":12003,"line_start":329,"line_end":329,"column_start":1,"column_end":17}},{"value":"/ // Serialize map, turn keys into strings but keep type of value","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12004,"byte_end":12071,"line_start":330,"line_end":330,"column_start":1,"column_end":68}},{"value":"/ #[serde(with = \"As::<BTreeMap<DisplayFromStr, Same>>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12072,"byte_end":12131,"line_start":331,"line_end":331,"column_start":1,"column_end":60}},{"value":"/ field: BTreeMap<u8, i32>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12132,"byte_end":12161,"line_start":332,"line_end":332,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12162,"byte_end":12169,"line_start":333,"line_end":333,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12170,"byte_end":12177,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12178,"byte_end":12181,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [serde_as]: https://docs.rs/serde_with/1.6.0/serde_with/attr.serde_as.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12182,"byte_end":12260,"line_start":336,"line_end":336,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12589,"byte_end":12598,"line_start":346,"line_end":346,"column_start":12,"column_end":21},"name":"serialize","qualname":"<As<T>>::serialize","value":"fn <S, I> (value: &I, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize type `T` using [`SerializeAs`][]","sig":null,"attributes":[{"value":"/ Serialize type `T` using [`SerializeAs`][]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12355,"byte_end":12401,"line_start":341,"line_end":341,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12406,"byte_end":12409,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ The function signature is compatible with [serde's with-annotation][with-annotation].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12414,"byte_end":12503,"line_start":343,"line_end":343,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12508,"byte_end":12511,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12516,"byte_end":12577,"line_start":345,"line_end":345,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13016,"byte_end":13027,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<As<T>>::deserialize","value":"fn <'de, D, I> (deserializer: D) -> Result<I, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize type `T` using [`DeserializeAs`][]","sig":null,"attributes":[{"value":"/ Deserialize type `T` using [`DeserializeAs`][]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12778,"byte_end":12828,"line_start":354,"line_end":354,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12833,"byte_end":12836,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The function signature is compatible with [serde's with-annotation][with-annotation].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12841,"byte_end":12930,"line_start":356,"line_end":356,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12935,"byte_end":12938,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12943,"byte_end":13004,"line_start":358,"line_end":358,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5337},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13559,"byte_end":13563,"line_start":374,"line_end":374,"column_start":12,"column_end":16},"name":"Same","qualname":"::Same","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter to convert from `serde_as` to the serde traits.","sig":null,"attributes":[{"value":"/ Adapter to convert from `serde_as` to the serde traits.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13208,"byte_end":13267,"line_start":368,"line_end":368,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13268,"byte_end":13271,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ This is the counter-type to [`As`][].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13272,"byte_end":13313,"line_start":370,"line_end":370,"column_start":1,"column_end":42}},{"value":"/ It can be used whenever a type implementing [`DeserializeAs`][]/[`SerializeAs`][] is required but the normal `Deserialize`/`Serialize` traits should be used.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13314,"byte_end":13475,"line_start":371,"line_end":371,"column_start":1,"column_end":162}},{"value":"/ Check [`As`] for an example.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13476,"byte_end":13508,"line_start":372,"line_end":372,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15369,"byte_end":15383,"line_start":425,"line_end":425,"column_start":12,"column_end":26},"name":"DisplayFromStr","qualname":"::DisplayFromStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize using [`Display`] and [`FromStr`] implementation","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13566,"byte_end":13631,"line_start":376,"line_end":376,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13632,"byte_end":13635,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ This allows to deserialize a string as a number.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13636,"byte_end":13688,"line_start":378,"line_end":378,"column_start":1,"column_end":53}},{"value":"/ It can be very useful for serialization formats like JSON, which do not support integer","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13689,"byte_end":13780,"line_start":379,"line_end":379,"column_start":1,"column_end":92}},{"value":"/ numbers and have to resort to strings to represent them.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13781,"byte_end":13841,"line_start":380,"line_end":380,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13842,"byte_end":13845,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ Another use case is types with [`Display`] and [`FromStr`] implementations, but without serde","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13846,"byte_end":13943,"line_start":382,"line_end":382,"column_start":1,"column_end":98}},{"value":"/ support, which can be found in some crates.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13944,"byte_end":13991,"line_start":383,"line_end":383,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13992,"byte_end":13995,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ If you control the type you want to de/serialize, you can instead use the two derive macros, [`SerializeDisplay`] and [`DeserializeFromStr`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":13996,"byte_end":14141,"line_start":385,"line_end":385,"column_start":1,"column_end":146}},{"value":"/ They properly implement the traits [`Serialize`] and [`Deserialize`] such that user of the type no longer have to use the `serde_as` system.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14142,"byte_end":14286,"line_start":386,"line_end":386,"column_start":1,"column_end":145}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14287,"byte_end":14290,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::display_fromstr`][crate::rust::display_fromstr] compatible with serde's with-annotation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14291,"byte_end":14447,"line_start":388,"line_end":388,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14448,"byte_end":14451,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14452,"byte_end":14466,"line_start":390,"line_end":390,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14467,"byte_end":14470,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14471,"byte_end":14482,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14483,"byte_end":14517,"line_start":393,"line_end":393,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14518,"byte_end":14567,"line_start":394,"line_end":394,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14568,"byte_end":14595,"line_start":395,"line_end":395,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14596,"byte_end":14645,"line_start":396,"line_end":396,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14646,"byte_end":14651,"line_start":397,"line_end":397,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14652,"byte_end":14667,"line_start":398,"line_end":398,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14668,"byte_end":14705,"line_start":399,"line_end":399,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14706,"byte_end":14720,"line_start":400,"line_end":400,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14721,"byte_end":14763,"line_start":401,"line_end":401,"column_start":1,"column_end":43}},{"value":"/     mime: mime::Mime,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14764,"byte_end":14789,"line_start":402,"line_end":402,"column_start":1,"column_end":26}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14790,"byte_end":14832,"line_start":403,"line_end":403,"column_start":1,"column_end":43}},{"value":"/     number: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14833,"byte_end":14853,"line_start":404,"line_end":404,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14854,"byte_end":14859,"line_start":405,"line_end":405,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14860,"byte_end":14863,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14864,"byte_end":14909,"line_start":407,"line_end":407,"column_start":1,"column_end":46}},{"value":"/     \"mime\": \"text/plain\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14910,"byte_end":14939,"line_start":408,"line_end":408,"column_start":1,"column_end":30}},{"value":"/     \"number\": \"159\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14940,"byte_end":14964,"line_start":409,"line_end":409,"column_start":1,"column_end":25}},{"value":"/ })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14965,"byte_end":14982,"line_start":410,"line_end":410,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(mime::TEXT_PLAIN, v.mime);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":14983,"byte_end":15024,"line_start":411,"line_end":411,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(159, v.number);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15025,"byte_end":15055,"line_start":412,"line_end":412,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15056,"byte_end":15059,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15060,"byte_end":15075,"line_start":414,"line_end":414,"column_start":1,"column_end":16}},{"value":"/     mime: mime::STAR_STAR,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15076,"byte_end":15106,"line_start":415,"line_end":415,"column_start":1,"column_end":31}},{"value":"/     number: 777,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15107,"byte_end":15127,"line_start":416,"line_end":416,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15128,"byte_end":15134,"line_start":417,"line_end":417,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"mime\": \"*/*\", \"number\": \"777\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15135,"byte_end":15228,"line_start":418,"line_end":418,"column_start":1,"column_end":94}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15229,"byte_end":15236,"line_start":419,"line_end":419,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15237,"byte_end":15244,"line_start":420,"line_end":420,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15245,"byte_end":15248,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ [`Display`]: std::fmt::Display","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15249,"byte_end":15283,"line_start":422,"line_end":422,"column_start":1,"column_end":35}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15284,"byte_end":15318,"line_start":423,"line_end":423,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5355},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16814,"byte_end":16831,"line_start":469,"line_end":469,"column_start":12,"column_end":29},"name":"NoneAsEmptyString","qualname":"::NoneAsEmptyString","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","sig":null,"attributes":[{"value":"/ De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15386,"byte_end":15484,"line_start":427,"line_end":427,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15485,"byte_end":15488,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ Convert an [`Option`]`<T>` from/to string using [`FromStr`] and [`AsRef`]`<`[`str`]`>` implementations.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15489,"byte_end":15596,"line_start":429,"line_end":429,"column_start":1,"column_end":108}},{"value":"/ An empty string is deserialized as [`None`] and a [`None`] vice versa.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15597,"byte_end":15671,"line_start":430,"line_end":430,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15672,"byte_end":15675,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::string_empty_as_none`][crate::rust::string_empty_as_none] compatible with serde's with-annotation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15676,"byte_end":15842,"line_start":432,"line_end":432,"column_start":1,"column_end":167}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15843,"byte_end":15846,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15847,"byte_end":15861,"line_start":434,"line_end":434,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15862,"byte_end":15865,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15866,"byte_end":15873,"line_start":436,"line_end":436,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15874,"byte_end":15908,"line_start":437,"line_end":437,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15909,"byte_end":15958,"line_start":438,"line_end":438,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15959,"byte_end":15986,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, NoneAsEmptyString};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":15987,"byte_end":16039,"line_start":440,"line_end":440,"column_start":1,"column_end":53}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16040,"byte_end":16045,"line_start":441,"line_end":441,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16046,"byte_end":16061,"line_start":442,"line_end":442,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16062,"byte_end":16099,"line_start":443,"line_end":443,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16100,"byte_end":16114,"line_start":444,"line_end":444,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"NoneAsEmptyString\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16115,"byte_end":16160,"line_start":445,"line_end":445,"column_start":1,"column_end":46}},{"value":"/     tags: Option<String>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16161,"byte_end":16190,"line_start":446,"line_end":446,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16191,"byte_end":16196,"line_start":447,"line_end":447,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16197,"byte_end":16200,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"\" })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16201,"byte_end":16271,"line_start":449,"line_end":449,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(None, v.tags);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16272,"byte_end":16301,"line_start":450,"line_end":450,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16302,"byte_end":16305,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"Hi\" })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16306,"byte_end":16378,"line_start":452,"line_end":452,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(Some(\"Hi\".to_string()), v.tags);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16379,"byte_end":16426,"line_start":453,"line_end":453,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16427,"byte_end":16430,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16431,"byte_end":16446,"line_start":455,"line_end":455,"column_start":1,"column_end":16}},{"value":"/     tags: Some(\"This is text\".to_string()),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16447,"byte_end":16494,"line_start":456,"line_end":456,"column_start":1,"column_end":48}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16495,"byte_end":16501,"line_start":457,"line_end":457,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"This is text\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16502,"byte_end":16587,"line_start":458,"line_end":458,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16588,"byte_end":16591,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16592,"byte_end":16607,"line_start":460,"line_end":460,"column_start":1,"column_end":16}},{"value":"/     tags: None,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16608,"byte_end":16627,"line_start":461,"line_end":461,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16628,"byte_end":16634,"line_start":462,"line_end":462,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16635,"byte_end":16708,"line_start":463,"line_end":463,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16709,"byte_end":16716,"line_start":464,"line_end":464,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16717,"byte_end":16724,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16725,"byte_end":16728,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16729,"byte_end":16763,"line_start":467,"line_end":467,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5364},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19781,"byte_end":19795,"line_start":561,"line_end":561,"column_start":12,"column_end":26},"name":"DefaultOnError","qualname":"::DefaultOnError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deserialize value and return [`Default`] on error","sig":null,"attributes":[{"value":"/ Deserialize value and return [`Default`] on error","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16834,"byte_end":16887,"line_start":471,"line_end":471,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16888,"byte_end":16891,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ The main use case is ignoring error while deserializing.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16892,"byte_end":16952,"line_start":473,"line_end":473,"column_start":1,"column_end":61}},{"value":"/ Instead of erroring, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":16953,"byte_end":17037,"line_start":474,"line_end":474,"column_start":1,"column_end":85}},{"value":"/ It is not possible to find the error location, i.e., which field had a deserialization error, with this method.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17038,"byte_end":17153,"line_start":475,"line_end":475,"column_start":1,"column_end":116}},{"value":"/ During serialization this wrapper does nothing.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17154,"byte_end":17205,"line_start":476,"line_end":476,"column_start":1,"column_end":52}},{"value":"/ The serialization behavior of the underlying type is preserved.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17206,"byte_end":17273,"line_start":477,"line_end":477,"column_start":1,"column_end":68}},{"value":"/ The type must implement [`Default`] for this conversion to work.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17274,"byte_end":17342,"line_start":478,"line_end":478,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17343,"byte_end":17346,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::default_on_error`][crate::rust::default_on_error] compatible with serde's with-annotation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17347,"byte_end":17505,"line_start":480,"line_end":480,"column_start":1,"column_end":159}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17506,"byte_end":17509,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17510,"byte_end":17524,"line_start":482,"line_end":482,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17525,"byte_end":17528,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17529,"byte_end":17536,"line_start":484,"line_end":484,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17537,"byte_end":17571,"line_start":485,"line_end":485,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17572,"byte_end":17608,"line_start":486,"line_end":486,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17609,"byte_end":17658,"line_start":487,"line_end":487,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17659,"byte_end":17664,"line_start":488,"line_end":488,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17665,"byte_end":17680,"line_start":489,"line_end":489,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize,  Debug)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17681,"byte_end":17715,"line_start":490,"line_end":490,"column_start":1,"column_end":35}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17716,"byte_end":17730,"line_start":491,"line_end":491,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(deserialize_as = \"DefaultOnError\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17731,"byte_end":17785,"line_start":492,"line_end":492,"column_start":1,"column_end":55}},{"value":"/     value: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17786,"byte_end":17805,"line_start":493,"line_end":493,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17806,"byte_end":17811,"line_start":494,"line_end":494,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17812,"byte_end":17815,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17816,"byte_end":17882,"line_start":496,"line_end":496,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17883,"byte_end":17912,"line_start":497,"line_end":497,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17913,"byte_end":17916,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ // null is of invalid type","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17917,"byte_end":17947,"line_start":499,"line_end":499,"column_start":1,"column_end":31}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":17948,"byte_end":18015,"line_start":500,"line_end":500,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18016,"byte_end":18043,"line_start":501,"line_end":501,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18044,"byte_end":18047,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ // String is of invalid type","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18048,"byte_end":18080,"line_start":503,"line_end":503,"column_start":1,"column_end":33}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": \"123\"}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18081,"byte_end":18149,"line_start":504,"line_end":504,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18150,"byte_end":18177,"line_start":505,"line_end":505,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18178,"byte_end":18181,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ // Map is of invalid type","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18182,"byte_end":18211,"line_start":507,"line_end":507,"column_start":1,"column_end":30}},{"value":"/ let a: A = dbg!(serde_json::from_str(r#\"{\"value\": {}}\"#)).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18212,"byte_end":18283,"line_start":508,"line_end":508,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18284,"byte_end":18311,"line_start":509,"line_end":509,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18312,"byte_end":18315,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ // Missing entries still cause errors","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18316,"byte_end":18357,"line_start":511,"line_end":511,"column_start":1,"column_end":42}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{  }\"#).is_err());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18358,"byte_end":18417,"line_start":512,"line_end":512,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18418,"byte_end":18425,"line_start":513,"line_end":513,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18426,"byte_end":18433,"line_start":514,"line_end":514,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18434,"byte_end":18437,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ Deserializing missing values can be supported by adding the `default` field attribute:","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18438,"byte_end":18528,"line_start":516,"line_end":516,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18529,"byte_end":18532,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18533,"byte_end":18540,"line_start":518,"line_end":518,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18541,"byte_end":18575,"line_start":519,"line_end":519,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18576,"byte_end":18612,"line_start":520,"line_end":520,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18613,"byte_end":18662,"line_start":521,"line_end":521,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18663,"byte_end":18668,"line_start":522,"line_end":522,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18669,"byte_end":18684,"line_start":523,"line_end":523,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18685,"byte_end":18711,"line_start":524,"line_end":524,"column_start":1,"column_end":27}},{"value":"/ struct B {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18712,"byte_end":18726,"line_start":525,"line_end":525,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(deserialize_as = \"DefaultOnError\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18727,"byte_end":18781,"line_start":526,"line_end":526,"column_start":1,"column_end":55}},{"value":"/     #[serde(default)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18782,"byte_end":18807,"line_start":527,"line_end":527,"column_start":1,"column_end":26}},{"value":"/     value: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18808,"byte_end":18827,"line_start":528,"line_end":528,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18828,"byte_end":18833,"line_start":529,"line_end":529,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18834,"byte_end":18837,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18838,"byte_end":18841,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ let b: B = serde_json::from_str(r#\"{  }\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18842,"byte_end":18898,"line_start":532,"line_end":532,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(0, b.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18899,"byte_end":18926,"line_start":533,"line_end":533,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18927,"byte_end":18934,"line_start":534,"line_end":534,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18935,"byte_end":18942,"line_start":535,"line_end":535,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18943,"byte_end":18946,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ `DefaultOnError` can be combined with other conversion methods.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":18947,"byte_end":19014,"line_start":537,"line_end":537,"column_start":1,"column_end":68}},{"value":"/ In this example we deserialize a `Vec`, each element is deserialized from a string.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19015,"byte_end":19102,"line_start":538,"line_end":538,"column_start":1,"column_end":88}},{"value":"/ If the string does not parse as a number, then we get the default value of 0.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19103,"byte_end":19184,"line_start":539,"line_end":539,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19185,"byte_end":19188,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19189,"byte_end":19200,"line_start":541,"line_end":541,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19201,"byte_end":19235,"line_start":542,"line_end":542,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19236,"byte_end":19285,"line_start":543,"line_end":543,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19286,"byte_end":19313,"line_start":544,"line_end":544,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DefaultOnError, DisplayFromStr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19314,"byte_end":19379,"line_start":545,"line_end":545,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19380,"byte_end":19385,"line_start":546,"line_end":546,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19386,"byte_end":19401,"line_start":547,"line_end":547,"column_start":1,"column_end":16}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19402,"byte_end":19439,"line_start":548,"line_end":548,"column_start":1,"column_end":38}},{"value":"/ struct C {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19440,"byte_end":19454,"line_start":549,"line_end":549,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<DefaultOnError<DisplayFromStr>>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19455,"byte_end":19518,"line_start":550,"line_end":550,"column_start":1,"column_end":64}},{"value":"/     value: Vec<u32>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19519,"byte_end":19543,"line_start":551,"line_end":551,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19544,"byte_end":19550,"line_start":552,"line_end":552,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19551,"byte_end":19554,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ let c: C = serde_json::from_value(json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19555,"byte_end":19600,"line_start":554,"line_end":554,"column_start":1,"column_end":46}},{"value":"/     \"value\": [\"1\", \"2\", \"a3\", \"\", {}, \"6\"]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19601,"byte_end":19647,"line_start":555,"line_end":555,"column_start":1,"column_end":47}},{"value":"/ })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19648,"byte_end":19665,"line_start":556,"line_end":556,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(vec![1, 2, 0, 0, 0, 6], c.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19666,"byte_end":19714,"line_start":557,"line_end":557,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19715,"byte_end":19722,"line_start":558,"line_end":558,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19723,"byte_end":19730,"line_start":559,"line_end":559,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5379},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21719,"byte_end":21732,"line_start":619,"line_end":619,"column_start":12,"column_end":25},"name":"DefaultOnNull","qualname":"::DefaultOnNull","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deserialize [`Default`] from `null` values","sig":null,"attributes":[{"value":"/ Deserialize [`Default`] from `null` values","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19824,"byte_end":19870,"line_start":563,"line_end":563,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19871,"byte_end":19874,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ Instead of erroring on `null` values, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19875,"byte_end":19976,"line_start":565,"line_end":565,"column_start":1,"column_end":102}},{"value":"/ During serialization this wrapper does nothing.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":19977,"byte_end":20028,"line_start":566,"line_end":566,"column_start":1,"column_end":52}},{"value":"/ The serialization behavior of the underlying type is preserved.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20029,"byte_end":20096,"line_start":567,"line_end":567,"column_start":1,"column_end":68}},{"value":"/ The type must implement [`Default`] for this conversion to work.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20097,"byte_end":20165,"line_start":568,"line_end":568,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20166,"byte_end":20169,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::default_on_null`][crate::rust::default_on_null] compatible with serde's with-annotation.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20170,"byte_end":20326,"line_start":570,"line_end":570,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20327,"byte_end":20330,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20331,"byte_end":20345,"line_start":572,"line_end":572,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20346,"byte_end":20349,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20350,"byte_end":20357,"line_start":574,"line_end":574,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20358,"byte_end":20392,"line_start":575,"line_end":575,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20393,"byte_end":20429,"line_start":576,"line_end":576,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnNull};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20430,"byte_end":20478,"line_start":577,"line_end":577,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20479,"byte_end":20484,"line_start":578,"line_end":578,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20485,"byte_end":20500,"line_start":579,"line_end":579,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize,  Debug)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20501,"byte_end":20535,"line_start":580,"line_end":580,"column_start":1,"column_end":35}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20536,"byte_end":20550,"line_start":581,"line_end":581,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(deserialize_as = \"DefaultOnNull\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20551,"byte_end":20604,"line_start":582,"line_end":582,"column_start":1,"column_end":54}},{"value":"/     value: u32,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20605,"byte_end":20624,"line_start":583,"line_end":583,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20625,"byte_end":20630,"line_start":584,"line_end":584,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20631,"byte_end":20634,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20635,"byte_end":20701,"line_start":586,"line_end":586,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20702,"byte_end":20731,"line_start":587,"line_end":587,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20732,"byte_end":20735,"line_start":588,"line_end":588,"column_start":1,"column_end":4}},{"value":"/ // null values are deserialized into the default, here 0","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20736,"byte_end":20796,"line_start":589,"line_end":589,"column_start":1,"column_end":61}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20797,"byte_end":20864,"line_start":590,"line_end":590,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20865,"byte_end":20892,"line_start":591,"line_end":591,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20893,"byte_end":20900,"line_start":592,"line_end":592,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20901,"byte_end":20908,"line_start":593,"line_end":593,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20909,"byte_end":20912,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ `DefaultOnNull` can be combined with other conversion methods.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20913,"byte_end":20979,"line_start":595,"line_end":595,"column_start":1,"column_end":67}},{"value":"/ In this example we deserialize a `Vec`, each element is deserialized from a string.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":20980,"byte_end":21067,"line_start":596,"line_end":596,"column_start":1,"column_end":88}},{"value":"/ If we encounter null, then we get the default value of 0.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21068,"byte_end":21129,"line_start":597,"line_end":597,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21130,"byte_end":21133,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21134,"byte_end":21145,"line_start":599,"line_end":599,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21146,"byte_end":21180,"line_start":600,"line_end":600,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21181,"byte_end":21230,"line_start":601,"line_end":601,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21231,"byte_end":21258,"line_start":602,"line_end":602,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DefaultOnNull, DisplayFromStr};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21259,"byte_end":21323,"line_start":603,"line_end":603,"column_start":1,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21324,"byte_end":21329,"line_start":604,"line_end":604,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21330,"byte_end":21345,"line_start":605,"line_end":605,"column_start":1,"column_end":16}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21346,"byte_end":21383,"line_start":606,"line_end":606,"column_start":1,"column_end":38}},{"value":"/ struct C {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21384,"byte_end":21398,"line_start":607,"line_end":607,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<DefaultOnNull<DisplayFromStr>>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21399,"byte_end":21461,"line_start":608,"line_end":608,"column_start":1,"column_end":63}},{"value":"/     value: Vec<u32>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21462,"byte_end":21486,"line_start":609,"line_end":609,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21487,"byte_end":21493,"line_start":610,"line_end":610,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21494,"byte_end":21497,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ let c: C = serde_json::from_value(json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21498,"byte_end":21543,"line_start":612,"line_end":612,"column_start":1,"column_end":46}},{"value":"/     \"value\": [\"1\", \"2\", null, null, \"5\"]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21544,"byte_end":21588,"line_start":613,"line_end":613,"column_start":1,"column_end":45}},{"value":"/ })).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21589,"byte_end":21606,"line_start":614,"line_end":614,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(vec![1, 2, 0, 0, 5], c.value);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21607,"byte_end":21652,"line_start":615,"line_end":615,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21653,"byte_end":21660,"line_start":616,"line_end":616,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21661,"byte_end":21668,"line_start":617,"line_end":617,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5394},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23049,"byte_end":23062,"line_start":667,"line_end":667,"column_start":12,"column_end":25},"name":"BytesOrString","qualname":"::BytesOrString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deserialize from bytes or string","sig":null,"attributes":[{"value":"/ Deserialize from bytes or string","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21761,"byte_end":21797,"line_start":621,"line_end":621,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21798,"byte_end":21801,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ Any Rust [`String`] can be converted into bytes, i.e., `Vec<u8>`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21802,"byte_end":21871,"line_start":623,"line_end":623,"column_start":1,"column_end":70}},{"value":"/ Accepting both as formats while deserializing can be helpful while interacting with language","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21872,"byte_end":21968,"line_start":624,"line_end":624,"column_start":1,"column_end":97}},{"value":"/ which have a looser definition of string than Rust.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":21969,"byte_end":22024,"line_start":625,"line_end":625,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22025,"byte_end":22028,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22029,"byte_end":22042,"line_start":627,"line_end":627,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22043,"byte_end":22054,"line_start":628,"line_end":628,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22055,"byte_end":22089,"line_start":629,"line_end":629,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22090,"byte_end":22139,"line_start":630,"line_end":630,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22140,"byte_end":22167,"line_start":631,"line_end":631,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, BytesOrString};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22168,"byte_end":22216,"line_start":632,"line_end":632,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22217,"byte_end":22222,"line_start":633,"line_end":633,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22223,"byte_end":22238,"line_start":634,"line_end":634,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22239,"byte_end":22276,"line_start":635,"line_end":635,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22277,"byte_end":22291,"line_start":636,"line_end":636,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BytesOrString\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22292,"byte_end":22333,"line_start":637,"line_end":637,"column_start":1,"column_end":42}},{"value":"/     bytes_or_string: Vec<u8>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22334,"byte_end":22367,"line_start":638,"line_end":638,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22368,"byte_end":22373,"line_start":639,"line_end":639,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22374,"byte_end":22377,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ // Here we deserialize from a byte array ...","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22378,"byte_end":22426,"line_start":641,"line_end":641,"column_start":1,"column_end":49}},{"value":"/ let j = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22427,"byte_end":22446,"line_start":642,"line_end":642,"column_start":1,"column_end":20}},{"value":"/   \"bytes_or_string\": [","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22447,"byte_end":22473,"line_start":643,"line_end":643,"column_start":1,"column_end":27}},{"value":"/     0,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22474,"byte_end":22484,"line_start":644,"line_end":644,"column_start":1,"column_end":11}},{"value":"/     1,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22485,"byte_end":22495,"line_start":645,"line_end":645,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22496,"byte_end":22506,"line_start":646,"line_end":646,"column_start":1,"column_end":11}},{"value":"/     3","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22507,"byte_end":22516,"line_start":647,"line_end":647,"column_start":1,"column_end":10}},{"value":"/   ]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22517,"byte_end":22524,"line_start":648,"line_end":648,"column_start":1,"column_end":8}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22525,"byte_end":22532,"line_start":649,"line_end":649,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22533,"byte_end":22536,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_value(j.clone()).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22537,"byte_end":22595,"line_start":651,"line_end":651,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(vec![0, 1, 2, 3], a.bytes_or_string);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22596,"byte_end":22648,"line_start":652,"line_end":652,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22649,"byte_end":22652,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ // and serialization works too.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22653,"byte_end":22688,"line_start":654,"line_end":654,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(j, serde_json::to_value(&a).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22689,"byte_end":22742,"line_start":655,"line_end":655,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22743,"byte_end":22746,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ // But we also support deserializing from a String","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22747,"byte_end":22801,"line_start":657,"line_end":657,"column_start":1,"column_end":55}},{"value":"/ let j = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22802,"byte_end":22821,"line_start":658,"line_end":658,"column_start":1,"column_end":20}},{"value":"/   \"bytes_or_string\": \"✨Works!\"","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22822,"byte_end":22858,"line_start":659,"line_end":659,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22859,"byte_end":22866,"line_start":660,"line_end":660,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22867,"byte_end":22870,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_value(j).unwrap();","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22871,"byte_end":22921,"line_start":662,"line_end":662,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"✨Works!\".as_bytes(), &*a.bytes_or_string);","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22922,"byte_end":22982,"line_start":663,"line_end":663,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22983,"byte_end":22990,"line_start":664,"line_end":664,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":22991,"byte_end":22998,"line_start":665,"line_end":665,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5403},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28416,"byte_end":28431,"line_start":804,"line_end":804,"column_start":12,"column_end":27},"name":"DurationSeconds","qualname":"::DurationSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize Durations as number of seconds.","sig":null,"attributes":[{"value":"/ De/Serialize Durations as number of seconds.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23065,"byte_end":23113,"line_start":669,"line_end":669,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23114,"byte_end":23117,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ De/serialize durations as number of seconds with subsecond precision.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23118,"byte_end":23191,"line_start":671,"line_end":671,"column_start":1,"column_end":74}},{"value":"/ Subsecond precision is *only* supported for [`DurationSecondsWithFrac`], but not for [`DurationSeconds`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23192,"byte_end":23301,"line_start":672,"line_end":672,"column_start":1,"column_end":110}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23302,"byte_end":23493,"line_start":673,"line_end":673,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23494,"byte_end":23497,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23498,"byte_end":23624,"line_start":675,"line_end":675,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `u64` deserialization from a `f64` will error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23625,"byte_end":23785,"line_start":676,"line_end":676,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct duration and allows deserialization from any type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23786,"byte_end":23939,"line_start":677,"line_end":677,"column_start":1,"column_end":154}},{"value":"/ For example, deserializing `DurationSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":23940,"byte_end":24122,"line_start":678,"line_end":678,"column_start":1,"column_end":183}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24123,"byte_end":24126,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ This type also supports [`chrono::Duration`] with the `chrono`-[feature flag].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24127,"byte_end":24209,"line_start":680,"line_end":680,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24210,"byte_end":24213,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ | Duration Type         | Converter                 | Available `FORMAT`s    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24214,"byte_end":24296,"line_start":682,"line_end":682,"column_start":1,"column_end":83}},{"value":"/ | --------------------- | ------------------------- | ---------------------- |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24297,"byte_end":24379,"line_start":683,"line_end":683,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSeconds`         | `u64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24380,"byte_end":24462,"line_start":684,"line_end":684,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24463,"byte_end":24545,"line_start":685,"line_end":685,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24546,"byte_end":24628,"line_start":686,"line_end":686,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24629,"byte_end":24711,"line_start":687,"line_end":687,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24712,"byte_end":24715,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24716,"byte_end":24730,"line_start":689,"line_end":689,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24731,"byte_end":24734,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24735,"byte_end":24746,"line_start":691,"line_end":691,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24747,"byte_end":24781,"line_start":692,"line_end":692,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24782,"byte_end":24831,"line_start":693,"line_end":693,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24832,"byte_end":24859,"line_start":694,"line_end":694,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSeconds};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24860,"byte_end":24910,"line_start":695,"line_end":695,"column_start":1,"column_end":51}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24911,"byte_end":24939,"line_start":696,"line_end":696,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24940,"byte_end":24943,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24944,"byte_end":24959,"line_start":698,"line_end":698,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24960,"byte_end":24993,"line_start":699,"line_end":699,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":24994,"byte_end":25031,"line_start":700,"line_end":700,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25032,"byte_end":25054,"line_start":701,"line_end":701,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSeconds<u64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25055,"byte_end":25103,"line_start":702,"line_end":702,"column_start":1,"column_end":49}},{"value":"/     d_u64: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25104,"byte_end":25128,"line_start":703,"line_end":703,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<f64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25129,"byte_end":25177,"line_start":704,"line_end":704,"column_start":1,"column_end":49}},{"value":"/     d_f64: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25178,"byte_end":25202,"line_start":705,"line_end":705,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25203,"byte_end":25254,"line_start":706,"line_end":706,"column_start":1,"column_end":52}},{"value":"/     d_string: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25255,"byte_end":25282,"line_start":707,"line_end":707,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25283,"byte_end":25289,"line_start":708,"line_end":708,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25290,"byte_end":25293,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25294,"byte_end":25314,"line_start":710,"line_end":710,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25315,"byte_end":25395,"line_start":711,"line_end":711,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25396,"byte_end":25399,"line_start":712,"line_end":712,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25400,"byte_end":25423,"line_start":713,"line_end":713,"column_start":1,"column_end":24}},{"value":"/     d_u64: Duration::new(12345, 0), // Create from seconds and nanoseconds","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25424,"byte_end":25502,"line_start":714,"line_end":714,"column_start":1,"column_end":79}},{"value":"/     d_f64: Duration::new(12345, 500_000_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25503,"byte_end":25552,"line_start":715,"line_end":715,"column_start":1,"column_end":50}},{"value":"/     d_string: Duration::new(12345, 999_999_999),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25553,"byte_end":25605,"line_start":716,"line_end":716,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25606,"byte_end":25612,"line_start":717,"line_end":717,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25613,"byte_end":25651,"line_start":718,"line_end":718,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25652,"byte_end":25678,"line_start":719,"line_end":719,"column_start":1,"column_end":27}},{"value":"/     \"d_u64\": 12345,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25679,"byte_end":25702,"line_start":720,"line_end":720,"column_start":1,"column_end":24}},{"value":"/     \"d_f64\": 12346.0,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25703,"byte_end":25728,"line_start":721,"line_end":721,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25729,"byte_end":25757,"line_start":722,"line_end":722,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25758,"byte_end":25765,"line_start":723,"line_end":723,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25766,"byte_end":25826,"line_start":724,"line_end":724,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25827,"byte_end":25830,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25831,"byte_end":25863,"line_start":726,"line_end":726,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25864,"byte_end":25922,"line_start":727,"line_end":727,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25923,"byte_end":25926,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25927,"byte_end":25949,"line_start":729,"line_end":729,"column_start":1,"column_end":23}},{"value":"/     \"d_u64\": 12345,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25950,"byte_end":25973,"line_start":730,"line_end":730,"column_start":1,"column_end":24}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":25974,"byte_end":25999,"line_start":731,"line_end":731,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26000,"byte_end":26028,"line_start":732,"line_end":732,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26029,"byte_end":26036,"line_start":733,"line_end":733,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26037,"byte_end":26067,"line_start":734,"line_end":734,"column_start":1,"column_end":31}},{"value":"/     d_u64: Duration::new(12345, 0), // Create from seconds and nanoseconds","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26068,"byte_end":26146,"line_start":735,"line_end":735,"column_start":1,"column_end":79}},{"value":"/     d_f64: Duration::new(12346, 0),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26147,"byte_end":26186,"line_start":736,"line_end":736,"column_start":1,"column_end":40}},{"value":"/     d_string: Duration::new(12346, 0),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26187,"byte_end":26229,"line_start":737,"line_end":737,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26230,"byte_end":26236,"line_start":738,"line_end":738,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26237,"byte_end":26301,"line_start":739,"line_end":739,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26302,"byte_end":26309,"line_start":740,"line_end":740,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26310,"byte_end":26317,"line_start":741,"line_end":741,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26318,"byte_end":26321,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`] is also supported when using the `chrono` feature.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26322,"byte_end":26397,"line_start":743,"line_end":743,"column_start":1,"column_end":76}},{"value":"/ It is a signed duration, thus can be de/serialized as an `i64` instead of a `u64`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26398,"byte_end":26484,"line_start":744,"line_end":744,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26485,"byte_end":26488,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26489,"byte_end":26500,"line_start":746,"line_end":746,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26501,"byte_end":26560,"line_start":747,"line_end":747,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26561,"byte_end":26610,"line_start":748,"line_end":748,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26611,"byte_end":26638,"line_start":749,"line_end":749,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSeconds};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26639,"byte_end":26689,"line_start":750,"line_end":750,"column_start":1,"column_end":51}},{"value":"/ # use chrono_crate::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26690,"byte_end":26723,"line_start":751,"line_end":751,"column_start":1,"column_end":34}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26724,"byte_end":26821,"line_start":752,"line_end":752,"column_start":1,"column_end":98}},{"value":"/ use chrono::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26822,"byte_end":26847,"line_start":753,"line_end":753,"column_start":1,"column_end":26}},{"value":"/ # */","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26848,"byte_end":26856,"line_start":754,"line_end":754,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26857,"byte_end":26860,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26861,"byte_end":26876,"line_start":756,"line_end":756,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26877,"byte_end":26910,"line_start":757,"line_end":757,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26911,"byte_end":26948,"line_start":758,"line_end":758,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26949,"byte_end":26971,"line_start":759,"line_end":759,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSeconds<i64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":26972,"byte_end":27020,"line_start":760,"line_end":760,"column_start":1,"column_end":49}},{"value":"/     d_i64: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27021,"byte_end":27045,"line_start":761,"line_end":761,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<f64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27046,"byte_end":27094,"line_start":762,"line_end":762,"column_start":1,"column_end":49}},{"value":"/     d_f64: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27095,"byte_end":27119,"line_start":763,"line_end":763,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27120,"byte_end":27171,"line_start":764,"line_end":764,"column_start":1,"column_end":52}},{"value":"/     d_string: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27172,"byte_end":27199,"line_start":765,"line_end":765,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27200,"byte_end":27206,"line_start":766,"line_end":766,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27207,"byte_end":27210,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27211,"byte_end":27231,"line_start":768,"line_end":768,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27232,"byte_end":27312,"line_start":769,"line_end":769,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27313,"byte_end":27316,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27317,"byte_end":27340,"line_start":771,"line_end":771,"column_start":1,"column_end":24}},{"value":"/     d_i64: Duration::seconds(-12345),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27341,"byte_end":27382,"line_start":772,"line_end":772,"column_start":1,"column_end":42}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27383,"byte_end":27454,"line_start":773,"line_end":773,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::nanoseconds(999_999_999),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27455,"byte_end":27535,"line_start":774,"line_end":774,"column_start":1,"column_end":81}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27536,"byte_end":27542,"line_start":775,"line_end":775,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27543,"byte_end":27581,"line_start":776,"line_end":776,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27582,"byte_end":27608,"line_start":777,"line_end":777,"column_start":1,"column_end":27}},{"value":"/     \"d_i64\": -12345,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27609,"byte_end":27633,"line_start":778,"line_end":778,"column_start":1,"column_end":25}},{"value":"/     \"d_f64\": -12345.0,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27634,"byte_end":27660,"line_start":779,"line_end":779,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27661,"byte_end":27689,"line_start":780,"line_end":780,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27690,"byte_end":27697,"line_start":781,"line_end":781,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27698,"byte_end":27758,"line_start":782,"line_end":782,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27759,"byte_end":27762,"line_start":783,"line_end":783,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27763,"byte_end":27795,"line_start":784,"line_end":784,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27796,"byte_end":27854,"line_start":785,"line_end":785,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27855,"byte_end":27858,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27859,"byte_end":27881,"line_start":787,"line_end":787,"column_start":1,"column_end":23}},{"value":"/     \"d_i64\": -12345,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27882,"byte_end":27906,"line_start":788,"line_end":788,"column_start":1,"column_end":25}},{"value":"/     \"d_f64\": -12345.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27907,"byte_end":27933,"line_start":789,"line_end":789,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27934,"byte_end":27962,"line_start":790,"line_end":790,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27963,"byte_end":27970,"line_start":791,"line_end":791,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":27971,"byte_end":28001,"line_start":792,"line_end":792,"column_start":1,"column_end":31}},{"value":"/     d_i64: Duration::seconds(-12345),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28002,"byte_end":28043,"line_start":793,"line_end":793,"column_start":1,"column_end":42}},{"value":"/     d_f64: Duration::seconds(-12346),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28044,"byte_end":28085,"line_start":794,"line_end":794,"column_start":1,"column_end":42}},{"value":"/     d_string: Duration::seconds(12346),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28086,"byte_end":28129,"line_start":795,"line_end":795,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28130,"byte_end":28136,"line_start":796,"line_end":796,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28137,"byte_end":28201,"line_start":797,"line_end":797,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28202,"byte_end":28209,"line_start":798,"line_end":798,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28210,"byte_end":28217,"line_start":799,"line_end":799,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28218,"byte_end":28221,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`]: chrono_crate::Duration","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28222,"byte_end":28270,"line_start":801,"line_end":801,"column_start":1,"column_end":49}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.6.0/serde_with/guide/feature_flags/index.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28271,"byte_end":28365,"line_start":802,"line_end":802,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5423},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33516,"byte_end":33539,"line_start":930,"line_end":930,"column_start":12,"column_end":35},"name":"DurationSecondsWithFrac","qualname":"::DurationSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize Durations as number of seconds.","sig":null,"attributes":[{"value":"/ De/Serialize Durations as number of seconds.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28562,"byte_end":28610,"line_start":809,"line_end":809,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28611,"byte_end":28614,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ De/serialize durations as number of seconds with subsecond precision.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28615,"byte_end":28688,"line_start":811,"line_end":811,"column_start":1,"column_end":74}},{"value":"/ Subsecond precision is *only* supported for [`DurationSecondsWithFrac`], but not for [`DurationSeconds`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28689,"byte_end":28798,"line_start":812,"line_end":812,"column_start":1,"column_end":110}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28799,"byte_end":28990,"line_start":813,"line_end":813,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28991,"byte_end":28994,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":28995,"byte_end":29121,"line_start":815,"line_end":815,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `u64` deserialization from a `f64` will error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29122,"byte_end":29282,"line_start":816,"line_end":816,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct duration and allows deserialization from any type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29283,"byte_end":29436,"line_start":817,"line_end":817,"column_start":1,"column_end":154}},{"value":"/ For example, deserializing `DurationSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29437,"byte_end":29619,"line_start":818,"line_end":818,"column_start":1,"column_end":183}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29620,"byte_end":29623,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ This type also supports [`chrono::Duration`] with the `chrono`-[feature flag].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29624,"byte_end":29706,"line_start":820,"line_end":820,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29707,"byte_end":29710,"line_start":821,"line_end":821,"column_start":1,"column_end":4}},{"value":"/ | Duration Type         | Converter                 | Available `FORMAT`s    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29711,"byte_end":29793,"line_start":822,"line_end":822,"column_start":1,"column_end":83}},{"value":"/ | --------------------- | ------------------------- | ---------------------- |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29794,"byte_end":29876,"line_start":823,"line_end":823,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSeconds`         | `u64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29877,"byte_end":29959,"line_start":824,"line_end":824,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":29960,"byte_end":30042,"line_start":825,"line_end":825,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30043,"byte_end":30125,"line_start":826,"line_end":826,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30126,"byte_end":30208,"line_start":827,"line_end":827,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30213,"byte_end":30227,"line_start":829,"line_end":829,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30228,"byte_end":30231,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30232,"byte_end":30243,"line_start":831,"line_end":831,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30244,"byte_end":30278,"line_start":832,"line_end":832,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30279,"byte_end":30328,"line_start":833,"line_end":833,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30329,"byte_end":30356,"line_start":834,"line_end":834,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSecondsWithFrac};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30357,"byte_end":30415,"line_start":835,"line_end":835,"column_start":1,"column_end":59}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30416,"byte_end":30444,"line_start":836,"line_end":836,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30445,"byte_end":30448,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30449,"byte_end":30464,"line_start":838,"line_end":838,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30465,"byte_end":30498,"line_start":839,"line_end":839,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30499,"byte_end":30536,"line_start":840,"line_end":840,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30537,"byte_end":30559,"line_start":841,"line_end":841,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<f64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30560,"byte_end":30616,"line_start":842,"line_end":842,"column_start":1,"column_end":57}},{"value":"/     d_f64: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30617,"byte_end":30641,"line_start":843,"line_end":843,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30642,"byte_end":30701,"line_start":844,"line_end":844,"column_start":1,"column_end":60}},{"value":"/     d_string: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30702,"byte_end":30729,"line_start":845,"line_end":845,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30730,"byte_end":30736,"line_start":846,"line_end":846,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30737,"byte_end":30740,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30741,"byte_end":30761,"line_start":848,"line_end":848,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30762,"byte_end":30842,"line_start":849,"line_end":849,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30843,"byte_end":30846,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30847,"byte_end":30870,"line_start":851,"line_end":851,"column_start":1,"column_end":24}},{"value":"/     d_f64: Duration::new(12345, 500_000_000), // Create from seconds and nanoseconds","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30871,"byte_end":30959,"line_start":852,"line_end":852,"column_start":1,"column_end":89}},{"value":"/     d_string: Duration::new(12345, 999_999_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":30960,"byte_end":31012,"line_start":853,"line_end":853,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31013,"byte_end":31019,"line_start":854,"line_end":854,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31020,"byte_end":31058,"line_start":855,"line_end":855,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31059,"byte_end":31085,"line_start":856,"line_end":856,"column_start":1,"column_end":27}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31086,"byte_end":31111,"line_start":857,"line_end":857,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12345.999999\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31112,"byte_end":31147,"line_start":858,"line_end":858,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31148,"byte_end":31155,"line_start":859,"line_end":859,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31156,"byte_end":31216,"line_start":860,"line_end":860,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31217,"byte_end":31220,"line_start":861,"line_end":861,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31221,"byte_end":31253,"line_start":862,"line_end":862,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31254,"byte_end":31312,"line_start":863,"line_end":863,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31313,"byte_end":31316,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31317,"byte_end":31339,"line_start":865,"line_end":865,"column_start":1,"column_end":23}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31340,"byte_end":31365,"line_start":866,"line_end":866,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12345.987654\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31366,"byte_end":31401,"line_start":867,"line_end":867,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31402,"byte_end":31409,"line_start":868,"line_end":868,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31410,"byte_end":31440,"line_start":869,"line_end":869,"column_start":1,"column_end":31}},{"value":"/     d_f64: Duration::new(12345, 500_000_000), // Create from seconds and nanoseconds","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31441,"byte_end":31529,"line_start":870,"line_end":870,"column_start":1,"column_end":89}},{"value":"/     d_string: Duration::new(12345, 987_654_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31530,"byte_end":31582,"line_start":871,"line_end":871,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31583,"byte_end":31589,"line_start":872,"line_end":872,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31590,"byte_end":31654,"line_start":873,"line_end":873,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31655,"byte_end":31662,"line_start":874,"line_end":874,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31663,"byte_end":31670,"line_start":875,"line_end":875,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31671,"byte_end":31674,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`] is also supported when using the `chrono` feature.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31675,"byte_end":31750,"line_start":877,"line_end":877,"column_start":1,"column_end":76}},{"value":"/ It is a signed duration, thus can be de/serialized as an `i64` instead of a `u64`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31751,"byte_end":31837,"line_start":878,"line_end":878,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31838,"byte_end":31841,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31842,"byte_end":31853,"line_start":880,"line_end":880,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31854,"byte_end":31913,"line_start":881,"line_end":881,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31914,"byte_end":31963,"line_start":882,"line_end":882,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31964,"byte_end":31991,"line_start":883,"line_end":883,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSecondsWithFrac};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":31992,"byte_end":32050,"line_start":884,"line_end":884,"column_start":1,"column_end":59}},{"value":"/ # use chrono_crate::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32051,"byte_end":32084,"line_start":885,"line_end":885,"column_start":1,"column_end":34}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32085,"byte_end":32182,"line_start":886,"line_end":886,"column_start":1,"column_end":98}},{"value":"/ use chrono::Duration;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32183,"byte_end":32208,"line_start":887,"line_end":887,"column_start":1,"column_end":26}},{"value":"/ # */","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32209,"byte_end":32217,"line_start":888,"line_end":888,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32218,"byte_end":32221,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32222,"byte_end":32237,"line_start":890,"line_end":890,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32238,"byte_end":32271,"line_start":891,"line_end":891,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32272,"byte_end":32309,"line_start":892,"line_end":892,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32310,"byte_end":32332,"line_start":893,"line_end":893,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<f64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32333,"byte_end":32389,"line_start":894,"line_end":894,"column_start":1,"column_end":57}},{"value":"/     d_f64: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32390,"byte_end":32414,"line_start":895,"line_end":895,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32415,"byte_end":32474,"line_start":896,"line_end":896,"column_start":1,"column_end":60}},{"value":"/     d_string: Duration,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32475,"byte_end":32502,"line_start":897,"line_end":897,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32503,"byte_end":32509,"line_start":898,"line_end":898,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32510,"byte_end":32513,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32514,"byte_end":32534,"line_start":900,"line_end":900,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32535,"byte_end":32538,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32539,"byte_end":32562,"line_start":902,"line_end":902,"column_start":1,"column_end":24}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32563,"byte_end":32634,"line_start":903,"line_end":903,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::nanoseconds(999_999_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32635,"byte_end":32715,"line_start":904,"line_end":904,"column_start":1,"column_end":81}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32716,"byte_end":32722,"line_start":905,"line_end":905,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32723,"byte_end":32761,"line_start":906,"line_end":906,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32762,"byte_end":32788,"line_start":907,"line_end":907,"column_start":1,"column_end":27}},{"value":"/     \"d_f64\": -12344.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32789,"byte_end":32815,"line_start":908,"line_end":908,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12345.999999\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32816,"byte_end":32851,"line_start":909,"line_end":909,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32852,"byte_end":32859,"line_start":910,"line_end":910,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32860,"byte_end":32920,"line_start":911,"line_end":911,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32921,"byte_end":32924,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32925,"byte_end":32957,"line_start":913,"line_end":913,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32958,"byte_end":32961,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32962,"byte_end":32984,"line_start":915,"line_end":915,"column_start":1,"column_end":23}},{"value":"/     \"d_f64\": -12344.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":32985,"byte_end":33011,"line_start":916,"line_end":916,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12345.987\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33012,"byte_end":33044,"line_start":917,"line_end":917,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33045,"byte_end":33052,"line_start":918,"line_end":918,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33053,"byte_end":33083,"line_start":919,"line_end":919,"column_start":1,"column_end":31}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33084,"byte_end":33155,"line_start":920,"line_end":920,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::milliseconds(987),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33156,"byte_end":33229,"line_start":921,"line_end":921,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33230,"byte_end":33236,"line_start":922,"line_end":922,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33237,"byte_end":33301,"line_start":923,"line_end":923,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33302,"byte_end":33309,"line_start":924,"line_end":924,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33310,"byte_end":33317,"line_start":925,"line_end":925,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33318,"byte_end":33321,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`]: chrono_crate::Duration","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33322,"byte_end":33370,"line_start":927,"line_end":927,"column_start":1,"column_end":49}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.6.0/serde_with/guide/feature_flags/index.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33371,"byte_end":33465,"line_start":928,"line_end":928,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5443},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39609,"byte_end":39625,"line_start":1073,"line_end":1073,"column_start":12,"column_end":28},"name":"TimestampSeconds","qualname":"::TimestampSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize timestamps as seconds since the UNIX epoch","sig":null,"attributes":[{"value":"/ De/Serialize timestamps as seconds since the UNIX epoch","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33670,"byte_end":33729,"line_start":935,"line_end":935,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33730,"byte_end":33733,"line_start":936,"line_end":936,"column_start":1,"column_end":4}},{"value":"/ De/serialize timestamps as seconds since the UNIX epoch.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33734,"byte_end":33794,"line_start":937,"line_end":937,"column_start":1,"column_end":61}},{"value":"/ Subsecond precision is *only* supported for [`TimestampSecondsWithFrac`], but not for [`TimestampSeconds`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33795,"byte_end":33906,"line_start":938,"line_end":938,"column_start":1,"column_end":112}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":33907,"byte_end":34098,"line_start":939,"line_end":939,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34099,"byte_end":34102,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34103,"byte_end":34229,"line_start":941,"line_end":941,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `i64` deserialization from a `f64` will error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34230,"byte_end":34390,"line_start":942,"line_end":942,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct timestamp and allows deserialization from any type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34391,"byte_end":34545,"line_start":943,"line_end":943,"column_start":1,"column_end":155}},{"value":"/ For example, deserializing `TimestampSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34546,"byte_end":34729,"line_start":944,"line_end":944,"column_start":1,"column_end":184}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34730,"byte_end":34733,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ This type also supports [`chrono::DateTime`][DateTime] with the `chrono`-[feature flag].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34734,"byte_end":34826,"line_start":946,"line_end":946,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34827,"byte_end":34830,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ | Timestamp Type            | Converter                  | Available `FORMAT`s    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34831,"byte_end":34918,"line_start":948,"line_end":948,"column_start":1,"column_end":88}},{"value":"/ | ------------------------- | -------------------------- | ---------------------- |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":34919,"byte_end":35006,"line_start":949,"line_end":949,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35007,"byte_end":35094,"line_start":950,"line_end":950,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35095,"byte_end":35182,"line_start":951,"line_end":951,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35183,"byte_end":35270,"line_start":952,"line_end":952,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35271,"byte_end":35358,"line_start":953,"line_end":953,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35359,"byte_end":35446,"line_start":954,"line_end":954,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35447,"byte_end":35534,"line_start":955,"line_end":955,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35535,"byte_end":35538,"line_start":956,"line_end":956,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35539,"byte_end":35553,"line_start":957,"line_end":957,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35554,"byte_end":35557,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35558,"byte_end":35569,"line_start":959,"line_end":959,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35570,"byte_end":35604,"line_start":960,"line_end":960,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35605,"byte_end":35654,"line_start":961,"line_end":961,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35655,"byte_end":35682,"line_start":962,"line_end":962,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSeconds};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35683,"byte_end":35734,"line_start":963,"line_end":963,"column_start":1,"column_end":52}},{"value":"/ use std::time::{Duration, SystemTime};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35735,"byte_end":35777,"line_start":964,"line_end":964,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35778,"byte_end":35781,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35782,"byte_end":35797,"line_start":966,"line_end":966,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35798,"byte_end":35831,"line_start":967,"line_end":967,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35832,"byte_end":35869,"line_start":968,"line_end":968,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35870,"byte_end":35893,"line_start":969,"line_end":969,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSeconds<i64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35894,"byte_end":35943,"line_start":970,"line_end":970,"column_start":1,"column_end":50}},{"value":"/     st_i64: SystemTime,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35944,"byte_end":35971,"line_start":971,"line_end":971,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSeconds<f64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":35972,"byte_end":36021,"line_start":972,"line_end":972,"column_start":1,"column_end":50}},{"value":"/     st_f64: SystemTime,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36022,"byte_end":36049,"line_start":973,"line_end":973,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSeconds<String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36050,"byte_end":36102,"line_start":974,"line_end":974,"column_start":1,"column_end":53}},{"value":"/     st_string: SystemTime,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36103,"byte_end":36133,"line_start":975,"line_end":975,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36134,"byte_end":36140,"line_start":976,"line_end":976,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36141,"byte_end":36144,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36145,"byte_end":36165,"line_start":978,"line_end":978,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36166,"byte_end":36246,"line_start":979,"line_end":979,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36247,"byte_end":36250,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36251,"byte_end":36276,"line_start":981,"line_end":981,"column_start":1,"column_end":26}},{"value":"/     st_i64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 0)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36277,"byte_end":36362,"line_start":982,"line_end":982,"column_start":1,"column_end":86}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36363,"byte_end":36458,"line_start":983,"line_end":983,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 999_999_999)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36459,"byte_end":36557,"line_start":984,"line_end":984,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36558,"byte_end":36564,"line_start":985,"line_end":985,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36565,"byte_end":36603,"line_start":986,"line_end":986,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36604,"byte_end":36630,"line_start":987,"line_end":987,"column_start":1,"column_end":27}},{"value":"/     \"st_i64\": 12345,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36631,"byte_end":36655,"line_start":988,"line_end":988,"column_start":1,"column_end":25}},{"value":"/     \"st_f64\": 12346.0,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36656,"byte_end":36682,"line_start":989,"line_end":989,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12346\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36683,"byte_end":36712,"line_start":990,"line_end":990,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36713,"byte_end":36720,"line_start":991,"line_end":991,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36721,"byte_end":36782,"line_start":992,"line_end":992,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36783,"byte_end":36786,"line_start":993,"line_end":993,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36787,"byte_end":36819,"line_start":994,"line_end":994,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36820,"byte_end":36878,"line_start":995,"line_end":995,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36879,"byte_end":36882,"line_start":996,"line_end":996,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36883,"byte_end":36905,"line_start":997,"line_end":997,"column_start":1,"column_end":23}},{"value":"/     \"st_i64\": 12345,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36906,"byte_end":36930,"line_start":998,"line_end":998,"column_start":1,"column_end":25}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36931,"byte_end":36957,"line_start":999,"line_end":999,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12346\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36958,"byte_end":36987,"line_start":1000,"line_end":1000,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36988,"byte_end":36995,"line_start":1001,"line_end":1001,"column_start":1,"column_end":8}},{"value":"/ let expected  = Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":36996,"byte_end":37028,"line_start":1002,"line_end":1002,"column_start":1,"column_end":33}},{"value":"/     st_i64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 0)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37029,"byte_end":37114,"line_start":1003,"line_end":1003,"column_start":1,"column_end":86}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12346, 0)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37115,"byte_end":37200,"line_start":1004,"line_end":1004,"column_start":1,"column_end":86}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12346, 0)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37201,"byte_end":37289,"line_start":1005,"line_end":1005,"column_start":1,"column_end":89}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37290,"byte_end":37296,"line_start":1006,"line_end":1006,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37297,"byte_end":37361,"line_start":1007,"line_end":1007,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37362,"byte_end":37369,"line_start":1008,"line_end":1008,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37370,"byte_end":37377,"line_start":1009,"line_end":1009,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37378,"byte_end":37381,"line_start":1010,"line_end":1010,"column_start":1,"column_end":4}},{"value":"/ [`chrono::DateTime<Utc>`][DateTime] and [`chrono::DateTime<Local>`][DateTime] are also supported when using the `chrono` feature.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37382,"byte_end":37515,"line_start":1011,"line_end":1011,"column_start":1,"column_end":134}},{"value":"/ Like [`SystemTime`], it is a signed timestamp, thus can be de/serialized as an `i64`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37516,"byte_end":37605,"line_start":1012,"line_end":1012,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37606,"byte_end":37609,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37610,"byte_end":37621,"line_start":1014,"line_end":1014,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37622,"byte_end":37681,"line_start":1015,"line_end":1015,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37682,"byte_end":37731,"line_start":1016,"line_end":1016,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37732,"byte_end":37759,"line_start":1017,"line_end":1017,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSeconds};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37760,"byte_end":37811,"line_start":1018,"line_end":1018,"column_start":1,"column_end":52}},{"value":"/ # use chrono_crate::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37812,"byte_end":37869,"line_start":1019,"line_end":1019,"column_start":1,"column_end":58}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37870,"byte_end":37967,"line_start":1020,"line_end":1020,"column_start":1,"column_end":98}},{"value":"/ use chrono::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":37968,"byte_end":38017,"line_start":1021,"line_end":1021,"column_start":1,"column_end":50}},{"value":"/ # */","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38018,"byte_end":38026,"line_start":1022,"line_end":1022,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38027,"byte_end":38030,"line_start":1023,"line_end":1023,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38031,"byte_end":38046,"line_start":1024,"line_end":1024,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38047,"byte_end":38080,"line_start":1025,"line_end":1025,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38081,"byte_end":38118,"line_start":1026,"line_end":1026,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38119,"byte_end":38142,"line_start":1027,"line_end":1027,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSeconds<i64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38143,"byte_end":38192,"line_start":1028,"line_end":1028,"column_start":1,"column_end":50}},{"value":"/     dt_i64: DateTime<Utc>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38193,"byte_end":38223,"line_start":1029,"line_end":1029,"column_start":1,"column_end":31}},{"value":"/     #[serde_as(as = \"TimestampSeconds<f64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38224,"byte_end":38273,"line_start":1030,"line_end":1030,"column_start":1,"column_end":50}},{"value":"/     dt_f64: DateTime<Local>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38274,"byte_end":38306,"line_start":1031,"line_end":1031,"column_start":1,"column_end":33}},{"value":"/     #[serde_as(as = \"TimestampSeconds<String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38307,"byte_end":38359,"line_start":1032,"line_end":1032,"column_start":1,"column_end":53}},{"value":"/     dt_string: DateTime<Utc>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38360,"byte_end":38393,"line_start":1033,"line_end":1033,"column_start":1,"column_end":34}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38394,"byte_end":38400,"line_start":1034,"line_end":1034,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38401,"byte_end":38404,"line_start":1035,"line_end":1035,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38405,"byte_end":38425,"line_start":1036,"line_end":1036,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38426,"byte_end":38506,"line_start":1037,"line_end":1037,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38507,"byte_end":38510,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38511,"byte_end":38536,"line_start":1039,"line_end":1039,"column_start":1,"column_end":26}},{"value":"/     dt_i64: Utc.timestamp(-12345, 0),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38537,"byte_end":38578,"line_start":1040,"line_end":1040,"column_start":1,"column_end":42}},{"value":"/     dt_f64: Local.timestamp(-12345, 500_000_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38579,"byte_end":38632,"line_start":1041,"line_end":1041,"column_start":1,"column_end":54}},{"value":"/     dt_string: Utc.timestamp(12345, 999_999_999),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38633,"byte_end":38686,"line_start":1042,"line_end":1042,"column_start":1,"column_end":54}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38687,"byte_end":38693,"line_start":1043,"line_end":1043,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38694,"byte_end":38732,"line_start":1044,"line_end":1044,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38733,"byte_end":38759,"line_start":1045,"line_end":1045,"column_start":1,"column_end":27}},{"value":"/     \"dt_i64\": -12345,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38760,"byte_end":38785,"line_start":1046,"line_end":1046,"column_start":1,"column_end":26}},{"value":"/     \"dt_f64\": -12345.0,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38786,"byte_end":38813,"line_start":1047,"line_end":1047,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12346\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38814,"byte_end":38843,"line_start":1048,"line_end":1048,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38844,"byte_end":38851,"line_start":1049,"line_end":1049,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38852,"byte_end":38913,"line_start":1050,"line_end":1050,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38914,"byte_end":38917,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38918,"byte_end":38950,"line_start":1052,"line_end":1052,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":38951,"byte_end":39009,"line_start":1053,"line_end":1053,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39010,"byte_end":39013,"line_start":1054,"line_end":1054,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39014,"byte_end":39036,"line_start":1055,"line_end":1055,"column_start":1,"column_end":23}},{"value":"/     \"dt_i64\": -12345,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39037,"byte_end":39062,"line_start":1056,"line_end":1056,"column_start":1,"column_end":26}},{"value":"/     \"dt_f64\": -12345.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39063,"byte_end":39090,"line_start":1057,"line_end":1057,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12346\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39091,"byte_end":39120,"line_start":1058,"line_end":1058,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39121,"byte_end":39128,"line_start":1059,"line_end":1059,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39129,"byte_end":39160,"line_start":1060,"line_end":1060,"column_start":1,"column_end":32}},{"value":"/     dt_i64: Utc.timestamp(-12345, 0),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39161,"byte_end":39202,"line_start":1061,"line_end":1061,"column_start":1,"column_end":42}},{"value":"/     dt_f64: Local.timestamp(-12346, 0),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39203,"byte_end":39246,"line_start":1062,"line_end":1062,"column_start":1,"column_end":44}},{"value":"/     dt_string: Utc.timestamp(12346, 0),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39247,"byte_end":39290,"line_start":1063,"line_end":1063,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39291,"byte_end":39297,"line_start":1064,"line_end":1064,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39298,"byte_end":39362,"line_start":1065,"line_end":1065,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39363,"byte_end":39370,"line_start":1066,"line_end":1066,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39371,"byte_end":39378,"line_start":1067,"line_end":1067,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39379,"byte_end":39382,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ [`SystemTime`]: std::time::SystemTime","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39383,"byte_end":39424,"line_start":1069,"line_end":1069,"column_start":1,"column_end":42}},{"value":"/ [DateTime]: chrono_crate::DateTime","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39425,"byte_end":39463,"line_start":1070,"line_end":1070,"column_start":1,"column_end":39}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.6.0/serde_with/guide/feature_flags/index.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39464,"byte_end":39558,"line_start":1071,"line_end":1071,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5463},"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":45150,"byte_end":45174,"line_start":1202,"line_end":1202,"column_start":12,"column_end":36},"name":"TimestampSecondsWithFrac","qualname":"::TimestampSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize timestamps as seconds since the UNIX epoch","sig":null,"attributes":[{"value":"/ De/Serialize timestamps as seconds since the UNIX epoch","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39756,"byte_end":39815,"line_start":1078,"line_end":1078,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39816,"byte_end":39819,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ De/serialize timestamps as seconds since the UNIX epoch.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39820,"byte_end":39880,"line_start":1080,"line_end":1080,"column_start":1,"column_end":61}},{"value":"/ Subsecond precision is *only* supported for [`TimestampSecondsWithFrac`], but not for [`TimestampSeconds`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39881,"byte_end":39992,"line_start":1081,"line_end":1081,"column_start":1,"column_end":112}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":39993,"byte_end":40184,"line_start":1082,"line_end":1082,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40185,"byte_end":40188,"line_start":1083,"line_end":1083,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40189,"byte_end":40315,"line_start":1084,"line_end":1084,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `i64` deserialization from a `f64` will error.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40316,"byte_end":40476,"line_start":1085,"line_end":1085,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct timestamp and allows deserialization from any type.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40477,"byte_end":40631,"line_start":1086,"line_end":1086,"column_start":1,"column_end":155}},{"value":"/ For example, deserializing `TimestampSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40632,"byte_end":40815,"line_start":1087,"line_end":1087,"column_start":1,"column_end":184}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40816,"byte_end":40819,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ This type also supports [`chrono::DateTime`][DateTime] with the `chrono`-[feature flag].","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40820,"byte_end":40912,"line_start":1089,"line_end":1089,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40913,"byte_end":40916,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ | Timestamp Type            | Converter                  | Available `FORMAT`s    |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":40917,"byte_end":41004,"line_start":1091,"line_end":1091,"column_start":1,"column_end":88}},{"value":"/ | ------------------------- | -------------------------- | ---------------------- |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41005,"byte_end":41092,"line_start":1092,"line_end":1092,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41093,"byte_end":41180,"line_start":1093,"line_end":1093,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41181,"byte_end":41268,"line_start":1094,"line_end":1094,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41269,"byte_end":41356,"line_start":1095,"line_end":1095,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41357,"byte_end":41444,"line_start":1096,"line_end":1096,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41445,"byte_end":41532,"line_start":1097,"line_end":1097,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41533,"byte_end":41620,"line_start":1098,"line_end":1098,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41621,"byte_end":41624,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41625,"byte_end":41639,"line_start":1100,"line_end":1100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41640,"byte_end":41643,"line_start":1101,"line_end":1101,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41644,"byte_end":41655,"line_start":1102,"line_end":1102,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41656,"byte_end":41690,"line_start":1103,"line_end":1103,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41691,"byte_end":41740,"line_start":1104,"line_end":1104,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41741,"byte_end":41768,"line_start":1105,"line_end":1105,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSecondsWithFrac};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41769,"byte_end":41828,"line_start":1106,"line_end":1106,"column_start":1,"column_end":60}},{"value":"/ use std::time::{Duration, SystemTime};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41829,"byte_end":41871,"line_start":1107,"line_end":1107,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41872,"byte_end":41875,"line_start":1108,"line_end":1108,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41876,"byte_end":41891,"line_start":1109,"line_end":1109,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41892,"byte_end":41925,"line_start":1110,"line_end":1110,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41926,"byte_end":41963,"line_start":1111,"line_end":1111,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41964,"byte_end":41987,"line_start":1112,"line_end":1112,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<f64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":41988,"byte_end":42045,"line_start":1113,"line_end":1113,"column_start":1,"column_end":58}},{"value":"/     st_f64: SystemTime,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42046,"byte_end":42073,"line_start":1114,"line_end":1114,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42074,"byte_end":42134,"line_start":1115,"line_end":1115,"column_start":1,"column_end":61}},{"value":"/     st_string: SystemTime,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42135,"byte_end":42165,"line_start":1116,"line_end":1116,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42166,"byte_end":42172,"line_start":1117,"line_end":1117,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42173,"byte_end":42176,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42177,"byte_end":42197,"line_start":1119,"line_end":1119,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42198,"byte_end":42278,"line_start":1120,"line_end":1120,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42279,"byte_end":42282,"line_start":1121,"line_end":1121,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42283,"byte_end":42308,"line_start":1122,"line_end":1122,"column_start":1,"column_end":26}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42309,"byte_end":42404,"line_start":1123,"line_end":1123,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 999_999_000)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42405,"byte_end":42503,"line_start":1124,"line_end":1124,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42504,"byte_end":42510,"line_start":1125,"line_end":1125,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42511,"byte_end":42549,"line_start":1126,"line_end":1126,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42550,"byte_end":42576,"line_start":1127,"line_end":1127,"column_start":1,"column_end":27}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42577,"byte_end":42603,"line_start":1128,"line_end":1128,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12345.999999\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42604,"byte_end":42640,"line_start":1129,"line_end":1129,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42641,"byte_end":42648,"line_start":1130,"line_end":1130,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42649,"byte_end":42710,"line_start":1131,"line_end":1131,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42711,"byte_end":42714,"line_start":1132,"line_end":1132,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42715,"byte_end":42747,"line_start":1133,"line_end":1133,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42748,"byte_end":42806,"line_start":1134,"line_end":1134,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42807,"byte_end":42810,"line_start":1135,"line_end":1135,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42811,"byte_end":42833,"line_start":1136,"line_end":1136,"column_start":1,"column_end":23}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42834,"byte_end":42860,"line_start":1137,"line_end":1137,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12345.987654\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42861,"byte_end":42897,"line_start":1138,"line_end":1138,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42898,"byte_end":42905,"line_start":1139,"line_end":1139,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42906,"byte_end":42937,"line_start":1140,"line_end":1140,"column_start":1,"column_end":32}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":42938,"byte_end":43033,"line_start":1141,"line_end":1141,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 987_654_000)).unwrap(),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43034,"byte_end":43132,"line_start":1142,"line_end":1142,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43133,"byte_end":43139,"line_start":1143,"line_end":1143,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43140,"byte_end":43204,"line_start":1144,"line_end":1144,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43205,"byte_end":43212,"line_start":1145,"line_end":1145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43213,"byte_end":43220,"line_start":1146,"line_end":1146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43221,"byte_end":43224,"line_start":1147,"line_end":1147,"column_start":1,"column_end":4}},{"value":"/ [`chrono::DateTime<Utc>`][DateTime] and [`chrono::DateTime<Local>`][DateTime] are also supported when using the `chrono` feature.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43225,"byte_end":43358,"line_start":1148,"line_end":1148,"column_start":1,"column_end":134}},{"value":"/ Like [`SystemTime`], it is a signed timestamp, thus can be de/serialized as an `i64`.","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43359,"byte_end":43448,"line_start":1149,"line_end":1149,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43449,"byte_end":43452,"line_start":1150,"line_end":1150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43453,"byte_end":43464,"line_start":1151,"line_end":1151,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43465,"byte_end":43524,"line_start":1152,"line_end":1152,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43525,"byte_end":43574,"line_start":1153,"line_end":1153,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43575,"byte_end":43602,"line_start":1154,"line_end":1154,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSecondsWithFrac};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43603,"byte_end":43662,"line_start":1155,"line_end":1155,"column_start":1,"column_end":60}},{"value":"/ # use chrono_crate::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43663,"byte_end":43720,"line_start":1156,"line_end":1156,"column_start":1,"column_end":58}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43721,"byte_end":43818,"line_start":1157,"line_end":1157,"column_start":1,"column_end":98}},{"value":"/ use chrono::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43819,"byte_end":43868,"line_start":1158,"line_end":1158,"column_start":1,"column_end":50}},{"value":"/ # */","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43869,"byte_end":43877,"line_start":1159,"line_end":1159,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43878,"byte_end":43881,"line_start":1160,"line_end":1160,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43882,"byte_end":43897,"line_start":1161,"line_end":1161,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43898,"byte_end":43931,"line_start":1162,"line_end":1162,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43932,"byte_end":43969,"line_start":1163,"line_end":1163,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43970,"byte_end":43993,"line_start":1164,"line_end":1164,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<f64>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":43994,"byte_end":44051,"line_start":1165,"line_end":1165,"column_start":1,"column_end":58}},{"value":"/     dt_f64: DateTime<Utc>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44052,"byte_end":44082,"line_start":1166,"line_end":1166,"column_start":1,"column_end":31}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<String>\")]","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44083,"byte_end":44143,"line_start":1167,"line_end":1167,"column_start":1,"column_end":61}},{"value":"/     dt_string: DateTime<Local>,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44144,"byte_end":44179,"line_start":1168,"line_end":1168,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44180,"byte_end":44186,"line_start":1169,"line_end":1169,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44187,"byte_end":44190,"line_start":1170,"line_end":1170,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44191,"byte_end":44211,"line_start":1171,"line_end":1171,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44212,"byte_end":44215,"line_start":1172,"line_end":1172,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44216,"byte_end":44241,"line_start":1173,"line_end":1173,"column_start":1,"column_end":26}},{"value":"/     dt_f64: Utc.timestamp(-12345, 500_000_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44242,"byte_end":44293,"line_start":1174,"line_end":1174,"column_start":1,"column_end":52}},{"value":"/     dt_string: Local.timestamp(12345, 999_999_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44294,"byte_end":44349,"line_start":1175,"line_end":1175,"column_start":1,"column_end":56}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44350,"byte_end":44356,"line_start":1176,"line_end":1176,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44357,"byte_end":44395,"line_start":1177,"line_end":1177,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44396,"byte_end":44422,"line_start":1178,"line_end":1178,"column_start":1,"column_end":27}},{"value":"/     \"dt_f64\": -12344.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44423,"byte_end":44450,"line_start":1179,"line_end":1179,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12345.999999\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44451,"byte_end":44487,"line_start":1180,"line_end":1180,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44488,"byte_end":44495,"line_start":1181,"line_end":1181,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44496,"byte_end":44557,"line_start":1182,"line_end":1182,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44558,"byte_end":44561,"line_start":1183,"line_end":1183,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44562,"byte_end":44594,"line_start":1184,"line_end":1184,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44595,"byte_end":44598,"line_start":1185,"line_end":1185,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44599,"byte_end":44621,"line_start":1186,"line_end":1186,"column_start":1,"column_end":23}},{"value":"/     \"dt_f64\": -12344.5,","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44622,"byte_end":44649,"line_start":1187,"line_end":1187,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12345.987\",","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44650,"byte_end":44683,"line_start":1188,"line_end":1188,"column_start":1,"column_end":34}},{"value":"/ });","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44684,"byte_end":44691,"line_start":1189,"line_end":1189,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44692,"byte_end":44723,"line_start":1190,"line_end":1190,"column_start":1,"column_end":32}},{"value":"/     dt_f64: Utc.timestamp(-12345, 500_000_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44724,"byte_end":44775,"line_start":1191,"line_end":1191,"column_start":1,"column_end":52}},{"value":"/     dt_string: Local.timestamp(12345, 987_000_000),","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44776,"byte_end":44831,"line_start":1192,"line_end":1192,"column_start":1,"column_end":56}},{"value":"/ };","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44832,"byte_end":44838,"line_start":1193,"line_end":1193,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44839,"byte_end":44903,"line_start":1194,"line_end":1194,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44904,"byte_end":44911,"line_start":1195,"line_end":1195,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44912,"byte_end":44919,"line_start":1196,"line_end":1196,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44920,"byte_end":44923,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ [`SystemTime`]: std::time::SystemTime","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44924,"byte_end":44965,"line_start":1198,"line_end":1198,"column_start":1,"column_end":42}},{"value":"/ [DateTime]: chrono_crate::DateTime","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":44966,"byte_end":45004,"line_start":1199,"line_end":1199,"column_start":1,"column_end":39}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.6.0/serde_with/guide/feature_flags/index.html","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":45005,"byte_end":45099,"line_start":1200,"line_end":1200,"column_start":1,"column_end":95}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":49520,"byte_end":49523,"line_start":19,"line_end":19,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":49852,"byte_end":49858,"line_start":33,"line_end":33,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":50118,"byte_end":50131,"line_start":43,"line_end":43,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":56503,"byte_end":56517,"line_start":243,"line_end":243,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":63714,"byte_end":63718,"line_start":403,"line_end":403,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":66017,"byte_end":66034,"line_start":468,"line_end":468,"column_start":52,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":66297,"byte_end":66318,"line_start":477,"line_end":477,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":71783,"byte_end":71797,"line_start":629,"line_end":629,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":72857,"byte_end":72870,"line_start":662,"line_end":662,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":73116,"byte_end":73135,"line_start":671,"line_end":671,"column_start":54,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":75369,"byte_end":75382,"line_start":757,"line_end":757,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48573,"byte_end":48590,"line_start":80,"line_end":80,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48743,"byte_end":48760,"line_start":87,"line_end":87,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76565,"byte_end":76572,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":77007,"byte_end":77015,"line_start":39,"line_end":39,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":77274,"byte_end":77281,"line_start":54,"line_end":54,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":77748,"byte_end":77756,"line_start":73,"line_end":73,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78646,"byte_end":78653,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":79185,"byte_end":79193,"line_start":43,"line_end":43,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":79529,"byte_end":79536,"line_start":59,"line_end":59,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":80235,"byte_end":80243,"line_start":86,"line_end":86,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/last_value_wins.rs","byte_start":81013,"byte_end":81020,"line_start":13,"line_end":13,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/last_value_wins.rs","byte_start":81499,"byte_end":81507,"line_start":33,"line_end":33,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86881,"byte_end":86887,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":87037,"byte_end":87045,"line_start":84,"line_end":84,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89766,"byte_end":89772,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":93459,"byte_end":93465,"line_start":209,"line_end":209,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":97058,"byte_end":97077,"line_start":320,"line_end":320,"column_start":11,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":105374,"byte_end":105384,"line_start":571,"line_end":571,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":108627,"byte_end":108637,"line_start":675,"line_end":675,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110956,"byte_end":110966,"line_start":744,"line_end":744,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":113237,"byte_end":113247,"line_start":813,"line_end":813,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":116321,"byte_end":116331,"line_start":916,"line_end":916,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119588,"byte_end":119609,"line_start":1027,"line_end":1027,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":124646,"byte_end":124660,"line_start":1196,"line_end":1196,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":128064,"byte_end":128079,"line_start":1307,"line_end":1307,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":133102,"byte_end":133112,"line_start":1461,"line_end":1461,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":133714,"byte_end":133721,"line_start":1484,"line_end":1484,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136467,"byte_end":136487,"line_start":1589,"line_end":1589,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":146959,"byte_end":146962,"line_start":12,"line_end":12,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":147232,"byte_end":147238,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":149344,"byte_end":149358,"line_start":88,"line_end":88,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":153011,"byte_end":153015,"line_start":193,"line_end":193,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":154072,"byte_end":154089,"line_start":226,"line_end":226,"column_start":50,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":155964,"byte_end":155978,"line_start":284,"line_end":284,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":156218,"byte_end":156231,"line_start":296,"line_end":296,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":156443,"byte_end":156462,"line_start":305,"line_end":305,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":158872,"byte_end":158885,"line_start":390,"line_end":390,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":146000,"byte_end":146015,"line_start":82,"line_end":82,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":146231,"byte_end":146246,"line_start":92,"line_end":92,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":146484,"byte_end":146499,"line_start":104,"line_end":104,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":163175,"byte_end":163179,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":163738,"byte_end":163752,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":164869,"byte_end":164883,"line_start":88,"line_end":88,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":165047,"byte_end":165061,"line_start":97,"line_end":97,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":165493,"byte_end":165508,"line_start":112,"line_end":112,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":166237,"byte_end":166252,"line_start":140,"line_end":140,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":166835,"byte_end":166850,"line_start":162,"line_end":162,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":167435,"byte_end":167450,"line_start":184,"line_end":184,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":168048,"byte_end":168071,"line_start":206,"line_end":206,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":168446,"byte_end":168469,"line_start":221,"line_end":221,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":168882,"byte_end":168905,"line_start":238,"line_end":238,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":170311,"byte_end":170326,"line_start":284,"line_end":284,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":170625,"byte_end":170640,"line_start":293,"line_end":293,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":171126,"byte_end":171141,"line_start":309,"line_end":309,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":171475,"byte_end":171490,"line_start":319,"line_end":319,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":171716,"byte_end":171746,"line_start":326,"line_end":326,"column_start":36,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":172575,"byte_end":172590,"line_start":351,"line_end":351,"column_start":58,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":172881,"byte_end":172904,"line_start":363,"line_end":363,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":173230,"byte_end":173253,"line_start":373,"line_end":373,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":174022,"byte_end":174045,"line_start":393,"line_end":393,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils.rs","byte_start":159875,"byte_end":159882,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils.rs","byte_start":160122,"byte_end":160129,"line_start":36,"line_end":36,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils.rs","byte_start":160816,"byte_end":160823,"line_start":62,"line_end":62,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils.rs","byte_start":161063,"byte_end":161070,"line_start":74,"line_end":74,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":181150,"byte_end":181160,"line_start":146,"line_end":146,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":181461,"byte_end":181471,"line_start":161,"line_end":161,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":186985,"byte_end":186995,"line_start":339,"line_end":339,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":187971,"byte_end":187981,"line_start":382,"line_end":382,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":188571,"byte_end":188581,"line_start":404,"line_end":404,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":188953,"byte_end":188963,"line_start":421,"line_end":421,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":5162},{"krate":0,"index":5164},{"krate":0,"index":5166},{"krate":0,"index":5168},{"krate":0,"index":5170},{"krate":0,"index":5172},{"krate":0,"index":5174},{"krate":0,"index":5176},{"krate":0,"index":5178},{"krate":0,"index":5180},{"krate":0,"index":5182},{"krate":0,"index":5184},{"krate":0,"index":5186},{"krate":0,"index":5188},{"krate":0,"index":5190},{"krate":0,"index":5192},{"krate":0,"index":5194},{"krate":0,"index":5196},{"krate":0,"index":5198},{"krate":0,"index":5200},{"krate":0,"index":5202},{"krate":0,"index":5204},{"krate":0,"index":5206},{"krate":0,"index":5208},{"krate":0,"index":5210},{"krate":0,"index":5212},{"krate":0,"index":5214},{"krate":0,"index":5216}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":190106,"byte_end":190116,"line_start":465,"line_end":465,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":190579,"byte_end":190589,"line_start":486,"line_end":486,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":191591,"byte_end":191607,"line_start":523,"line_end":523,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":192501,"byte_end":192517,"line_start":558,"line_end":558,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":5218},{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":5224},{"krate":0,"index":5226},{"krate":0,"index":5228},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5234},{"krate":0,"index":5236},{"krate":0,"index":5238},{"krate":0,"index":5240},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5246},{"krate":0,"index":5248},{"krate":0,"index":5250},{"krate":0,"index":5252},{"krate":0,"index":5254},{"krate":0,"index":5256},{"krate":0,"index":5258},{"krate":0,"index":5260},{"krate":0,"index":5262},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5268},{"krate":0,"index":5270},{"krate":0,"index":5272},{"krate":0,"index":5274},{"krate":0,"index":5276}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":193029,"byte_end":193045,"line_start":578,"line_end":578,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9841,"byte_end":9855,"line_start":279,"line_end":279,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10100,"byte_end":10114,"line_start":290,"line_end":290,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12343,"byte_end":12345,"line_start":340,"line_end":340,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7554,"byte_end":7556,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7610,"byte_end":7617,"line_start":211,"line_end":211,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":258}},{"kind":"Mod","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7703,"byte_end":7707,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":265}},{"kind":"Mod","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7717,"byte_end":7720,"line_start":217,"line_end":217,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":677}},{"kind":"Mod","span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":7756,"byte_end":7767,"line_start":220,"line_end":220,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":970}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":49520,"byte_end":49523,"line_start":19,"line_end":19,"column_start":48,"column_end":51},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":49852,"byte_end":49858,"line_start":33,"line_end":33,"column_start":51,"column_end":57},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":29547},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":50118,"byte_end":50131,"line_start":43,"line_end":43,"column_start":42,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":56503,"byte_end":56517,"line_start":243,"line_end":243,"column_start":40,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":5346},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":63714,"byte_end":63718,"line_start":403,"line_end":403,"column_start":58,"column_end":62},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":5337},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":66017,"byte_end":66034,"line_start":468,"line_end":468,"column_start":52,"column_end":69},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":5355},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":66297,"byte_end":66318,"line_start":477,"line_end":477,"column_start":41,"column_end":62},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":89},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":71783,"byte_end":71797,"line_start":629,"line_end":629,"column_start":45,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":5364},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":72857,"byte_end":72870,"line_start":662,"line_end":662,"column_start":43,"column_end":56},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5394},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":73116,"byte_end":73135,"line_start":671,"line_end":671,"column_start":54,"column_end":73},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3526},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/impls.rs","byte_start":75369,"byte_end":75382,"line_start":757,"line_end":757,"column_start":43,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5379},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48203,"byte_end":48208,"line_start":66,"line_end":66,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48573,"byte_end":48590,"line_start":80,"line_end":80,"column_start":17,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/de/mod.rs","byte_start":48743,"byte_end":48760,"line_start":87,"line_end":87,"column_start":38,"column_end":55},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3465},"to":{"krate":15,"index":1189}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":76565,"byte_end":76572,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":6235},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":77007,"byte_end":77015,"line_start":39,"line_end":39,"column_start":43,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":4682},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":77274,"byte_end":77281,"line_start":54,"line_end":54,"column_start":52,"column_end":59},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":6209},"to":{"krate":0,"index":161}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":77748,"byte_end":77756,"line_start":73,"line_end":73,"column_start":49,"column_end":57},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":670},"to":{"krate":0,"index":161}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":78646,"byte_end":78653,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":6235},"to":{"krate":0,"index":196}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":79185,"byte_end":79193,"line_start":43,"line_end":43,"column_start":45,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":4682},"to":{"krate":0,"index":196}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":79529,"byte_end":79536,"line_start":59,"line_end":59,"column_start":54,"column_end":61},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6209},"to":{"krate":0,"index":200}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/first_value_wins.rs","byte_start":80235,"byte_end":80243,"line_start":86,"line_end":86,"column_start":51,"column_end":59},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":670},"to":{"krate":0,"index":200}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/last_value_wins.rs","byte_start":81013,"byte_end":81020,"line_start":13,"line_end":13,"column_start":47,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":6235},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/duplicate_key_impls/last_value_wins.rs","byte_start":81499,"byte_end":81507,"line_start":33,"line_end":33,"column_start":44,"column_end":52},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4682},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":86881,"byte_end":86887,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3508},"to":{"krate":0,"index":262}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/formats.rs","byte_start":87037,"byte_end":87045,"line_start":84,"line_end":84,"column_start":21,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3517},"to":{"krate":0,"index":262}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":89766,"byte_end":89772,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":302},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":93459,"byte_end":93465,"line_start":209,"line_end":209,"column_start":39,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":340},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":97058,"byte_end":97077,"line_start":320,"line_end":320,"column_start":11,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":105374,"byte_end":105384,"line_start":571,"line_end":571,"column_start":42,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":393},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":108627,"byte_end":108637,"line_start":675,"line_end":675,"column_start":45,"column_end":55},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":418},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":110956,"byte_end":110966,"line_start":744,"line_end":744,"column_start":42,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":445},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":113237,"byte_end":113247,"line_start":813,"line_end":813,"column_start":42,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":469},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":116321,"byte_end":116331,"line_start":916,"line_end":916,"column_start":45,"column_end":55},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":494},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":119588,"byte_end":119609,"line_start":1027,"line_end":1027,"column_start":39,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":519},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":124646,"byte_end":124660,"line_start":1196,"line_end":1196,"column_start":42,"column_end":56},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":552},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":128064,"byte_end":128079,"line_start":1307,"line_end":1307,"column_start":38,"column_end":53},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":578},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":133102,"byte_end":133112,"line_start":1461,"line_end":1461,"column_start":41,"column_end":51},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":607},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":133714,"byte_end":133721,"line_start":1484,"line_end":1484,"column_start":37,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/rust.rs","byte_start":136467,"byte_end":136487,"line_start":1589,"line_end":1589,"column_start":32,"column_end":52},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":643},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":146959,"byte_end":146962,"line_start":12,"line_end":12,"column_start":36,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":147232,"byte_end":147238,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":29547},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":149344,"byte_end":149358,"line_start":88,"line_end":88,"column_start":28,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5346},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":153011,"byte_end":153015,"line_start":193,"line_end":193,"column_start":39,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5337},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":154072,"byte_end":154089,"line_start":226,"line_end":226,"column_start":50,"column_end":67},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5355},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":155964,"byte_end":155978,"line_start":284,"line_end":284,"column_start":33,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5364},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":156218,"byte_end":156231,"line_start":296,"line_end":296,"column_start":31,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5394},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":156443,"byte_end":156462,"line_start":305,"line_end":305,"column_start":42,"column_end":61},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3526},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/impls.rs","byte_start":158872,"byte_end":158885,"line_start":390,"line_end":390,"column_start":31,"column_end":44},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5379},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":146000,"byte_end":146015,"line_start":82,"line_end":82,"column_start":16,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":146231,"byte_end":146246,"line_start":92,"line_end":92,"column_start":30,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5118},"to":{"krate":15,"index":1677}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/ser/mod.rs","byte_start":146484,"byte_end":146499,"line_start":104,"line_end":104,"column_start":32,"column_end":47},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5118},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":163175,"byte_end":163179,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":163738,"byte_end":163752,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":164869,"byte_end":164883,"line_start":88,"line_end":88,"column_start":26,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5142},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":165047,"byte_end":165061,"line_start":97,"line_end":97,"column_start":28,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5142},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":165493,"byte_end":165508,"line_start":112,"line_end":112,"column_start":50,"column_end":65},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":166237,"byte_end":166252,"line_start":140,"line_end":140,"column_start":50,"column_end":65},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":166835,"byte_end":166850,"line_start":162,"line_end":162,"column_start":50,"column_end":65},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":167435,"byte_end":167450,"line_start":184,"line_end":184,"column_start":50,"column_end":65},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":168048,"byte_end":168071,"line_start":206,"line_end":206,"column_start":50,"column_end":73},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5423},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":168446,"byte_end":168469,"line_start":221,"line_end":221,"column_start":50,"column_end":73},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5423},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":168882,"byte_end":168905,"line_start":238,"line_end":238,"column_start":28,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":845},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":170311,"byte_end":170326,"line_start":284,"line_end":284,"column_start":50,"column_end":65},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":170625,"byte_end":170640,"line_start":293,"line_end":293,"column_start":50,"column_end":65},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":171126,"byte_end":171141,"line_start":309,"line_end":309,"column_start":50,"column_end":65},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":171475,"byte_end":171490,"line_start":319,"line_end":319,"column_start":50,"column_end":65},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":171716,"byte_end":171746,"line_start":326,"line_end":326,"column_start":36,"column_end":66},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":877},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":172575,"byte_end":172590,"line_start":351,"line_end":351,"column_start":58,"column_end":73},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5403},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":172881,"byte_end":172904,"line_start":363,"line_end":363,"column_start":50,"column_end":73},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5423},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":173230,"byte_end":173253,"line_start":373,"line_end":373,"column_start":50,"column_end":73},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5423},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils/duration.rs","byte_start":174022,"byte_end":174045,"line_start":393,"line_end":393,"column_start":58,"column_end":81},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5423},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils.rs","byte_start":159875,"byte_end":159882,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils.rs","byte_start":160122,"byte_end":160129,"line_start":36,"line_end":36,"column_start":43,"column_end":50},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils.rs","byte_start":160816,"byte_end":160823,"line_start":62,"line_end":62,"column_start":30,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/utils.rs","byte_start":161063,"byte_end":161070,"line_start":74,"line_end":74,"column_start":43,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":181150,"byte_end":181160,"line_start":146,"line_end":146,"column_start":27,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":990},"to":{"krate":15,"index":1677}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":181461,"byte_end":181471,"line_start":161,"line_end":161,"column_start":28,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":990},"to":{"krate":15,"index":1680}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":186985,"byte_end":186995,"line_start":339,"line_end":339,"column_start":30,"column_end":40},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":990},"to":{"krate":15,"index":1754}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":187971,"byte_end":187981,"line_start":382,"line_end":382,"column_start":33,"column_end":43},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":990},"to":{"krate":15,"index":1765}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":188571,"byte_end":188581,"line_start":404,"line_end":404,"column_start":43,"column_end":53},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":990},"to":{"krate":15,"index":1200}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":188953,"byte_end":188963,"line_start":421,"line_end":421,"column_start":40,"column_end":50},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":990},"to":{"krate":15,"index":1211}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":190106,"byte_end":190116,"line_start":465,"line_end":465,"column_start":35,"column_end":45},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":990},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":190579,"byte_end":190589,"line_start":486,"line_end":486,"column_start":37,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":990},"to":{"krate":15,"index":1347}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":191591,"byte_end":191607,"line_start":523,"line_end":523,"column_start":35,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1099},"to":{"krate":15,"index":1273}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":192501,"byte_end":192517,"line_start":558,"line_end":558,"column_start":40,"column_end":56},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1099},"to":{"krate":15,"index":1211}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/with_prefix.rs","byte_start":193029,"byte_end":193045,"line_start":578,"line_end":578,"column_start":37,"column_end":53},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1099},"to":{"krate":15,"index":1347}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":9841,"byte_end":9855,"line_start":279,"line_end":279,"column_start":20,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5278},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":10100,"byte_end":10114,"line_start":290,"line_end":290,"column_start":20,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5300},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/iut/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.0/src/lib.rs","byte_start":12343,"byte_end":12345,"line_start":340,"line_end":340,"column_start":9,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5322},"to":{"krate":4294967295,"index":4294967295}}]}